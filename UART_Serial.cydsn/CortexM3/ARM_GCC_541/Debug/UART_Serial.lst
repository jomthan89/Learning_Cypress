ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_Serial.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Serial_Init,"ax",%progbits
  20              		.align	2
  21              		.global	UART_Serial_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Serial_Init, %function
  25              	UART_Serial_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_Serial.c"
   1:Generated_Source\PSoC5/UART_Serial.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_Serial.c **** * File Name: UART_Serial.c
   3:Generated_Source\PSoC5/UART_Serial.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_Serial.c **** *
   5:Generated_Source\PSoC5/UART_Serial.c **** * Description:
   6:Generated_Source\PSoC5/UART_Serial.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_Serial.c **** *
   8:Generated_Source\PSoC5/UART_Serial.c **** * Note:
   9:Generated_Source\PSoC5/UART_Serial.c **** *
  10:Generated_Source\PSoC5/UART_Serial.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_Serial.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_Serial.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_Serial.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_Serial.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_Serial.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_Serial.c **** 
  17:Generated_Source\PSoC5/UART_Serial.c **** #include "UART_Serial.h"
  18:Generated_Source\PSoC5/UART_Serial.c **** #if (UART_Serial_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_Serial.c ****     #include "UART_Serial_IntClock.h"
  20:Generated_Source\PSoC5/UART_Serial.c **** #endif /* End UART_Serial_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_Serial.c **** 
  22:Generated_Source\PSoC5/UART_Serial.c **** 
  23:Generated_Source\PSoC5/UART_Serial.c **** /***************************************
  24:Generated_Source\PSoC5/UART_Serial.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_Serial.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_Serial.c **** 
  27:Generated_Source\PSoC5/UART_Serial.c **** uint8 UART_Serial_initVar = 0u;
  28:Generated_Source\PSoC5/UART_Serial.c **** 
  29:Generated_Source\PSoC5/UART_Serial.c **** #if (UART_Serial_TX_INTERRUPT_ENABLED && UART_Serial_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_Serial.c ****     volatile uint8 UART_Serial_txBuffer[UART_Serial_TX_BUFFER_SIZE];
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 2


  31:Generated_Source\PSoC5/UART_Serial.c ****     volatile uint8 UART_Serial_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_Serial.c ****     uint8 UART_Serial_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_Serial.c **** #endif /* (UART_Serial_TX_INTERRUPT_ENABLED && UART_Serial_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_Serial.c **** 
  35:Generated_Source\PSoC5/UART_Serial.c **** #if (UART_Serial_RX_INTERRUPT_ENABLED && (UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_Serial.c ****     uint8 UART_Serial_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_Serial.c ****     volatile uint8 UART_Serial_rxBuffer[UART_Serial_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_Serial.c ****     volatile uint16 UART_Serial_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_Serial.c ****     volatile uint16 UART_Serial_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_Serial.c ****     volatile uint8 UART_Serial_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_Serial.c ****     volatile uint8 UART_Serial_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_Serial.c ****         volatile uint8 UART_Serial_rxAddressMode = UART_Serial_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_Serial.c ****         volatile uint8 UART_Serial_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_Serial.c **** #endif /* (UART_Serial_RX_INTERRUPT_ENABLED && (UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED)) 
  47:Generated_Source\PSoC5/UART_Serial.c **** 
  48:Generated_Source\PSoC5/UART_Serial.c **** 
  49:Generated_Source\PSoC5/UART_Serial.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_Serial.c **** * Function Name: UART_Serial_Start
  51:Generated_Source\PSoC5/UART_Serial.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_Serial.c **** *
  53:Generated_Source\PSoC5/UART_Serial.c **** * Summary:
  54:Generated_Source\PSoC5/UART_Serial.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_Serial.c **** *  UART_Serial_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_Serial.c **** *  UART_Serial_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_Serial.c **** *  UART_Serial_Enable() function.
  58:Generated_Source\PSoC5/UART_Serial.c **** *
  59:Generated_Source\PSoC5/UART_Serial.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_Serial.c **** *  None.
  61:Generated_Source\PSoC5/UART_Serial.c **** *
  62:Generated_Source\PSoC5/UART_Serial.c **** * Return:
  63:Generated_Source\PSoC5/UART_Serial.c **** *  None.
  64:Generated_Source\PSoC5/UART_Serial.c **** *
  65:Generated_Source\PSoC5/UART_Serial.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_Serial.c **** *  The UART_Serial_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_Serial.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_Serial.c **** *  and set to one (1u) the first time UART_Serial_Start() is called. This
  69:Generated_Source\PSoC5/UART_Serial.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_Serial.c **** *  subsequent calls to the UART_Serial_Start() routine.
  71:Generated_Source\PSoC5/UART_Serial.c **** *
  72:Generated_Source\PSoC5/UART_Serial.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_Serial.c **** *  No.
  74:Generated_Source\PSoC5/UART_Serial.c **** *
  75:Generated_Source\PSoC5/UART_Serial.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_Serial.c **** void UART_Serial_Start(void) 
  77:Generated_Source\PSoC5/UART_Serial.c **** {
  78:Generated_Source\PSoC5/UART_Serial.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_Serial.c ****     if(UART_Serial_initVar == 0u)
  80:Generated_Source\PSoC5/UART_Serial.c ****     {
  81:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_Init();
  82:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_initVar = 1u;
  83:Generated_Source\PSoC5/UART_Serial.c ****     }
  84:Generated_Source\PSoC5/UART_Serial.c **** 
  85:Generated_Source\PSoC5/UART_Serial.c ****     UART_Serial_Enable();
  86:Generated_Source\PSoC5/UART_Serial.c **** }
  87:Generated_Source\PSoC5/UART_Serial.c **** 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 3


  88:Generated_Source\PSoC5/UART_Serial.c **** 
  89:Generated_Source\PSoC5/UART_Serial.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_Serial.c **** * Function Name: UART_Serial_Init
  91:Generated_Source\PSoC5/UART_Serial.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_Serial.c **** *
  93:Generated_Source\PSoC5/UART_Serial.c **** * Summary:
  94:Generated_Source\PSoC5/UART_Serial.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_Serial.c **** *  dialog settings. It is not necessary to call UART_Serial_Init() because
  96:Generated_Source\PSoC5/UART_Serial.c **** *  the UART_Serial_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_Serial.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_Serial.c **** *
  99:Generated_Source\PSoC5/UART_Serial.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_Serial.c **** *  None.
 101:Generated_Source\PSoC5/UART_Serial.c **** *
 102:Generated_Source\PSoC5/UART_Serial.c **** * Return:
 103:Generated_Source\PSoC5/UART_Serial.c **** *  None.
 104:Generated_Source\PSoC5/UART_Serial.c **** *
 105:Generated_Source\PSoC5/UART_Serial.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_Serial.c **** void UART_Serial_Init(void) 
 107:Generated_Source\PSoC5/UART_Serial.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 108:Generated_Source\PSoC5/UART_Serial.c ****     #if(UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_Serial.c **** 
 110:Generated_Source\PSoC5/UART_Serial.c ****         #if (UART_Serial_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_Serial.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_Serial.c ****             (void) CyIntSetVector(UART_Serial_RX_VECT_NUM, &UART_Serial_RXISR);
  36              		.loc 1 112 0
  37 0002 0E49     		ldr	r1, .L3
  38 0004 0020     		movs	r0, #0
  39 0006 FFF7FEFF 		bl	CyIntSetVector
  40              	.LVL0:
 113:Generated_Source\PSoC5/UART_Serial.c ****             CyIntSetPriority(UART_Serial_RX_VECT_NUM, UART_Serial_RX_PRIOR_NUM);
  41              		.loc 1 113 0
  42 000a 0721     		movs	r1, #7
  43 000c 0020     		movs	r0, #0
  44 000e FFF7FEFF 		bl	CyIntSetPriority
  45              	.LVL1:
 114:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_errorStatus = 0u;
  46              		.loc 1 114 0
  47 0012 0023     		movs	r3, #0
  48 0014 0A4A     		ldr	r2, .L3+4
  49 0016 1370     		strb	r3, [r2]
 115:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (UART_Serial_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_Serial.c **** 
 117:Generated_Source\PSoC5/UART_Serial.c ****         #if (UART_Serial_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_SetRxAddressMode(UART_Serial_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_SetRxAddress1(UART_Serial_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_SetRxAddress2(UART_Serial_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* End UART_Serial_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_Serial.c **** 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 4


 123:Generated_Source\PSoC5/UART_Serial.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXBITCTR_PERIOD_REG = UART_Serial_RXBITCTR_INIT;
  50              		.loc 1 124 0
  51 0018 7221     		movs	r1, #114
  52 001a 0A4A     		ldr	r2, .L3+8
  53 001c 1170     		strb	r1, [r2]
 125:Generated_Source\PSoC5/UART_Serial.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXSTATUS_MASK_REG  = UART_Serial_INIT_RX_INTERRUPTS_MASK;
  54              		.loc 1 126 0
  55 001e 2021     		movs	r1, #32
  56 0020 A2F58072 		sub	r2, r2, #256
  57 0024 1170     		strb	r1, [r2]
 127:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* End UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_Serial.c **** 
 129:Generated_Source\PSoC5/UART_Serial.c ****     #if(UART_Serial_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_Serial.c ****         #if (UART_Serial_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_Serial.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_Serial.c ****             (void) CyIntSetVector(UART_Serial_TX_VECT_NUM, &UART_Serial_TXISR);
 133:Generated_Source\PSoC5/UART_Serial.c ****             CyIntSetPriority(UART_Serial_TX_VECT_NUM, UART_Serial_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (UART_Serial_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_Serial.c **** 
 136:Generated_Source\PSoC5/UART_Serial.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_Serial.c ****         #if (UART_Serial_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_TXBITCLKGEN_CTR_REG = UART_Serial_BIT_CENTER;
  58              		.loc 1 138 0
  59 0026 0621     		movs	r1, #6
  60 0028 613A     		subs	r2, r2, #97
  61 002a 1170     		strb	r1, [r2]
 139:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_TXBITCLKTX_COMPLETE_REG = ((UART_Serial_NUMBER_OF_DATA_BITS +
  62              		.loc 1 139 0
  63 002c 4721     		movs	r1, #71
  64 002e 1032     		adds	r2, r2, #16
  65 0030 1170     		strb	r1, [r2]
 140:Generated_Source\PSoC5/UART_Serial.c ****                         UART_Serial_NUMBER_OF_START_BIT) * UART_Serial_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_Serial.c ****         #else
 142:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_TXBITCTR_PERIOD_REG = ((UART_Serial_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_Serial.c ****                         UART_Serial_NUMBER_OF_START_BIT) * UART_Serial_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* End UART_Serial_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_Serial.c **** 
 146:Generated_Source\PSoC5/UART_Serial.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_Serial.c ****         #if (UART_Serial_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_TXSTATUS_MASK_REG = UART_Serial_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_Serial.c ****         #else
 150:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_TXSTATUS_MASK_REG = UART_Serial_INIT_TX_INTERRUPTS_MASK;
  66              		.loc 1 150 0
  67 0032 02F24F12 		addw	r2, r2, #335
  68 0036 1370     		strb	r3, [r2]
  69 0038 08BD     		pop	{r3, pc}
  70              	.L4:
  71 003a 00BF     		.align	2
  72              	.L3:
  73 003c 00000000 		.word	UART_Serial_RXISR
  74 0040 00000000 		.word	.LANCHOR0
  75 0044 87650040 		.word	1073767815
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	UART_Serial_Init, .-UART_Serial_Init
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 5


  79              		.section	.text.UART_Serial_Enable,"ax",%progbits
  80              		.align	2
  81              		.global	UART_Serial_Enable
  82              		.thumb
  83              		.thumb_func
  84              		.type	UART_Serial_Enable, %function
  85              	UART_Serial_Enable:
  86              	.LFB2:
 151:Generated_Source\PSoC5/UART_Serial.c ****         #endif /*End UART_Serial_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_Serial.c **** 
 153:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* End UART_Serial_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_Serial.c **** 
 155:Generated_Source\PSoC5/UART_Serial.c ****     #if(UART_Serial_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_Serial.c ****             (UART_Serial_ReadControlRegister() & (uint8)~UART_Serial_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_Serial.c ****             (uint8)(UART_Serial_PARITY_TYPE << UART_Serial_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* End UART_Serial_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_Serial.c **** }
 161:Generated_Source\PSoC5/UART_Serial.c **** 
 162:Generated_Source\PSoC5/UART_Serial.c **** 
 163:Generated_Source\PSoC5/UART_Serial.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_Serial.c **** * Function Name: UART_Serial_Enable
 165:Generated_Source\PSoC5/UART_Serial.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_Serial.c **** *
 167:Generated_Source\PSoC5/UART_Serial.c **** * Summary:
 168:Generated_Source\PSoC5/UART_Serial.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_Serial.c **** *  to call UART_Serial_Enable() because the UART_Serial_Start() API
 170:Generated_Source\PSoC5/UART_Serial.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_Serial.c **** *  operation.
 172:Generated_Source\PSoC5/UART_Serial.c **** 
 173:Generated_Source\PSoC5/UART_Serial.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_Serial.c **** *  None.
 175:Generated_Source\PSoC5/UART_Serial.c **** *
 176:Generated_Source\PSoC5/UART_Serial.c **** * Return:
 177:Generated_Source\PSoC5/UART_Serial.c **** *  None.
 178:Generated_Source\PSoC5/UART_Serial.c **** *
 179:Generated_Source\PSoC5/UART_Serial.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_Serial.c **** *  UART_Serial_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_Serial.c **** *
 182:Generated_Source\PSoC5/UART_Serial.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_Serial.c **** void UART_Serial_Enable(void) 
 184:Generated_Source\PSoC5/UART_Serial.c **** {
  87              		.loc 1 184 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 08B5     		push	{r3, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 3, -8
  94              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART_Serial.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_Serial.c ****     enableInterrupts = CyEnterCriticalSection();
  95              		.loc 1 186 0
  96 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  97              	.LVL2:
 187:Generated_Source\PSoC5/UART_Serial.c **** 
 188:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED)
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 6


 189:Generated_Source\PSoC5/UART_Serial.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXBITCTR_CONTROL_REG |= UART_Serial_CNTR_ENABLE;
  98              		.loc 1 190 0
  99 0006 0B4A     		ldr	r2, .L7
 100 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 101 000a 43F02003 		orr	r3, r3, #32
 102 000e 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART_Serial.c **** 
 192:Generated_Source\PSoC5/UART_Serial.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXSTATUS_ACTL_REG  |= UART_Serial_INT_ENABLE;
 103              		.loc 1 193 0
 104 0010 A2F58072 		sub	r2, r2, #256
 105 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 106 0016 43F01003 		orr	r3, r3, #16
 107 001a 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART_Serial.c **** 
 195:Generated_Source\PSoC5/UART_Serial.c ****         #if (UART_Serial_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_EnableRxInt();
 108              		.loc 1 196 0
 109 001c 0122     		movs	r2, #1
 110 001e 064B     		ldr	r3, .L7+4
 111 0020 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC5/UART_Serial.c **** 
 198:Generated_Source\PSoC5/UART_Serial.c ****             #if (UART_Serial_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_Serial.c ****             #endif /* (UART_Serial_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (UART_Serial_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_Serial.c **** 
 204:Generated_Source\PSoC5/UART_Serial.c ****     #if(UART_Serial_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_Serial.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_Serial.c ****         #if(!UART_Serial_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_TXBITCTR_CONTROL_REG |= UART_Serial_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* End UART_Serial_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_Serial.c **** 
 210:Generated_Source\PSoC5/UART_Serial.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_TXSTATUS_ACTL_REG |= UART_Serial_INT_ENABLE;
 112              		.loc 1 211 0
 113 0022 064A     		ldr	r2, .L7+8
 114 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 115 0026 43F01003 		orr	r3, r3, #16
 116 002a 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_Serial.c ****         #if (UART_Serial_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_EnableTxInt();
 215:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (UART_Serial_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_Serial.c ****      #endif /* (UART_Serial_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_Serial.c **** 
 218:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_IntClock_Start();  /* Enable the clock */
 220:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_Serial.c **** 
 222:Generated_Source\PSoC5/UART_Serial.c ****     CyExitCriticalSection(enableInterrupts);
 117              		.loc 1 222 0
 118 002c FFF7FEFF 		bl	CyExitCriticalSection
 119              	.LVL3:
 120 0030 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 7


 121              	.L8:
 122 0032 00BF     		.align	2
 123              	.L7:
 124 0034 97650040 		.word	1073767831
 125 0038 00E100E0 		.word	-536813312
 126 003c 95650040 		.word	1073767829
 127              		.cfi_endproc
 128              	.LFE2:
 129              		.size	UART_Serial_Enable, .-UART_Serial_Enable
 130              		.section	.text.UART_Serial_Start,"ax",%progbits
 131              		.align	2
 132              		.global	UART_Serial_Start
 133              		.thumb
 134              		.thumb_func
 135              		.type	UART_Serial_Start, %function
 136              	UART_Serial_Start:
 137              	.LFB0:
  77:Generated_Source\PSoC5/UART_Serial.c ****     /* If not initialized then initialize all required hardware and software */
 138              		.loc 1 77 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 08B5     		push	{r3, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 3, -8
 145              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART_Serial.c ****     {
 146              		.loc 1 79 0
 147 0002 054B     		ldr	r3, .L12
 148 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 149 0006 23B9     		cbnz	r3, .L10
  81:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_initVar = 1u;
 150              		.loc 1 81 0
 151 0008 FFF7FEFF 		bl	UART_Serial_Init
 152              	.LVL4:
  82:Generated_Source\PSoC5/UART_Serial.c ****     }
 153              		.loc 1 82 0
 154 000c 0122     		movs	r2, #1
 155 000e 024B     		ldr	r3, .L12
 156 0010 5A70     		strb	r2, [r3, #1]
 157              	.L10:
  85:Generated_Source\PSoC5/UART_Serial.c **** }
 158              		.loc 1 85 0
 159 0012 FFF7FEFF 		bl	UART_Serial_Enable
 160              	.LVL5:
 161 0016 08BD     		pop	{r3, pc}
 162              	.L13:
 163              		.align	2
 164              	.L12:
 165 0018 00000000 		.word	.LANCHOR0
 166              		.cfi_endproc
 167              	.LFE0:
 168              		.size	UART_Serial_Start, .-UART_Serial_Start
 169              		.section	.text.UART_Serial_Stop,"ax",%progbits
 170              		.align	2
 171              		.global	UART_Serial_Stop
 172              		.thumb
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 8


 173              		.thumb_func
 174              		.type	UART_Serial_Stop, %function
 175              	UART_Serial_Stop:
 176              	.LFB3:
 223:Generated_Source\PSoC5/UART_Serial.c **** }
 224:Generated_Source\PSoC5/UART_Serial.c **** 
 225:Generated_Source\PSoC5/UART_Serial.c **** 
 226:Generated_Source\PSoC5/UART_Serial.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_Serial.c **** * Function Name: UART_Serial_Stop
 228:Generated_Source\PSoC5/UART_Serial.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_Serial.c **** *
 230:Generated_Source\PSoC5/UART_Serial.c **** * Summary:
 231:Generated_Source\PSoC5/UART_Serial.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_Serial.c **** *
 233:Generated_Source\PSoC5/UART_Serial.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_Serial.c **** *  None.
 235:Generated_Source\PSoC5/UART_Serial.c **** *
 236:Generated_Source\PSoC5/UART_Serial.c **** * Return:
 237:Generated_Source\PSoC5/UART_Serial.c **** *  None.
 238:Generated_Source\PSoC5/UART_Serial.c **** *
 239:Generated_Source\PSoC5/UART_Serial.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_Serial.c **** void UART_Serial_Stop(void) 
 241:Generated_Source\PSoC5/UART_Serial.c **** {
 177              		.loc 1 241 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 08B5     		push	{r3, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART_Serial.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_Serial.c ****     enableInterrupts = CyEnterCriticalSection();
 185              		.loc 1 243 0
 186 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 187              	.LVL6:
 244:Generated_Source\PSoC5/UART_Serial.c **** 
 245:Generated_Source\PSoC5/UART_Serial.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXBITCTR_CONTROL_REG &= (uint8) ~UART_Serial_CNTR_ENABLE;
 188              		.loc 1 247 0
 189 0006 0B4A     		ldr	r2, .L16
 190 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 191 000a 03F0DF03 		and	r3, r3, #223
 192 000e 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_Serial.c **** 
 250:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_Serial.c ****         #if(!UART_Serial_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_TXBITCTR_CONTROL_REG &= (uint8) ~UART_Serial_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (!UART_Serial_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_Serial.c **** 
 256:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_IntClock_Stop();   /* Disable the clock */
 258:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_Serial.c **** 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 9


 260:Generated_Source\PSoC5/UART_Serial.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXSTATUS_ACTL_REG  &= (uint8) ~UART_Serial_INT_ENABLE;
 193              		.loc 1 262 0
 194 0010 A2F58072 		sub	r2, r2, #256
 195 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 196 0016 03F0EF03 		and	r3, r3, #239
 197 001a 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART_Serial.c **** 
 264:Generated_Source\PSoC5/UART_Serial.c ****         #if (UART_Serial_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_DisableRxInt();
 198              		.loc 1 265 0
 199 001c 0122     		movs	r2, #1
 200 001e 064B     		ldr	r3, .L16+4
 201 0020 1A60     		str	r2, [r3]
 266:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (UART_Serial_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_Serial.c **** 
 269:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_TXSTATUS_ACTL_REG &= (uint8) ~UART_Serial_INT_ENABLE;
 202              		.loc 1 270 0
 203 0022 064A     		ldr	r2, .L16+8
 204 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 205 0026 03F0EF03 		and	r3, r3, #239
 206 002a 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_Serial.c **** 
 272:Generated_Source\PSoC5/UART_Serial.c ****         #if (UART_Serial_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_DisableTxInt();
 274:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (UART_Serial_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_Serial.c **** 
 277:Generated_Source\PSoC5/UART_Serial.c ****     CyExitCriticalSection(enableInterrupts);
 207              		.loc 1 277 0
 208 002c FFF7FEFF 		bl	CyExitCriticalSection
 209              	.LVL7:
 210 0030 08BD     		pop	{r3, pc}
 211              	.L17:
 212 0032 00BF     		.align	2
 213              	.L16:
 214 0034 97650040 		.word	1073767831
 215 0038 80E100E0 		.word	-536813184
 216 003c 95650040 		.word	1073767829
 217              		.cfi_endproc
 218              	.LFE3:
 219              		.size	UART_Serial_Stop, .-UART_Serial_Stop
 220              		.section	.text.UART_Serial_ReadControlRegister,"ax",%progbits
 221              		.align	2
 222              		.global	UART_Serial_ReadControlRegister
 223              		.thumb
 224              		.thumb_func
 225              		.type	UART_Serial_ReadControlRegister, %function
 226              	UART_Serial_ReadControlRegister:
 227              	.LFB4:
 278:Generated_Source\PSoC5/UART_Serial.c **** }
 279:Generated_Source\PSoC5/UART_Serial.c **** 
 280:Generated_Source\PSoC5/UART_Serial.c **** 
 281:Generated_Source\PSoC5/UART_Serial.c **** /*******************************************************************************
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 10


 282:Generated_Source\PSoC5/UART_Serial.c **** * Function Name: UART_Serial_ReadControlRegister
 283:Generated_Source\PSoC5/UART_Serial.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_Serial.c **** *
 285:Generated_Source\PSoC5/UART_Serial.c **** * Summary:
 286:Generated_Source\PSoC5/UART_Serial.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_Serial.c **** *
 288:Generated_Source\PSoC5/UART_Serial.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_Serial.c **** *  None.
 290:Generated_Source\PSoC5/UART_Serial.c **** *
 291:Generated_Source\PSoC5/UART_Serial.c **** * Return:
 292:Generated_Source\PSoC5/UART_Serial.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_Serial.c **** *
 294:Generated_Source\PSoC5/UART_Serial.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_Serial.c **** uint8 UART_Serial_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_Serial.c **** {
 228              		.loc 1 296 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_Serial.c ****         return(0u);
 299:Generated_Source\PSoC5/UART_Serial.c ****     #else
 300:Generated_Source\PSoC5/UART_Serial.c ****         return(UART_Serial_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_Serial.c **** }
 233              		.loc 1 302 0
 234 0000 0020     		movs	r0, #0
 235 0002 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE4:
 238              		.size	UART_Serial_ReadControlRegister, .-UART_Serial_ReadControlRegister
 239              		.section	.text.UART_Serial_WriteControlRegister,"ax",%progbits
 240              		.align	2
 241              		.global	UART_Serial_WriteControlRegister
 242              		.thumb
 243              		.thumb_func
 244              		.type	UART_Serial_WriteControlRegister, %function
 245              	UART_Serial_WriteControlRegister:
 246              	.LFB5:
 303:Generated_Source\PSoC5/UART_Serial.c **** 
 304:Generated_Source\PSoC5/UART_Serial.c **** 
 305:Generated_Source\PSoC5/UART_Serial.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_Serial.c **** * Function Name: UART_Serial_WriteControlRegister
 307:Generated_Source\PSoC5/UART_Serial.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_Serial.c **** *
 309:Generated_Source\PSoC5/UART_Serial.c **** * Summary:
 310:Generated_Source\PSoC5/UART_Serial.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_Serial.c **** *
 312:Generated_Source\PSoC5/UART_Serial.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_Serial.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_Serial.c **** *
 315:Generated_Source\PSoC5/UART_Serial.c **** * Return:
 316:Generated_Source\PSoC5/UART_Serial.c **** *  None.
 317:Generated_Source\PSoC5/UART_Serial.c **** *
 318:Generated_Source\PSoC5/UART_Serial.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_Serial.c **** void  UART_Serial_WriteControlRegister(uint8 control) 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 11


 320:Generated_Source\PSoC5/UART_Serial.c **** {
 247              		.loc 1 320 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252              	.LVL8:
 253 0000 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE5:
 256              		.size	UART_Serial_WriteControlRegister, .-UART_Serial_WriteControlRegister
 257 0002 00BF     		.section	.text.UART_Serial_SetRxInterruptMode,"ax",%progbits
 258              		.align	2
 259              		.global	UART_Serial_SetRxInterruptMode
 260              		.thumb
 261              		.thumb_func
 262              		.type	UART_Serial_SetRxInterruptMode, %function
 263              	UART_Serial_SetRxInterruptMode:
 264              	.LFB6:
 321:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_Serial.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_Serial.c ****         {
 324:Generated_Source\PSoC5/UART_Serial.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_Serial.c ****         }
 326:Generated_Source\PSoC5/UART_Serial.c ****     #else
 327:Generated_Source\PSoC5/UART_Serial.c ****        UART_Serial_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_Serial.c **** }
 330:Generated_Source\PSoC5/UART_Serial.c **** 
 331:Generated_Source\PSoC5/UART_Serial.c **** 
 332:Generated_Source\PSoC5/UART_Serial.c **** #if(UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_Serial.c ****     *
 337:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_Serial.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_Serial.c ****     *
 340:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_Serial.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_Serial.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_Serial.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_Serial.c ****     *      UART_Serial_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_Serial.c ****     *      UART_Serial_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_Serial.c ****     *      UART_Serial_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_Serial.c ****     *      UART_Serial_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_Serial.c ****     *      UART_Serial_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_Serial.c ****     *      UART_Serial_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_Serial.c ****     *      UART_Serial_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_Serial.c ****     *
 352:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 353:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 354:Generated_Source\PSoC5/UART_Serial.c ****     *
 355:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_Serial.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_Serial.c ****     *
 358:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 12


 359:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_Serial.c ****     {
 265              		.loc 1 360 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270              	.LVL9:
 361:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXSTATUS_MASK_REG  = intSrc;
 271              		.loc 1 361 0
 272 0000 014B     		ldr	r3, .L21
 273 0002 1870     		strb	r0, [r3]
 274 0004 7047     		bx	lr
 275              	.L22:
 276 0006 00BF     		.align	2
 277              	.L21:
 278 0008 87640040 		.word	1073767559
 279              		.cfi_endproc
 280              	.LFE6:
 281              		.size	UART_Serial_SetRxInterruptMode, .-UART_Serial_SetRxInterruptMode
 282              		.section	.text.UART_Serial_ReadRxData,"ax",%progbits
 283              		.align	2
 284              		.global	UART_Serial_ReadRxData
 285              		.thumb
 286              		.thumb_func
 287              		.type	UART_Serial_ReadRxData, %function
 288              	UART_Serial_ReadRxData:
 289              	.LFB7:
 362:Generated_Source\PSoC5/UART_Serial.c ****     }
 363:Generated_Source\PSoC5/UART_Serial.c **** 
 364:Generated_Source\PSoC5/UART_Serial.c **** 
 365:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_ReadRxData
 367:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_Serial.c ****     *
 369:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_Serial.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_Serial.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_Serial.c ****     *
 373:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 375:Generated_Source\PSoC5/UART_Serial.c ****     *
 376:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 377:Generated_Source\PSoC5/UART_Serial.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_Serial.c ****     *
 379:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_Serial.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_Serial.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_Serial.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_Serial.c ****     *
 388:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
 390:Generated_Source\PSoC5/UART_Serial.c ****     *
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 13


 391:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_Serial.c ****     uint8 UART_Serial_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_Serial.c ****     {
 290              		.loc 1 393 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART_Serial.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_Serial.c **** 
 396:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_Serial.c **** 
 398:Generated_Source\PSoC5/UART_Serial.c ****         uint16 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_Serial.c ****         uint16 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_Serial.c **** 
 401:Generated_Source\PSoC5/UART_Serial.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_DisableRxInt();
 295              		.loc 1 402 0
 296 0000 0122     		movs	r2, #1
 297 0002 134B     		ldr	r3, .L29
 298 0004 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC5/UART_Serial.c **** 
 404:Generated_Source\PSoC5/UART_Serial.c ****         locRxBufferRead  = UART_Serial_rxBufferRead;
 299              		.loc 1 404 0
 300 0006 134A     		ldr	r2, .L29+4
 301 0008 5388     		ldrh	r3, [r2, #2]
 302 000a 9BB2     		uxth	r3, r3
 303              	.LVL10:
 405:Generated_Source\PSoC5/UART_Serial.c ****         locRxBufferWrite = UART_Serial_rxBufferWrite;
 304              		.loc 1 405 0
 305 000c 9188     		ldrh	r1, [r2, #4]
 306 000e 89B2     		uxth	r1, r1
 307              	.LVL11:
 406:Generated_Source\PSoC5/UART_Serial.c **** 
 407:Generated_Source\PSoC5/UART_Serial.c ****         if( (UART_Serial_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 308              		.loc 1 407 0
 309 0010 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 310 0012 12F0FF0F 		tst	r2, #255
 311 0016 01D1     		bne	.L24
 312              		.loc 1 407 0 is_stmt 0 discriminator 1
 313 0018 8B42     		cmp	r3, r1
 314 001a 12D0     		beq	.L25
 315              	.L24:
 408:Generated_Source\PSoC5/UART_Serial.c ****         {
 409:Generated_Source\PSoC5/UART_Serial.c ****             rxData = UART_Serial_rxBuffer[locRxBufferRead];
 316              		.loc 1 409 0 is_stmt 1
 317 001c 0E4A     		ldr	r2, .L29+8
 318 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 319 0020 C0B2     		uxtb	r0, r0
 320              	.LVL12:
 410:Generated_Source\PSoC5/UART_Serial.c ****             locRxBufferRead++;
 321              		.loc 1 410 0
 322 0022 0133     		adds	r3, r3, #1
 323              	.LVL13:
 324 0024 9BB2     		uxth	r3, r3
 325              	.LVL14:
 411:Generated_Source\PSoC5/UART_Serial.c **** 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 14


 412:Generated_Source\PSoC5/UART_Serial.c ****             if(locRxBufferRead >= UART_Serial_RX_BUFFER_SIZE)
 326              		.loc 1 412 0
 327 0026 B3F5C86F 		cmp	r3, #1600
 328 002a 00D3     		bcc	.L26
 413:Generated_Source\PSoC5/UART_Serial.c ****             {
 414:Generated_Source\PSoC5/UART_Serial.c ****                 locRxBufferRead = 0u;
 329              		.loc 1 414 0
 330 002c 0023     		movs	r3, #0
 331              	.LVL15:
 332              	.L26:
 415:Generated_Source\PSoC5/UART_Serial.c ****             }
 416:Generated_Source\PSoC5/UART_Serial.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_rxBufferRead = locRxBufferRead;
 333              		.loc 1 417 0
 334 002e 094A     		ldr	r2, .L29+4
 335 0030 5380     		strh	r3, [r2, #2]	@ movhi
 418:Generated_Source\PSoC5/UART_Serial.c **** 
 419:Generated_Source\PSoC5/UART_Serial.c ****             if(UART_Serial_rxBufferLoopDetect != 0u)
 336              		.loc 1 419 0
 337 0032 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 338              	.LVL16:
 339 0034 13F0FF0F 		tst	r3, #255
 340 0038 06D0     		beq	.L27
 420:Generated_Source\PSoC5/UART_Serial.c ****             {
 421:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_rxBufferLoopDetect = 0u;
 341              		.loc 1 421 0
 342 003a 0022     		movs	r2, #0
 343 003c 054B     		ldr	r3, .L29+4
 344 003e 9A71     		strb	r2, [r3, #6]
 345              	.LVL17:
 346 0040 02E0     		b	.L27
 347              	.LVL18:
 348              	.L25:
 422:Generated_Source\PSoC5/UART_Serial.c ****                 #if ((UART_Serial_RX_INTERRUPT_ENABLED) && (UART_Serial_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_Serial.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_Serial.c ****                     #if( UART_Serial_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_Serial.c ****                         if((UART_Serial_CONTROL_REG & UART_Serial_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_Serial.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_Serial.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_Serial.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_Serial.c ****                             */
 430:Generated_Source\PSoC5/UART_Serial.c ****                             UART_Serial_RXSTATUS_MASK_REG  |= UART_Serial_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_Serial.c ****                         }
 432:Generated_Source\PSoC5/UART_Serial.c ****                     #else
 433:Generated_Source\PSoC5/UART_Serial.c ****                         UART_Serial_RXSTATUS_MASK_REG  |= UART_Serial_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_Serial.c ****                     #endif /* end UART_Serial_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_Serial.c ****                 #endif /* ((UART_Serial_RX_INTERRUPT_ENABLED) && (UART_Serial_FLOW_CONTROL != 0u)) 
 436:Generated_Source\PSoC5/UART_Serial.c ****             }
 437:Generated_Source\PSoC5/UART_Serial.c ****         }
 438:Generated_Source\PSoC5/UART_Serial.c ****         else
 439:Generated_Source\PSoC5/UART_Serial.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_Serial.c ****             rxData = UART_Serial_RXDATA_REG;
 349              		.loc 1 440 0
 350 0042 064B     		ldr	r3, .L29+12
 351              	.LVL19:
 352 0044 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 353 0046 C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 15


 354              	.LVL20:
 355              	.L27:
 441:Generated_Source\PSoC5/UART_Serial.c ****         }
 442:Generated_Source\PSoC5/UART_Serial.c **** 
 443:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_EnableRxInt();
 356              		.loc 1 443 0
 357 0048 0122     		movs	r2, #1
 358 004a 054B     		ldr	r3, .L29+16
 359 004c 1A60     		str	r2, [r3]
 444:Generated_Source\PSoC5/UART_Serial.c **** 
 445:Generated_Source\PSoC5/UART_Serial.c ****     #else
 446:Generated_Source\PSoC5/UART_Serial.c **** 
 447:Generated_Source\PSoC5/UART_Serial.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_Serial.c ****         rxData = UART_Serial_RXDATA_REG;
 449:Generated_Source\PSoC5/UART_Serial.c **** 
 450:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_Serial.c **** 
 452:Generated_Source\PSoC5/UART_Serial.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART_Serial.c ****     }
 360              		.loc 1 453 0
 361 004e 7047     		bx	lr
 362              	.L30:
 363              		.align	2
 364              	.L29:
 365 0050 80E100E0 		.word	-536813184
 366 0054 00000000 		.word	.LANCHOR0
 367 0058 00000000 		.word	UART_Serial_rxBuffer
 368 005c 44650040 		.word	1073767748
 369 0060 00E100E0 		.word	-536813312
 370              		.cfi_endproc
 371              	.LFE7:
 372              		.size	UART_Serial_ReadRxData, .-UART_Serial_ReadRxData
 373              		.section	.text.UART_Serial_ReadRxStatus,"ax",%progbits
 374              		.align	2
 375              		.global	UART_Serial_ReadRxStatus
 376              		.thumb
 377              		.thumb_func
 378              		.type	UART_Serial_ReadRxStatus, %function
 379              	UART_Serial_ReadRxStatus:
 380              	.LFB8:
 454:Generated_Source\PSoC5/UART_Serial.c **** 
 455:Generated_Source\PSoC5/UART_Serial.c **** 
 456:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_ReadRxStatus
 458:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_Serial.c ****     *
 460:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_Serial.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_Serial.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_Serial.c ****     *
 464:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 466:Generated_Source\PSoC5/UART_Serial.c ****     *
 467:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 468:Generated_Source\PSoC5/UART_Serial.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_Serial.c ****     *
 470:Generated_Source\PSoC5/UART_Serial.c ****     * Side Effect:
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 16


 471:Generated_Source\PSoC5/UART_Serial.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_Serial.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_Serial.c ****     *
 476:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_Serial.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_Serial.c ****     *   UART_Serial_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_Serial.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_Serial.c ****     *   UART_Serial_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_Serial.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_Serial.c ****     *
 484:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_Serial.c ****     uint8 UART_Serial_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_Serial.c ****     {
 381              		.loc 1 486 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART_Serial.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_Serial.c **** 
 489:Generated_Source\PSoC5/UART_Serial.c ****         status = UART_Serial_RXSTATUS_REG & UART_Serial_RX_HW_MASK;
 386              		.loc 1 489 0
 387 0000 074B     		ldr	r3, .L33
 388 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 389 0004 00F07F00 		and	r0, r0, #127
 390              	.LVL21:
 490:Generated_Source\PSoC5/UART_Serial.c **** 
 491:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_Serial.c ****         if(UART_Serial_rxBufferOverflow != 0u)
 391              		.loc 1 492 0
 392 0008 064B     		ldr	r3, .L33+4
 393 000a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 394 000c 13F0FF0F 		tst	r3, #255
 395 0010 04D0     		beq	.L32
 493:Generated_Source\PSoC5/UART_Serial.c ****         {
 494:Generated_Source\PSoC5/UART_Serial.c ****             status |= UART_Serial_RX_STS_SOFT_BUFF_OVER;
 396              		.loc 1 494 0
 397 0012 40F08000 		orr	r0, r0, #128
 398              	.LVL22:
 495:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_rxBufferOverflow = 0u;
 399              		.loc 1 495 0
 400 0016 0022     		movs	r2, #0
 401 0018 024B     		ldr	r3, .L33+4
 402 001a DA71     		strb	r2, [r3, #7]
 403              	.L32:
 496:Generated_Source\PSoC5/UART_Serial.c ****         }
 497:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_Serial.c **** 
 499:Generated_Source\PSoC5/UART_Serial.c ****         return(status);
 500:Generated_Source\PSoC5/UART_Serial.c ****     }
 404              		.loc 1 500 0
 405 001c 7047     		bx	lr
 406              	.L34:
 407 001e 00BF     		.align	2
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 17


 408              	.L33:
 409 0020 67640040 		.word	1073767527
 410 0024 00000000 		.word	.LANCHOR0
 411              		.cfi_endproc
 412              	.LFE8:
 413              		.size	UART_Serial_ReadRxStatus, .-UART_Serial_ReadRxStatus
 414              		.section	.text.UART_Serial_GetChar,"ax",%progbits
 415              		.align	2
 416              		.global	UART_Serial_GetChar
 417              		.thumb
 418              		.thumb_func
 419              		.type	UART_Serial_GetChar, %function
 420              	UART_Serial_GetChar:
 421              	.LFB9:
 501:Generated_Source\PSoC5/UART_Serial.c **** 
 502:Generated_Source\PSoC5/UART_Serial.c **** 
 503:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_GetChar
 505:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_Serial.c ****     *
 507:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_Serial.c ****     *  Returns the last received byte of data. UART_Serial_GetChar() is
 509:Generated_Source\PSoC5/UART_Serial.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_Serial.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_Serial.c ****     *
 512:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 514:Generated_Source\PSoC5/UART_Serial.c ****     *
 515:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 516:Generated_Source\PSoC5/UART_Serial.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_Serial.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_Serial.c ****     *
 519:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_Serial.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_Serial.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_Serial.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_Serial.c ****     *
 528:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
 530:Generated_Source\PSoC5/UART_Serial.c ****     *
 531:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_Serial.c ****     uint8 UART_Serial_GetChar(void) 
 533:Generated_Source\PSoC5/UART_Serial.c ****     {
 422              		.loc 1 533 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427              	.LVL23:
 534:Generated_Source\PSoC5/UART_Serial.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART_Serial.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_Serial.c **** 
 537:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 18


 538:Generated_Source\PSoC5/UART_Serial.c ****         uint16 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_Serial.c ****         uint16 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_Serial.c **** 
 541:Generated_Source\PSoC5/UART_Serial.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_DisableRxInt();
 428              		.loc 1 542 0
 429 0000 0122     		movs	r2, #1
 430 0002 1A4B     		ldr	r3, .L43
 431 0004 1A60     		str	r2, [r3]
 543:Generated_Source\PSoC5/UART_Serial.c **** 
 544:Generated_Source\PSoC5/UART_Serial.c ****         locRxBufferRead  = UART_Serial_rxBufferRead;
 432              		.loc 1 544 0
 433 0006 1A4A     		ldr	r2, .L43+4
 434 0008 5388     		ldrh	r3, [r2, #2]
 435 000a 9BB2     		uxth	r3, r3
 436              	.LVL24:
 545:Generated_Source\PSoC5/UART_Serial.c ****         locRxBufferWrite = UART_Serial_rxBufferWrite;
 437              		.loc 1 545 0
 438 000c 9188     		ldrh	r1, [r2, #4]
 439 000e 89B2     		uxth	r1, r1
 440              	.LVL25:
 546:Generated_Source\PSoC5/UART_Serial.c **** 
 547:Generated_Source\PSoC5/UART_Serial.c ****         if( (UART_Serial_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 441              		.loc 1 547 0
 442 0010 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 443 0012 12F0FF0F 		tst	r2, #255
 444 0016 01D1     		bne	.L36
 445              		.loc 1 547 0 is_stmt 0 discriminator 1
 446 0018 8B42     		cmp	r3, r1
 447 001a 12D0     		beq	.L37
 448              	.L36:
 548:Generated_Source\PSoC5/UART_Serial.c ****         {
 549:Generated_Source\PSoC5/UART_Serial.c ****             rxData = UART_Serial_rxBuffer[locRxBufferRead];
 449              		.loc 1 549 0 is_stmt 1
 450 001c 154A     		ldr	r2, .L43+8
 451 001e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 452 0020 C0B2     		uxtb	r0, r0
 453              	.LVL26:
 550:Generated_Source\PSoC5/UART_Serial.c ****             locRxBufferRead++;
 454              		.loc 1 550 0
 455 0022 0133     		adds	r3, r3, #1
 456              	.LVL27:
 457 0024 9BB2     		uxth	r3, r3
 458              	.LVL28:
 551:Generated_Source\PSoC5/UART_Serial.c ****             if(locRxBufferRead >= UART_Serial_RX_BUFFER_SIZE)
 459              		.loc 1 551 0
 460 0026 B3F5C86F 		cmp	r3, #1600
 461 002a 00D3     		bcc	.L38
 552:Generated_Source\PSoC5/UART_Serial.c ****             {
 553:Generated_Source\PSoC5/UART_Serial.c ****                 locRxBufferRead = 0u;
 462              		.loc 1 553 0
 463 002c 0023     		movs	r3, #0
 464              	.LVL29:
 465              	.L38:
 554:Generated_Source\PSoC5/UART_Serial.c ****             }
 555:Generated_Source\PSoC5/UART_Serial.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_rxBufferRead = locRxBufferRead;
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 19


 466              		.loc 1 556 0
 467 002e 104A     		ldr	r2, .L43+4
 468 0030 5380     		strh	r3, [r2, #2]	@ movhi
 557:Generated_Source\PSoC5/UART_Serial.c **** 
 558:Generated_Source\PSoC5/UART_Serial.c ****             if(UART_Serial_rxBufferLoopDetect != 0u)
 469              		.loc 1 558 0
 470 0032 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 471              	.LVL30:
 472 0034 13F0FF0F 		tst	r3, #255
 473 0038 13D0     		beq	.L39
 559:Generated_Source\PSoC5/UART_Serial.c ****             {
 560:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_rxBufferLoopDetect = 0u;
 474              		.loc 1 560 0
 475 003a 0022     		movs	r2, #0
 476 003c 0C4B     		ldr	r3, .L43+4
 477 003e 9A71     		strb	r2, [r3, #6]
 478              	.LVL31:
 479 0040 0FE0     		b	.L39
 480              	.LVL32:
 481              	.L37:
 561:Generated_Source\PSoC5/UART_Serial.c ****                 #if( (UART_Serial_RX_INTERRUPT_ENABLED) && (UART_Serial_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_Serial.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_Serial.c ****                     #if( UART_Serial_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_Serial.c ****                         if((UART_Serial_CONTROL_REG & UART_Serial_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_Serial.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_Serial.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_Serial.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_Serial.c ****                             */
 569:Generated_Source\PSoC5/UART_Serial.c ****                             UART_Serial_RXSTATUS_MASK_REG |= UART_Serial_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_Serial.c ****                         }
 571:Generated_Source\PSoC5/UART_Serial.c ****                     #else
 572:Generated_Source\PSoC5/UART_Serial.c ****                         UART_Serial_RXSTATUS_MASK_REG |= UART_Serial_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_Serial.c ****                     #endif /* end UART_Serial_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_Serial.c ****                 #endif /* UART_Serial_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_Serial.c ****             }
 576:Generated_Source\PSoC5/UART_Serial.c **** 
 577:Generated_Source\PSoC5/UART_Serial.c ****         }
 578:Generated_Source\PSoC5/UART_Serial.c ****         else
 579:Generated_Source\PSoC5/UART_Serial.c ****         {   rxStatus = UART_Serial_RXSTATUS_REG;
 482              		.loc 1 579 0
 483 0042 0D4B     		ldr	r3, .L43+12
 484              	.LVL33:
 485 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 486 0046 DBB2     		uxtb	r3, r3
 487              	.LVL34:
 580:Generated_Source\PSoC5/UART_Serial.c ****             if((rxStatus & UART_Serial_RX_STS_FIFO_NOTEMPTY) != 0u)
 488              		.loc 1 580 0
 489 0048 13F0200F 		tst	r3, #32
 490 004c 06D0     		beq	.L41
 581:Generated_Source\PSoC5/UART_Serial.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_Serial.c ****                 rxData = UART_Serial_RXDATA_REG;
 491              		.loc 1 582 0
 492 004e 0B4A     		ldr	r2, .L43+16
 493 0050 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 494 0052 C0B2     		uxtb	r0, r0
 495              	.LVL35:
 583:Generated_Source\PSoC5/UART_Serial.c ****                 /*Check status on error*/
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 20


 584:Generated_Source\PSoC5/UART_Serial.c ****                 if((rxStatus & (UART_Serial_RX_STS_BREAK | UART_Serial_RX_STS_PAR_ERROR |
 496              		.loc 1 584 0
 497 0054 13F01E0F 		tst	r3, #30
 498 0058 02D1     		bne	.L42
 499 005a 02E0     		b	.L39
 500              	.LVL36:
 501              	.L41:
 534:Generated_Source\PSoC5/UART_Serial.c ****         uint8 rxStatus;
 502              		.loc 1 534 0
 503 005c 0020     		movs	r0, #0
 504 005e 00E0     		b	.L39
 505              	.LVL37:
 506              	.L42:
 585:Generated_Source\PSoC5/UART_Serial.c ****                                 UART_Serial_RX_STS_STOP_ERROR | UART_Serial_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_Serial.c ****                 {
 587:Generated_Source\PSoC5/UART_Serial.c ****                     rxData = 0u;
 507              		.loc 1 587 0
 508 0060 0020     		movs	r0, #0
 509              	.LVL38:
 510              	.L39:
 588:Generated_Source\PSoC5/UART_Serial.c ****                 }
 589:Generated_Source\PSoC5/UART_Serial.c ****             }
 590:Generated_Source\PSoC5/UART_Serial.c ****         }
 591:Generated_Source\PSoC5/UART_Serial.c **** 
 592:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_EnableRxInt();
 511              		.loc 1 592 0
 512 0062 0122     		movs	r2, #1
 513 0064 064B     		ldr	r3, .L43+20
 514 0066 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC5/UART_Serial.c **** 
 594:Generated_Source\PSoC5/UART_Serial.c ****     #else
 595:Generated_Source\PSoC5/UART_Serial.c **** 
 596:Generated_Source\PSoC5/UART_Serial.c ****         rxStatus =UART_Serial_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART_Serial.c ****         if((rxStatus & UART_Serial_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART_Serial.c ****         {
 599:Generated_Source\PSoC5/UART_Serial.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_Serial.c ****             rxData = UART_Serial_RXDATA_REG;
 601:Generated_Source\PSoC5/UART_Serial.c **** 
 602:Generated_Source\PSoC5/UART_Serial.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_Serial.c ****             if((rxStatus & (UART_Serial_RX_STS_BREAK | UART_Serial_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART_Serial.c ****                             UART_Serial_RX_STS_STOP_ERROR | UART_Serial_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_Serial.c ****             {
 606:Generated_Source\PSoC5/UART_Serial.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART_Serial.c ****             }
 608:Generated_Source\PSoC5/UART_Serial.c ****         }
 609:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_Serial.c **** 
 611:Generated_Source\PSoC5/UART_Serial.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART_Serial.c ****     }
 515              		.loc 1 612 0
 516 0068 7047     		bx	lr
 517              	.L44:
 518 006a 00BF     		.align	2
 519              	.L43:
 520 006c 80E100E0 		.word	-536813184
 521 0070 00000000 		.word	.LANCHOR0
 522 0074 00000000 		.word	UART_Serial_rxBuffer
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 21


 523 0078 67640040 		.word	1073767527
 524 007c 44650040 		.word	1073767748
 525 0080 00E100E0 		.word	-536813312
 526              		.cfi_endproc
 527              	.LFE9:
 528              		.size	UART_Serial_GetChar, .-UART_Serial_GetChar
 529              		.section	.text.UART_Serial_GetByte,"ax",%progbits
 530              		.align	2
 531              		.global	UART_Serial_GetByte
 532              		.thumb
 533              		.thumb_func
 534              		.type	UART_Serial_GetByte, %function
 535              	UART_Serial_GetByte:
 536              	.LFB10:
 613:Generated_Source\PSoC5/UART_Serial.c **** 
 614:Generated_Source\PSoC5/UART_Serial.c **** 
 615:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_GetByte
 617:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_Serial.c ****     *
 619:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_Serial.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_Serial.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_Serial.c ****     *
 623:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 625:Generated_Source\PSoC5/UART_Serial.c ****     *
 626:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 627:Generated_Source\PSoC5/UART_Serial.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_Serial.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_Serial.c ****     *
 630:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
 632:Generated_Source\PSoC5/UART_Serial.c ****     *
 633:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_Serial.c ****     uint16 UART_Serial_GetByte(void) 
 635:Generated_Source\PSoC5/UART_Serial.c ****     {
 537              		.loc 1 635 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541 0000 10B5     		push	{r4, lr}
 542              		.cfi_def_cfa_offset 8
 543              		.cfi_offset 4, -8
 544              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART_Serial.c ****         
 637:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_Serial.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_Serial.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_DisableRxInt();
 545              		.loc 1 640 0
 546 0002 0123     		movs	r3, #1
 547 0004 064A     		ldr	r2, .L47
 548 0006 1360     		str	r3, [r2]
 641:Generated_Source\PSoC5/UART_Serial.c ****         locErrorStatus = (uint16)UART_Serial_errorStatus;
 549              		.loc 1 641 0
 550 0008 064A     		ldr	r2, .L47+4
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 22


 551 000a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 552              	.LVL39:
 642:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_errorStatus = 0u;
 553              		.loc 1 642 0
 554 000c 0021     		movs	r1, #0
 555 000e 1170     		strb	r1, [r2]
 643:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_EnableRxInt();
 556              		.loc 1 643 0
 557 0010 054A     		ldr	r2, .L47+8
 558 0012 1360     		str	r3, [r2]
 644:Generated_Source\PSoC5/UART_Serial.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_Serial_ReadRxData() );
 559              		.loc 1 644 0
 560 0014 2402     		lsls	r4, r4, #8
 561              	.LVL40:
 562 0016 FFF7FEFF 		bl	UART_Serial_ReadRxData
 563              	.LVL41:
 564 001a 2043     		orrs	r0, r0, r4
 645:Generated_Source\PSoC5/UART_Serial.c ****     #else
 646:Generated_Source\PSoC5/UART_Serial.c ****         return ( ((uint16)UART_Serial_ReadRxStatus() << 8u) | UART_Serial_ReadRxData() );
 647:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* UART_Serial_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_Serial.c ****         
 649:Generated_Source\PSoC5/UART_Serial.c ****     }
 565              		.loc 1 649 0
 566 001c 80B2     		uxth	r0, r0
 567 001e 10BD     		pop	{r4, pc}
 568              	.L48:
 569              		.align	2
 570              	.L47:
 571 0020 80E100E0 		.word	-536813184
 572 0024 00000000 		.word	.LANCHOR0
 573 0028 00E100E0 		.word	-536813312
 574              		.cfi_endproc
 575              	.LFE10:
 576              		.size	UART_Serial_GetByte, .-UART_Serial_GetByte
 577              		.section	.text.UART_Serial_GetRxBufferSize,"ax",%progbits
 578              		.align	2
 579              		.global	UART_Serial_GetRxBufferSize
 580              		.thumb
 581              		.thumb_func
 582              		.type	UART_Serial_GetRxBufferSize, %function
 583              	UART_Serial_GetRxBufferSize:
 584              	.LFB11:
 650:Generated_Source\PSoC5/UART_Serial.c **** 
 651:Generated_Source\PSoC5/UART_Serial.c **** 
 652:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_Serial.c ****     *
 656:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_Serial.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_Serial.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_Serial.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_Serial.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_Serial.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_Serial.c ****     *    account.
 663:Generated_Source\PSoC5/UART_Serial.c ****     *
 664:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 23


 665:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 666:Generated_Source\PSoC5/UART_Serial.c ****     *
 667:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 668:Generated_Source\PSoC5/UART_Serial.c ****     *  uint16: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_Serial.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_Serial.c ****     *
 671:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_Serial.c ****     *
 676:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
 678:Generated_Source\PSoC5/UART_Serial.c ****     *
 679:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_Serial.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_Serial.c ****     *
 682:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_Serial.c ****     uint16 UART_Serial_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_Serial.c ****                                                             
 685:Generated_Source\PSoC5/UART_Serial.c ****     {
 585              		.loc 1 685 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART_Serial.c ****         uint16 size;
 687:Generated_Source\PSoC5/UART_Serial.c **** 
 688:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_Serial.c **** 
 690:Generated_Source\PSoC5/UART_Serial.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_DisableRxInt();
 590              		.loc 1 691 0
 591 0000 0122     		movs	r2, #1
 592 0002 174B     		ldr	r3, .L54
 593 0004 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC5/UART_Serial.c **** 
 693:Generated_Source\PSoC5/UART_Serial.c ****         if(UART_Serial_rxBufferRead == UART_Serial_rxBufferWrite)
 594              		.loc 1 693 0
 595 0006 174B     		ldr	r3, .L54+4
 596 0008 5A88     		ldrh	r2, [r3, #2]
 597 000a 92B2     		uxth	r2, r2
 598 000c 9B88     		ldrh	r3, [r3, #4]
 599 000e 9BB2     		uxth	r3, r3
 600 0010 9A42     		cmp	r2, r3
 601 0012 07D1     		bne	.L50
 694:Generated_Source\PSoC5/UART_Serial.c ****         {
 695:Generated_Source\PSoC5/UART_Serial.c ****             if(UART_Serial_rxBufferLoopDetect != 0u)
 602              		.loc 1 695 0
 603 0014 134B     		ldr	r3, .L54+4
 604 0016 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 605 0018 13F0FF0F 		tst	r3, #255
 606 001c 1BD0     		beq	.L53
 696:Generated_Source\PSoC5/UART_Serial.c ****             {
 697:Generated_Source\PSoC5/UART_Serial.c ****                 size = UART_Serial_RX_BUFFER_SIZE;
 607              		.loc 1 697 0
 608 001e 4FF4C860 		mov	r0, #1600
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 24


 609 0022 19E0     		b	.L51
 610              	.L50:
 698:Generated_Source\PSoC5/UART_Serial.c ****             }
 699:Generated_Source\PSoC5/UART_Serial.c ****             else
 700:Generated_Source\PSoC5/UART_Serial.c ****             {
 701:Generated_Source\PSoC5/UART_Serial.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_Serial.c ****             }
 703:Generated_Source\PSoC5/UART_Serial.c ****         }
 704:Generated_Source\PSoC5/UART_Serial.c ****         else if(UART_Serial_rxBufferRead < UART_Serial_rxBufferWrite)
 611              		.loc 1 704 0
 612 0024 0F4B     		ldr	r3, .L54+4
 613 0026 5A88     		ldrh	r2, [r3, #2]
 614 0028 92B2     		uxth	r2, r2
 615 002a 9B88     		ldrh	r3, [r3, #4]
 616 002c 9BB2     		uxth	r3, r3
 617 002e 9A42     		cmp	r2, r3
 618 0030 07D2     		bcs	.L52
 705:Generated_Source\PSoC5/UART_Serial.c ****         {
 706:Generated_Source\PSoC5/UART_Serial.c ****             size = (UART_Serial_rxBufferWrite - UART_Serial_rxBufferRead);
 619              		.loc 1 706 0
 620 0032 0C4A     		ldr	r2, .L54+4
 621 0034 9088     		ldrh	r0, [r2, #4]
 622 0036 83B2     		uxth	r3, r0
 623 0038 5088     		ldrh	r0, [r2, #2]
 624 003a 80B2     		uxth	r0, r0
 625 003c 181A     		subs	r0, r3, r0
 626 003e 80B2     		uxth	r0, r0
 627              	.LVL42:
 628 0040 0AE0     		b	.L51
 629              	.LVL43:
 630              	.L52:
 707:Generated_Source\PSoC5/UART_Serial.c ****         }
 708:Generated_Source\PSoC5/UART_Serial.c ****         else
 709:Generated_Source\PSoC5/UART_Serial.c ****         {
 710:Generated_Source\PSoC5/UART_Serial.c ****             size = (UART_Serial_RX_BUFFER_SIZE - UART_Serial_rxBufferRead) + UART_Serial_rxBufferWr
 631              		.loc 1 710 0
 632 0042 084A     		ldr	r2, .L54+4
 633 0044 9088     		ldrh	r0, [r2, #4]
 634 0046 83B2     		uxth	r3, r0
 635 0048 5088     		ldrh	r0, [r2, #2]
 636 004a 80B2     		uxth	r0, r0
 637 004c 181A     		subs	r0, r3, r0
 638 004e 00F5C860 		add	r0, r0, #1600
 639 0052 80B2     		uxth	r0, r0
 640              	.LVL44:
 641 0054 00E0     		b	.L51
 642              	.LVL45:
 643              	.L53:
 701:Generated_Source\PSoC5/UART_Serial.c ****             }
 644              		.loc 1 701 0
 645 0056 0020     		movs	r0, #0
 646              	.L51:
 647              	.LVL46:
 711:Generated_Source\PSoC5/UART_Serial.c ****         }
 712:Generated_Source\PSoC5/UART_Serial.c **** 
 713:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_EnableRxInt();
 648              		.loc 1 713 0
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 25


 649 0058 0122     		movs	r2, #1
 650 005a 034B     		ldr	r3, .L54+8
 651 005c 1A60     		str	r2, [r3]
 714:Generated_Source\PSoC5/UART_Serial.c **** 
 715:Generated_Source\PSoC5/UART_Serial.c ****     #else
 716:Generated_Source\PSoC5/UART_Serial.c **** 
 717:Generated_Source\PSoC5/UART_Serial.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_Serial.c ****         size = ((UART_Serial_RXSTATUS_REG & UART_Serial_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART_Serial.c **** 
 720:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_Serial.c **** 
 722:Generated_Source\PSoC5/UART_Serial.c ****         return(size);
 723:Generated_Source\PSoC5/UART_Serial.c ****     }
 652              		.loc 1 723 0
 653 005e 7047     		bx	lr
 654              	.L55:
 655              		.align	2
 656              	.L54:
 657 0060 80E100E0 		.word	-536813184
 658 0064 00000000 		.word	.LANCHOR0
 659 0068 00E100E0 		.word	-536813312
 660              		.cfi_endproc
 661              	.LFE11:
 662              		.size	UART_Serial_GetRxBufferSize, .-UART_Serial_GetRxBufferSize
 663              		.section	.text.UART_Serial_ClearRxBuffer,"ax",%progbits
 664              		.align	2
 665              		.global	UART_Serial_ClearRxBuffer
 666              		.thumb
 667              		.thumb_func
 668              		.type	UART_Serial_ClearRxBuffer, %function
 669              	UART_Serial_ClearRxBuffer:
 670              	.LFB12:
 724:Generated_Source\PSoC5/UART_Serial.c **** 
 725:Generated_Source\PSoC5/UART_Serial.c **** 
 726:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_Serial.c ****     *
 730:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_Serial.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_Serial.c ****     *
 733:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 735:Generated_Source\PSoC5/UART_Serial.c ****     *
 736:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 737:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 738:Generated_Source\PSoC5/UART_Serial.c ****     *
 739:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_Serial.c ****     *
 745:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
 747:Generated_Source\PSoC5/UART_Serial.c ****     *
 748:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 26


 749:Generated_Source\PSoC5/UART_Serial.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_Serial.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_Serial.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_Serial.c ****     *
 753:Generated_Source\PSoC5/UART_Serial.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_Serial.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_Serial.c ****     *
 756:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_Serial.c ****     {
 671              		.loc 1 758 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675 0000 08B5     		push	{r3, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 3, -8
 678              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART_Serial.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_Serial.c **** 
 761:Generated_Source\PSoC5/UART_Serial.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_Serial.c ****         enableInterrupts = CyEnterCriticalSection();
 679              		.loc 1 762 0
 680 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 681              	.LVL47:
 763:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXDATA_AUX_CTL_REG |= (uint8)  UART_Serial_RX_FIFO_CLR;
 682              		.loc 1 763 0
 683 0006 0B4B     		ldr	r3, .L58
 684 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 685 000a 42F00102 		orr	r2, r2, #1
 686 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXDATA_AUX_CTL_REG &= (uint8) ~UART_Serial_RX_FIFO_CLR;
 687              		.loc 1 764 0
 688 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 689 0012 02F0FE02 		and	r2, r2, #254
 690 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART_Serial.c ****         CyExitCriticalSection(enableInterrupts);
 691              		.loc 1 765 0
 692 0018 FFF7FEFF 		bl	CyExitCriticalSection
 693              	.LVL48:
 766:Generated_Source\PSoC5/UART_Serial.c **** 
 767:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_Serial.c **** 
 769:Generated_Source\PSoC5/UART_Serial.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_DisableRxInt();
 694              		.loc 1 770 0
 695 001c 0121     		movs	r1, #1
 696 001e 064B     		ldr	r3, .L58+4
 697 0020 1960     		str	r1, [r3]
 771:Generated_Source\PSoC5/UART_Serial.c **** 
 772:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_rxBufferRead = 0u;
 698              		.loc 1 772 0
 699 0022 064B     		ldr	r3, .L58+8
 700 0024 0022     		movs	r2, #0
 701 0026 5A80     		strh	r2, [r3, #2]	@ movhi
 773:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_rxBufferWrite = 0u;
 702              		.loc 1 773 0
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 27


 703 0028 9A80     		strh	r2, [r3, #4]	@ movhi
 774:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_rxBufferLoopDetect = 0u;
 704              		.loc 1 774 0
 705 002a 9A71     		strb	r2, [r3, #6]
 775:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_rxBufferOverflow = 0u;
 706              		.loc 1 775 0
 707 002c DA71     		strb	r2, [r3, #7]
 776:Generated_Source\PSoC5/UART_Serial.c **** 
 777:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_EnableRxInt();
 708              		.loc 1 777 0
 709 002e 044B     		ldr	r3, .L58+12
 710 0030 1960     		str	r1, [r3]
 711 0032 08BD     		pop	{r3, pc}
 712              	.L59:
 713              		.align	2
 714              	.L58:
 715 0034 94650040 		.word	1073767828
 716 0038 80E100E0 		.word	-536813184
 717 003c 00000000 		.word	.LANCHOR0
 718 0040 00E100E0 		.word	-536813312
 719              		.cfi_endproc
 720              	.LFE12:
 721              		.size	UART_Serial_ClearRxBuffer, .-UART_Serial_ClearRxBuffer
 722              		.section	.text.UART_Serial_SetRxAddressMode,"ax",%progbits
 723              		.align	2
 724              		.global	UART_Serial_SetRxAddressMode
 725              		.thumb
 726              		.thumb_func
 727              		.type	UART_Serial_SetRxAddressMode, %function
 728              	UART_Serial_SetRxAddressMode:
 729              	.LFB13:
 778:Generated_Source\PSoC5/UART_Serial.c **** 
 779:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_Serial.c **** 
 781:Generated_Source\PSoC5/UART_Serial.c ****     }
 782:Generated_Source\PSoC5/UART_Serial.c **** 
 783:Generated_Source\PSoC5/UART_Serial.c **** 
 784:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_Serial.c ****     *
 788:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_Serial.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_Serial.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_Serial.c ****     *
 792:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_Serial.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_Serial.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_Serial.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_Serial.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_Serial.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_Serial.c ****     *
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 28


 804:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 805:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 806:Generated_Source\PSoC5/UART_Serial.c ****     *
 807:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_Serial.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_Serial.c ****     *
 812:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_Serial.c ****                                                         
 815:Generated_Source\PSoC5/UART_Serial.c ****     {
 730              		.loc 1 815 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735              	.LVL49:
 736 0000 7047     		bx	lr
 737              		.cfi_endproc
 738              	.LFE13:
 739              		.size	UART_Serial_SetRxAddressMode, .-UART_Serial_SetRxAddressMode
 740 0002 00BF     		.section	.text.UART_Serial_SetRxAddress1,"ax",%progbits
 741              		.align	2
 742              		.global	UART_Serial_SetRxAddress1
 743              		.thumb
 744              		.thumb_func
 745              		.type	UART_Serial_SetRxAddress1, %function
 746              	UART_Serial_SetRxAddress1:
 747              	.LFB14:
 816:Generated_Source\PSoC5/UART_Serial.c ****         #if(UART_Serial_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_Serial.c ****             #if(UART_Serial_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_Serial.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_Serial.c ****                 {
 820:Generated_Source\PSoC5/UART_Serial.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_Serial.c ****                 }
 822:Generated_Source\PSoC5/UART_Serial.c ****             #else /* UART_Serial_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_Serial.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_Serial.c ****                 tmpCtrl = UART_Serial_CONTROL_REG & (uint8)~UART_Serial_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_Serial.c ****                 tmpCtrl |= (uint8)(addressMode << UART_Serial_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_Serial.c **** 
 828:Generated_Source\PSoC5/UART_Serial.c ****                 #if(UART_Serial_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_Serial.c ****                    (UART_Serial_RXBUFFERSIZE > UART_Serial_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_Serial.c ****                     UART_Serial_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_Serial.c ****                     UART_Serial_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_Serial.c ****                 #endif /* End UART_Serial_RXBUFFERSIZE > UART_Serial_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_Serial.c ****             #endif /* End UART_Serial_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_Serial.c ****         #else /* UART_Serial_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_Serial.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_Serial.c ****             {
 837:Generated_Source\PSoC5/UART_Serial.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_Serial.c ****             }
 839:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* End UART_Serial_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_Serial.c ****     }
 841:Generated_Source\PSoC5/UART_Serial.c **** 
 842:Generated_Source\PSoC5/UART_Serial.c **** 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 29


 843:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_SetRxAddress1
 845:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_Serial.c ****     *
 847:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_Serial.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_Serial.c ****     *
 850:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_Serial.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_Serial.c ****     *
 853:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 854:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 855:Generated_Source\PSoC5/UART_Serial.c ****     *
 856:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_Serial.c ****     {
 748              		.loc 1 858 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              		@ link register save eliminated.
 753              	.LVL50:
 859:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXADDRESS1_REG = address;
 754              		.loc 1 859 0
 755 0000 014B     		ldr	r3, .L62
 756 0002 1870     		strb	r0, [r3]
 757 0004 7047     		bx	lr
 758              	.L63:
 759 0006 00BF     		.align	2
 760              	.L62:
 761 0008 24650040 		.word	1073767716
 762              		.cfi_endproc
 763              	.LFE14:
 764              		.size	UART_Serial_SetRxAddress1, .-UART_Serial_SetRxAddress1
 765              		.section	.text.UART_Serial_SetRxAddress2,"ax",%progbits
 766              		.align	2
 767              		.global	UART_Serial_SetRxAddress2
 768              		.thumb
 769              		.thumb_func
 770              		.type	UART_Serial_SetRxAddress2, %function
 771              	UART_Serial_SetRxAddress2:
 772              	.LFB15:
 860:Generated_Source\PSoC5/UART_Serial.c ****     }
 861:Generated_Source\PSoC5/UART_Serial.c **** 
 862:Generated_Source\PSoC5/UART_Serial.c **** 
 863:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_SetRxAddress2
 865:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_Serial.c ****     *
 867:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_Serial.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_Serial.c ****     *
 870:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_Serial.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_Serial.c ****     *
 873:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 874:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 30


 875:Generated_Source\PSoC5/UART_Serial.c ****     *
 876:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_Serial.c ****     {
 773              		.loc 1 878 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778              	.LVL51:
 879:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_RXADDRESS2_REG = address;
 779              		.loc 1 879 0
 780 0000 014B     		ldr	r3, .L65
 781 0002 1870     		strb	r0, [r3]
 782 0004 7047     		bx	lr
 783              	.L66:
 784 0006 00BF     		.align	2
 785              	.L65:
 786 0008 34650040 		.word	1073767732
 787              		.cfi_endproc
 788              	.LFE15:
 789              		.size	UART_Serial_SetRxAddress2, .-UART_Serial_SetRxAddress2
 790              		.section	.text.UART_Serial_SetTxInterruptMode,"ax",%progbits
 791              		.align	2
 792              		.global	UART_Serial_SetTxInterruptMode
 793              		.thumb
 794              		.thumb_func
 795              		.type	UART_Serial_SetTxInterruptMode, %function
 796              	UART_Serial_SetTxInterruptMode:
 797              	.LFB16:
 880:Generated_Source\PSoC5/UART_Serial.c ****     }
 881:Generated_Source\PSoC5/UART_Serial.c **** 
 882:Generated_Source\PSoC5/UART_Serial.c **** #endif  /* UART_Serial_RX_ENABLED || UART_Serial_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_Serial.c **** 
 884:Generated_Source\PSoC5/UART_Serial.c **** 
 885:Generated_Source\PSoC5/UART_Serial.c **** #if( (UART_Serial_TX_ENABLED) || (UART_Serial_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_Serial.c ****     *
 890:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_Serial.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_Serial.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_Serial.c ****     *
 894:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_Serial.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_Serial.c ****     *   UART_Serial_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_Serial.c ****     *   UART_Serial_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_Serial.c ****     *   UART_Serial_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_Serial.c ****     *   UART_Serial_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_Serial.c ****     *
 901:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 902:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 903:Generated_Source\PSoC5/UART_Serial.c ****     *
 904:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_Serial.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_Serial.c ****     *
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 31


 907:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_Serial.c ****     {
 798              		.loc 1 909 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 803              	.LVL52:
 910:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_TXSTATUS_MASK_REG = intSrc;
 804              		.loc 1 910 0
 805 0000 014B     		ldr	r3, .L68
 806 0002 1870     		strb	r0, [r3]
 807 0004 7047     		bx	lr
 808              	.L69:
 809 0006 00BF     		.align	2
 810              	.L68:
 811 0008 85650040 		.word	1073767813
 812              		.cfi_endproc
 813              	.LFE16:
 814              		.size	UART_Serial_SetTxInterruptMode, .-UART_Serial_SetTxInterruptMode
 815              		.section	.text.UART_Serial_WriteTxData,"ax",%progbits
 816              		.align	2
 817              		.global	UART_Serial_WriteTxData
 818              		.thumb
 819              		.thumb_func
 820              		.type	UART_Serial_WriteTxData, %function
 821              	UART_Serial_WriteTxData:
 822              	.LFB17:
 911:Generated_Source\PSoC5/UART_Serial.c ****     }
 912:Generated_Source\PSoC5/UART_Serial.c **** 
 913:Generated_Source\PSoC5/UART_Serial.c **** 
 914:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_WriteTxData
 916:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_Serial.c ****     *
 918:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_Serial.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_Serial.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_Serial.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_Serial.c ****     *
 923:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_Serial.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_Serial.c ****     *
 926:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 927:Generated_Source\PSoC5/UART_Serial.c ****     * None.
 928:Generated_Source\PSoC5/UART_Serial.c ****     *
 929:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_Serial.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_Serial.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_Serial.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_Serial.c ****     *
 938:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 32


 939:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
 940:Generated_Source\PSoC5/UART_Serial.c ****     *
 941:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_Serial.c ****     {
 823              		.loc 1 943 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828              	.LVL53:
 944:Generated_Source\PSoC5/UART_Serial.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_Serial.c ****         if(UART_Serial_initVar != 0u)
 829              		.loc 1 945 0
 830 0000 024B     		ldr	r3, .L72
 831 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 832 0004 0BB1     		cbz	r3, .L70
 946:Generated_Source\PSoC5/UART_Serial.c ****         {
 947:Generated_Source\PSoC5/UART_Serial.c ****         #if (UART_Serial_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_Serial.c **** 
 949:Generated_Source\PSoC5/UART_Serial.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_DisableTxInt();
 951:Generated_Source\PSoC5/UART_Serial.c **** 
 952:Generated_Source\PSoC5/UART_Serial.c ****             if( (UART_Serial_txBufferRead == UART_Serial_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_Serial.c ****                 ((UART_Serial_TXSTATUS_REG & UART_Serial_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_Serial.c ****             {
 955:Generated_Source\PSoC5/UART_Serial.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_Serial.c ****             }
 958:Generated_Source\PSoC5/UART_Serial.c ****             else
 959:Generated_Source\PSoC5/UART_Serial.c ****             {
 960:Generated_Source\PSoC5/UART_Serial.c ****                 if(UART_Serial_txBufferWrite >= UART_Serial_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_Serial.c ****                 {
 962:Generated_Source\PSoC5/UART_Serial.c ****                     UART_Serial_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_Serial.c ****                 }
 964:Generated_Source\PSoC5/UART_Serial.c **** 
 965:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_txBuffer[UART_Serial_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_Serial.c **** 
 967:Generated_Source\PSoC5/UART_Serial.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_Serial.c ****             }
 970:Generated_Source\PSoC5/UART_Serial.c **** 
 971:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_EnableTxInt();
 972:Generated_Source\PSoC5/UART_Serial.c **** 
 973:Generated_Source\PSoC5/UART_Serial.c ****         #else
 974:Generated_Source\PSoC5/UART_Serial.c **** 
 975:Generated_Source\PSoC5/UART_Serial.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_TXDATA_REG = txDataByte;
 833              		.loc 1 976 0
 834 0006 024B     		ldr	r3, .L72+4
 835 0008 1870     		strb	r0, [r3]
 836              	.L70:
 837 000a 7047     		bx	lr
 838              	.L73:
 839              		.align	2
 840              	.L72:
 841 000c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 33


 842 0010 46650040 		.word	1073767750
 843              		.cfi_endproc
 844              	.LFE17:
 845              		.size	UART_Serial_WriteTxData, .-UART_Serial_WriteTxData
 846              		.section	.text.UART_Serial_ReadTxStatus,"ax",%progbits
 847              		.align	2
 848              		.global	UART_Serial_ReadTxStatus
 849              		.thumb
 850              		.thumb_func
 851              		.type	UART_Serial_ReadTxStatus, %function
 852              	UART_Serial_ReadTxStatus:
 853              	.LFB18:
 977:Generated_Source\PSoC5/UART_Serial.c **** 
 978:Generated_Source\PSoC5/UART_Serial.c ****         #endif /*(UART_Serial_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_Serial.c ****         }
 980:Generated_Source\PSoC5/UART_Serial.c ****     }
 981:Generated_Source\PSoC5/UART_Serial.c **** 
 982:Generated_Source\PSoC5/UART_Serial.c **** 
 983:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_ReadTxStatus
 985:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_Serial.c ****     *
 987:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_Serial.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_Serial.c ****     *
 990:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
 992:Generated_Source\PSoC5/UART_Serial.c ****     *
 993:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
 994:Generated_Source\PSoC5/UART_Serial.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_Serial.c ****     *
 996:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_Serial.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_Serial.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_Serial.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_Serial.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_Serial.c ****     *
1002:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_Serial.c ****     uint8 UART_Serial_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_Serial.c ****     {
 854              		.loc 1 1004 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART_Serial.c ****         return(UART_Serial_TXSTATUS_REG);
 859              		.loc 1 1005 0
 860 0000 014B     		ldr	r3, .L75
 861 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART_Serial.c ****     }
 862              		.loc 1 1006 0
 863 0004 7047     		bx	lr
 864              	.L76:
 865 0006 00BF     		.align	2
 866              	.L75:
 867 0008 65650040 		.word	1073767781
 868              		.cfi_endproc
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 34


 869              	.LFE18:
 870              		.size	UART_Serial_ReadTxStatus, .-UART_Serial_ReadTxStatus
 871              		.section	.text.UART_Serial_PutChar,"ax",%progbits
 872              		.align	2
 873              		.global	UART_Serial_PutChar
 874              		.thumb
 875              		.thumb_func
 876              		.type	UART_Serial_PutChar, %function
 877              	UART_Serial_PutChar:
 878              	.LFB19:
1007:Generated_Source\PSoC5/UART_Serial.c **** 
1008:Generated_Source\PSoC5/UART_Serial.c **** 
1009:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_PutChar
1011:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_Serial.c ****     *
1013:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_Serial.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_Serial.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_Serial.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_Serial.c ****     *
1018:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_Serial.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_Serial.c ****     *
1021:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
1022:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
1023:Generated_Source\PSoC5/UART_Serial.c ****     *
1024:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_Serial.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_Serial.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_Serial.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_Serial.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_Serial.c ****     *
1034:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
1036:Generated_Source\PSoC5/UART_Serial.c ****     *
1037:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_Serial.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_Serial.c ****     *
1040:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_Serial.c ****     {
 879              		.loc 1 1042 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 884              	.LVL54:
 885              	.L78:
1043:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_Serial.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_Serial.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_Serial.c ****         *  pointer and getting an interrupt in between instructions.
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 35


1047:Generated_Source\PSoC5/UART_Serial.c ****         */
1048:Generated_Source\PSoC5/UART_Serial.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_Serial.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_Serial.c **** 
1051:Generated_Source\PSoC5/UART_Serial.c ****         do
1052:Generated_Source\PSoC5/UART_Serial.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_Serial.c **** 
1054:Generated_Source\PSoC5/UART_Serial.c ****         #if ((UART_Serial_TX_BUFFER_SIZE > UART_Serial_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_Serial.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_DisableTxInt();
1057:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (UART_Serial_TX_BUFFER_SIZE > UART_Serial_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_Serial.c **** 
1059:Generated_Source\PSoC5/UART_Serial.c ****             locTxBufferWrite = UART_Serial_txBufferWrite;
1060:Generated_Source\PSoC5/UART_Serial.c ****             locTxBufferRead  = UART_Serial_txBufferRead;
1061:Generated_Source\PSoC5/UART_Serial.c **** 
1062:Generated_Source\PSoC5/UART_Serial.c ****         #if ((UART_Serial_TX_BUFFER_SIZE > UART_Serial_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_Serial.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_EnableTxInt();
1065:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (UART_Serial_TX_BUFFER_SIZE > UART_Serial_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_Serial.c ****         }
1067:Generated_Source\PSoC5/UART_Serial.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_Serial.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_Serial.c ****                                 (uint8)(UART_Serial_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART_Serial.c **** 
1071:Generated_Source\PSoC5/UART_Serial.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_Serial.c ****             ((UART_Serial_TXSTATUS_REG & UART_Serial_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_Serial.c ****         {
1074:Generated_Source\PSoC5/UART_Serial.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_Serial.c ****         }
1077:Generated_Source\PSoC5/UART_Serial.c ****         else
1078:Generated_Source\PSoC5/UART_Serial.c ****         {
1079:Generated_Source\PSoC5/UART_Serial.c ****             if(locTxBufferWrite >= UART_Serial_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_Serial.c ****             {
1081:Generated_Source\PSoC5/UART_Serial.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_Serial.c ****             }
1083:Generated_Source\PSoC5/UART_Serial.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_Serial.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_Serial.c **** 
1087:Generated_Source\PSoC5/UART_Serial.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_Serial.c ****         #if ((UART_Serial_TX_BUFFER_SIZE > UART_Serial_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_DisableTxInt();
1090:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (UART_Serial_TX_BUFFER_SIZE > UART_Serial_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_Serial.c **** 
1092:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_Serial.c **** 
1094:Generated_Source\PSoC5/UART_Serial.c ****         #if ((UART_Serial_TX_BUFFER_SIZE > UART_Serial_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_EnableTxInt();
1096:Generated_Source\PSoC5/UART_Serial.c ****         #endif /* (UART_Serial_TX_BUFFER_SIZE > UART_Serial_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_Serial.c **** 
1098:Generated_Source\PSoC5/UART_Serial.c ****             if(0u != (UART_Serial_TXSTATUS_REG & UART_Serial_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_Serial.c ****             {
1100:Generated_Source\PSoC5/UART_Serial.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_Serial.c ****             }
1103:Generated_Source\PSoC5/UART_Serial.c ****         }
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 36


1104:Generated_Source\PSoC5/UART_Serial.c **** 
1105:Generated_Source\PSoC5/UART_Serial.c ****     #else
1106:Generated_Source\PSoC5/UART_Serial.c **** 
1107:Generated_Source\PSoC5/UART_Serial.c ****         while((UART_Serial_TXSTATUS_REG & UART_Serial_TX_STS_FIFO_FULL) != 0u)
 886              		.loc 1 1107 0 discriminator 1
 887 0000 034B     		ldr	r3, .L79
 888 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 889 0004 13F0040F 		tst	r3, #4
 890 0008 FAD1     		bne	.L78
1108:Generated_Source\PSoC5/UART_Serial.c ****         {
1109:Generated_Source\PSoC5/UART_Serial.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_Serial.c ****         }
1111:Generated_Source\PSoC5/UART_Serial.c **** 
1112:Generated_Source\PSoC5/UART_Serial.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_TXDATA_REG = txDataByte;
 891              		.loc 1 1113 0
 892 000a 024B     		ldr	r3, .L79+4
 893 000c 1870     		strb	r0, [r3]
 894 000e 7047     		bx	lr
 895              	.L80:
 896              		.align	2
 897              	.L79:
 898 0010 65650040 		.word	1073767781
 899 0014 46650040 		.word	1073767750
 900              		.cfi_endproc
 901              	.LFE19:
 902              		.size	UART_Serial_PutChar, .-UART_Serial_PutChar
 903              		.section	.text.UART_Serial_PutString,"ax",%progbits
 904              		.align	2
 905              		.global	UART_Serial_PutString
 906              		.thumb
 907              		.thumb_func
 908              		.type	UART_Serial_PutString, %function
 909              	UART_Serial_PutString:
 910              	.LFB20:
1114:Generated_Source\PSoC5/UART_Serial.c **** 
1115:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* UART_Serial_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_Serial.c ****     }
1117:Generated_Source\PSoC5/UART_Serial.c **** 
1118:Generated_Source\PSoC5/UART_Serial.c **** 
1119:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_PutString
1121:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_Serial.c ****     *
1123:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_Serial.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_Serial.c ****     *
1126:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_Serial.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_Serial.c ****     *
1129:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
1130:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
1131:Generated_Source\PSoC5/UART_Serial.c ****     *
1132:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_Serial.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_Serial.c ****     *
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 37


1136:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
1138:Generated_Source\PSoC5/UART_Serial.c ****     *
1139:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_Serial.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_Serial.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_Serial.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_Serial.c ****     *
1144:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_Serial.c ****     {
 911              		.loc 1 1146 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              	.LVL55:
 916 0000 38B5     		push	{r3, r4, r5, lr}
 917              		.cfi_def_cfa_offset 16
 918              		.cfi_offset 3, -16
 919              		.cfi_offset 4, -12
 920              		.cfi_offset 5, -8
 921              		.cfi_offset 14, -4
 922              	.LVL56:
1147:Generated_Source\PSoC5/UART_Serial.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART_Serial.c **** 
1149:Generated_Source\PSoC5/UART_Serial.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_Serial.c ****         if(UART_Serial_initVar != 0u)
 923              		.loc 1 1150 0
 924 0002 074B     		ldr	r3, .L87
 925 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 926 0006 2BB9     		cbnz	r3, .L85
 927 0008 38BD     		pop	{r3, r4, r5, pc}
 928              	.LVL57:
 929              	.L84:
1151:Generated_Source\PSoC5/UART_Serial.c ****         {
1152:Generated_Source\PSoC5/UART_Serial.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_Serial.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART_Serial.c ****             {
1155:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_PutChar((uint8)string[bufIndex]);
 930              		.loc 1 1155 0
 931 000a FFF7FEFF 		bl	UART_Serial_PutChar
 932              	.LVL58:
1156:Generated_Source\PSoC5/UART_Serial.c ****                 bufIndex++;
 933              		.loc 1 1156 0
 934 000e 0134     		adds	r4, r4, #1
 935              	.LVL59:
 936 0010 A4B2     		uxth	r4, r4
 937              	.LVL60:
 938 0012 01E0     		b	.L82
 939              	.LVL61:
 940              	.L85:
 941 0014 0546     		mov	r5, r0
 942 0016 0024     		movs	r4, #0
 943              	.LVL62:
 944              	.L82:
1153:Generated_Source\PSoC5/UART_Serial.c ****             {
 945              		.loc 1 1153 0
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 38


 946 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 947 001a 0028     		cmp	r0, #0
 948 001c F5D1     		bne	.L84
 949 001e 38BD     		pop	{r3, r4, r5, pc}
 950              	.LVL63:
 951              	.L88:
 952              		.align	2
 953              	.L87:
 954 0020 00000000 		.word	.LANCHOR0
 955              		.cfi_endproc
 956              	.LFE20:
 957              		.size	UART_Serial_PutString, .-UART_Serial_PutString
 958              		.section	.text.UART_Serial_PutArray,"ax",%progbits
 959              		.align	2
 960              		.global	UART_Serial_PutArray
 961              		.thumb
 962              		.thumb_func
 963              		.type	UART_Serial_PutArray, %function
 964              	UART_Serial_PutArray:
 965              	.LFB21:
1157:Generated_Source\PSoC5/UART_Serial.c ****             }
1158:Generated_Source\PSoC5/UART_Serial.c ****         }
1159:Generated_Source\PSoC5/UART_Serial.c ****     }
1160:Generated_Source\PSoC5/UART_Serial.c **** 
1161:Generated_Source\PSoC5/UART_Serial.c **** 
1162:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_PutArray
1164:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_Serial.c ****     *
1166:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_Serial.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_Serial.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_Serial.c ****     *
1170:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_Serial.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_Serial.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_Serial.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_Serial.c ****     *
1175:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
1176:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
1177:Generated_Source\PSoC5/UART_Serial.c ****     *
1178:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_Serial.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_Serial.c ****     *
1182:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
1184:Generated_Source\PSoC5/UART_Serial.c ****     *
1185:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_Serial.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_Serial.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_Serial.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_Serial.c ****     *
1190:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_Serial.c ****                                                                     
1193:Generated_Source\PSoC5/UART_Serial.c ****     {
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 39


 966              		.loc 1 1193 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              	.LVL64:
1194:Generated_Source\PSoC5/UART_Serial.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART_Serial.c **** 
1196:Generated_Source\PSoC5/UART_Serial.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_Serial.c ****         if(UART_Serial_initVar != 0u)
 971              		.loc 1 1197 0
 972 0000 084B     		ldr	r3, .L95
 973 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 974 0004 33B9     		cbnz	r3, .L93
 975 0006 7047     		bx	lr
 976              	.LVL65:
 977              	.L92:
 978              		.cfi_def_cfa_offset 16
 979              		.cfi_offset 4, -16
 980              		.cfi_offset 5, -12
 981              		.cfi_offset 6, -8
 982              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART_Serial.c ****         {
1199:Generated_Source\PSoC5/UART_Serial.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART_Serial.c ****             {
1201:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_PutChar(string[bufIndex]);
 983              		.loc 1 1201 0
 984 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 985 000a FFF7FEFF 		bl	UART_Serial_PutChar
 986              	.LVL66:
1202:Generated_Source\PSoC5/UART_Serial.c ****                 bufIndex++;
 987              		.loc 1 1202 0
 988 000e 0134     		adds	r4, r4, #1
 989              	.LVL67:
 990 0010 E4B2     		uxtb	r4, r4
 991              	.LVL68:
 992 0012 03E0     		b	.L90
 993              	.LVL69:
 994              	.L93:
 995              		.cfi_def_cfa_offset 0
 996              		.cfi_restore 4
 997              		.cfi_restore 5
 998              		.cfi_restore 6
 999              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART_Serial.c ****         uint8 bufIndex = 0u;
 1000              		.loc 1 1193 0
 1001 0014 70B5     		push	{r4, r5, r6, lr}
 1002              		.cfi_def_cfa_offset 16
 1003              		.cfi_offset 4, -16
 1004              		.cfi_offset 5, -12
 1005              		.cfi_offset 6, -8
 1006              		.cfi_offset 14, -4
 1007 0016 0D46     		mov	r5, r1
 1008 0018 0646     		mov	r6, r0
 1009 001a 0024     		movs	r4, #0
 1010              	.LVL70:
 1011              	.L90:
1199:Generated_Source\PSoC5/UART_Serial.c ****             {
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 40


 1012              		.loc 1 1199 0
 1013 001c AC42     		cmp	r4, r5
 1014 001e F3D3     		bcc	.L92
 1015 0020 70BD     		pop	{r4, r5, r6, pc}
 1016              	.LVL71:
 1017              	.L96:
 1018 0022 00BF     		.align	2
 1019              	.L95:
 1020 0024 00000000 		.word	.LANCHOR0
 1021              		.cfi_endproc
 1022              	.LFE21:
 1023              		.size	UART_Serial_PutArray, .-UART_Serial_PutArray
 1024              		.section	.text.UART_Serial_PutCRLF,"ax",%progbits
 1025              		.align	2
 1026              		.global	UART_Serial_PutCRLF
 1027              		.thumb
 1028              		.thumb_func
 1029              		.type	UART_Serial_PutCRLF, %function
 1030              	UART_Serial_PutCRLF:
 1031              	.LFB22:
1203:Generated_Source\PSoC5/UART_Serial.c ****             }
1204:Generated_Source\PSoC5/UART_Serial.c ****         }
1205:Generated_Source\PSoC5/UART_Serial.c ****     }
1206:Generated_Source\PSoC5/UART_Serial.c **** 
1207:Generated_Source\PSoC5/UART_Serial.c **** 
1208:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_PutCRLF
1210:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_Serial.c ****     *
1212:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_Serial.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_Serial.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_Serial.c ****     *
1216:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_Serial.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_Serial.c ****     *
1219:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
1220:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
1221:Generated_Source\PSoC5/UART_Serial.c ****     *
1222:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_Serial.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_Serial.c ****     *
1226:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
1228:Generated_Source\PSoC5/UART_Serial.c ****     *
1229:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_Serial.c ****     {
 1032              		.loc 1 1231 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036              	.LVL72:
 1037 0000 08B5     		push	{r3, lr}
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 3, -8
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 41


 1040              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART_Serial.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_Serial.c ****         if(UART_Serial_initVar != 0u)
 1041              		.loc 1 1233 0
 1042 0002 064B     		ldr	r3, .L100
 1043 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1044 0006 3BB1     		cbz	r3, .L97
1234:Generated_Source\PSoC5/UART_Serial.c ****         {
1235:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_PutChar(txDataByte);
 1045              		.loc 1 1235 0
 1046 0008 FFF7FEFF 		bl	UART_Serial_PutChar
 1047              	.LVL73:
1236:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_PutChar(0x0Du);
 1048              		.loc 1 1236 0
 1049 000c 0D20     		movs	r0, #13
 1050 000e FFF7FEFF 		bl	UART_Serial_PutChar
 1051              	.LVL74:
1237:Generated_Source\PSoC5/UART_Serial.c ****             UART_Serial_PutChar(0x0Au);
 1052              		.loc 1 1237 0
 1053 0012 0A20     		movs	r0, #10
 1054 0014 FFF7FEFF 		bl	UART_Serial_PutChar
 1055              	.LVL75:
 1056              	.L97:
 1057 0018 08BD     		pop	{r3, pc}
 1058              	.L101:
 1059 001a 00BF     		.align	2
 1060              	.L100:
 1061 001c 00000000 		.word	.LANCHOR0
 1062              		.cfi_endproc
 1063              	.LFE22:
 1064              		.size	UART_Serial_PutCRLF, .-UART_Serial_PutCRLF
 1065              		.section	.text.UART_Serial_GetTxBufferSize,"ax",%progbits
 1066              		.align	2
 1067              		.global	UART_Serial_GetTxBufferSize
 1068              		.thumb
 1069              		.thumb_func
 1070              		.type	UART_Serial_GetTxBufferSize, %function
 1071              	UART_Serial_GetTxBufferSize:
 1072              	.LFB23:
1238:Generated_Source\PSoC5/UART_Serial.c ****         }
1239:Generated_Source\PSoC5/UART_Serial.c ****     }
1240:Generated_Source\PSoC5/UART_Serial.c **** 
1241:Generated_Source\PSoC5/UART_Serial.c **** 
1242:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_Serial.c ****     *
1246:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_Serial.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_Serial.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_Serial.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_Serial.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_Serial.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_Serial.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_Serial.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_Serial.c ****     *
1255:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 42


1256:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
1257:Generated_Source\PSoC5/UART_Serial.c ****     *
1258:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
1259:Generated_Source\PSoC5/UART_Serial.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_Serial.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_Serial.c ****     *
1262:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_Serial.c ****     *
1266:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
1268:Generated_Source\PSoC5/UART_Serial.c ****     *
1269:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_Serial.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_Serial.c ****     *
1272:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_Serial.c ****     uint8 UART_Serial_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_Serial.c ****                                                             
1275:Generated_Source\PSoC5/UART_Serial.c ****     {
 1073              		.loc 1 1275 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 0
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
 1077              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART_Serial.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_Serial.c **** 
1278:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_Serial.c **** 
1280:Generated_Source\PSoC5/UART_Serial.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_DisableTxInt();
1282:Generated_Source\PSoC5/UART_Serial.c **** 
1283:Generated_Source\PSoC5/UART_Serial.c ****         if(UART_Serial_txBufferRead == UART_Serial_txBufferWrite)
1284:Generated_Source\PSoC5/UART_Serial.c ****         {
1285:Generated_Source\PSoC5/UART_Serial.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_Serial.c ****         }
1287:Generated_Source\PSoC5/UART_Serial.c ****         else if(UART_Serial_txBufferRead < UART_Serial_txBufferWrite)
1288:Generated_Source\PSoC5/UART_Serial.c ****         {
1289:Generated_Source\PSoC5/UART_Serial.c ****             size = (UART_Serial_txBufferWrite - UART_Serial_txBufferRead);
1290:Generated_Source\PSoC5/UART_Serial.c ****         }
1291:Generated_Source\PSoC5/UART_Serial.c ****         else
1292:Generated_Source\PSoC5/UART_Serial.c ****         {
1293:Generated_Source\PSoC5/UART_Serial.c ****             size = (UART_Serial_TX_BUFFER_SIZE - UART_Serial_txBufferRead) +
1294:Generated_Source\PSoC5/UART_Serial.c ****                     UART_Serial_txBufferWrite;
1295:Generated_Source\PSoC5/UART_Serial.c ****         }
1296:Generated_Source\PSoC5/UART_Serial.c **** 
1297:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_EnableTxInt();
1298:Generated_Source\PSoC5/UART_Serial.c **** 
1299:Generated_Source\PSoC5/UART_Serial.c ****     #else
1300:Generated_Source\PSoC5/UART_Serial.c **** 
1301:Generated_Source\PSoC5/UART_Serial.c ****         size = UART_Serial_TXSTATUS_REG;
 1078              		.loc 1 1301 0
 1079 0000 074B     		ldr	r3, .L106
 1080 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1081 0004 DBB2     		uxtb	r3, r3
 1082              	.LVL76:
1302:Generated_Source\PSoC5/UART_Serial.c **** 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 43


1303:Generated_Source\PSoC5/UART_Serial.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_Serial.c ****         if((size & UART_Serial_TX_STS_FIFO_FULL) != 0u)
 1083              		.loc 1 1304 0
 1084 0006 13F0040F 		tst	r3, #4
 1085 000a 04D1     		bne	.L104
1305:Generated_Source\PSoC5/UART_Serial.c ****         {
1306:Generated_Source\PSoC5/UART_Serial.c ****             size = UART_Serial_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART_Serial.c ****         }
1308:Generated_Source\PSoC5/UART_Serial.c ****         else if((size & UART_Serial_TX_STS_FIFO_EMPTY) != 0u)
 1086              		.loc 1 1308 0
 1087 000c 13F0020F 		tst	r3, #2
 1088 0010 03D0     		beq	.L105
1309:Generated_Source\PSoC5/UART_Serial.c ****         {
1310:Generated_Source\PSoC5/UART_Serial.c ****             size = 0u;
 1089              		.loc 1 1310 0
 1090 0012 0020     		movs	r0, #0
 1091 0014 7047     		bx	lr
 1092              	.L104:
1306:Generated_Source\PSoC5/UART_Serial.c ****         }
 1093              		.loc 1 1306 0
 1094 0016 0420     		movs	r0, #4
 1095 0018 7047     		bx	lr
 1096              	.L105:
1311:Generated_Source\PSoC5/UART_Serial.c ****         }
1312:Generated_Source\PSoC5/UART_Serial.c ****         else
1313:Generated_Source\PSoC5/UART_Serial.c ****         {
1314:Generated_Source\PSoC5/UART_Serial.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_Serial.c ****             size = 1u;
 1097              		.loc 1 1315 0
 1098 001a 0120     		movs	r0, #1
 1099              	.LVL77:
1316:Generated_Source\PSoC5/UART_Serial.c ****         }
1317:Generated_Source\PSoC5/UART_Serial.c **** 
1318:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_Serial.c **** 
1320:Generated_Source\PSoC5/UART_Serial.c ****     return(size);
1321:Generated_Source\PSoC5/UART_Serial.c ****     }
 1100              		.loc 1 1321 0
 1101 001c 7047     		bx	lr
 1102              	.L107:
 1103 001e 00BF     		.align	2
 1104              	.L106:
 1105 0020 65650040 		.word	1073767781
 1106              		.cfi_endproc
 1107              	.LFE23:
 1108              		.size	UART_Serial_GetTxBufferSize, .-UART_Serial_GetTxBufferSize
 1109              		.section	.text.UART_Serial_ClearTxBuffer,"ax",%progbits
 1110              		.align	2
 1111              		.global	UART_Serial_ClearTxBuffer
 1112              		.thumb
 1113              		.thumb_func
 1114              		.type	UART_Serial_ClearTxBuffer, %function
 1115              	UART_Serial_ClearTxBuffer:
 1116              	.LFB24:
1322:Generated_Source\PSoC5/UART_Serial.c **** 
1323:Generated_Source\PSoC5/UART_Serial.c **** 
1324:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 44


1325:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_Serial.c ****     *
1328:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_Serial.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_Serial.c ****     *
1331:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
1333:Generated_Source\PSoC5/UART_Serial.c ****     *
1334:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
1335:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
1336:Generated_Source\PSoC5/UART_Serial.c ****     *
1337:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_Serial.c ****     *
1341:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
1343:Generated_Source\PSoC5/UART_Serial.c ****     *
1344:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_Serial.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_Serial.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_Serial.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_Serial.c ****     *
1349:Generated_Source\PSoC5/UART_Serial.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_Serial.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_Serial.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_Serial.c ****     *
1353:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_Serial.c ****     {
 1117              		.loc 1 1355 0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121 0000 08B5     		push	{r3, lr}
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 3, -8
 1124              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART_Serial.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_Serial.c **** 
1358:Generated_Source\PSoC5/UART_Serial.c ****         enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1358 0
 1126 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL78:
1359:Generated_Source\PSoC5/UART_Serial.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_TXDATA_AUX_CTL_REG |= (uint8)  UART_Serial_TX_FIFO_CLR;
 1128              		.loc 1 1360 0
 1129 0006 064B     		ldr	r3, .L110
 1130 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1131 000a 42F00102 		orr	r2, r2, #1
 1132 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_TXDATA_AUX_CTL_REG &= (uint8) ~UART_Serial_TX_FIFO_CLR;
 1133              		.loc 1 1361 0
 1134 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1135 0012 02F0FE02 		and	r2, r2, #254
 1136 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 45


1362:Generated_Source\PSoC5/UART_Serial.c ****         CyExitCriticalSection(enableInterrupts);
 1137              		.loc 1 1362 0
 1138 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1139              	.LVL79:
 1140 001c 08BD     		pop	{r3, pc}
 1141              	.L111:
 1142 001e 00BF     		.align	2
 1143              	.L110:
 1144 0020 96650040 		.word	1073767830
 1145              		.cfi_endproc
 1146              	.LFE24:
 1147              		.size	UART_Serial_ClearTxBuffer, .-UART_Serial_ClearTxBuffer
 1148              		.section	.text.UART_Serial_SendBreak,"ax",%progbits
 1149              		.align	2
 1150              		.global	UART_Serial_SendBreak
 1151              		.thumb
 1152              		.thumb_func
 1153              		.type	UART_Serial_SendBreak, %function
 1154              	UART_Serial_SendBreak:
 1155              	.LFB25:
1363:Generated_Source\PSoC5/UART_Serial.c **** 
1364:Generated_Source\PSoC5/UART_Serial.c ****     #if (UART_Serial_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_Serial.c **** 
1366:Generated_Source\PSoC5/UART_Serial.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_DisableTxInt();
1368:Generated_Source\PSoC5/UART_Serial.c **** 
1369:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART_Serial.c **** 
1372:Generated_Source\PSoC5/UART_Serial.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_Serial.c ****         UART_Serial_EnableTxInt();
1374:Generated_Source\PSoC5/UART_Serial.c **** 
1375:Generated_Source\PSoC5/UART_Serial.c ****     #endif /* (UART_Serial_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_Serial.c ****     }
1377:Generated_Source\PSoC5/UART_Serial.c **** 
1378:Generated_Source\PSoC5/UART_Serial.c **** 
1379:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_SendBreak
1381:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_Serial.c ****     *
1383:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_Serial.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_Serial.c ****     *
1386:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_Serial.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_Serial.c ****     *   UART_Serial_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_Serial.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_Serial.c ****     *   UART_Serial_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_Serial.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_Serial.c ****     *   UART_Serial_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_Serial.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_Serial.c ****     *   UART_Serial_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_Serial.c ****     *      UART_Serial_SEND_BREAK and UART_Serial_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_Serial.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_Serial.c ****     *
1398:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
1399:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 46


1400:Generated_Source\PSoC5/UART_Serial.c ****     *
1401:Generated_Source\PSoC5/UART_Serial.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_Serial.c ****     *  UART_Serial_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_Serial.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_Serial.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_Serial.c ****     *
1406:Generated_Source\PSoC5/UART_Serial.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_Serial.c ****     *  No.
1408:Generated_Source\PSoC5/UART_Serial.c ****     *
1409:Generated_Source\PSoC5/UART_Serial.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_Serial.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_Serial.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_Serial.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_Serial.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_Serial.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_Serial.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_Serial.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_Serial.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_Serial.c ****     *     operation
1419:Generated_Source\PSoC5/UART_Serial.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_Serial.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_Serial.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_Serial.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_Serial.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_Serial.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_Serial.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_Serial.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_Serial.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_Serial.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_Serial.c ****     *     When interrupt appear with UART_Serial_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_Serial.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_Serial.c ****     *
1432:Generated_Source\PSoC5/UART_Serial.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_Serial.c ****     *  The UART_Serial_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_Serial.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_Serial.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_Serial.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_Serial.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_Serial.c ****     *
1439:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_Serial.c ****     {
 1156              		.loc 1 1441 0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 0
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160              		@ link register save eliminated.
 1161              	.LVL80:
1442:Generated_Source\PSoC5/UART_Serial.c **** 
1443:Generated_Source\PSoC5/UART_Serial.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_Serial.c ****         if(UART_Serial_initVar != 0u)
 1162              		.loc 1 1444 0
 1163 0000 134B     		ldr	r3, .L119
 1164 0002 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1165 0004 13B3     		cbz	r3, .L112
 1166              	.LBB2:
1445:Generated_Source\PSoC5/UART_Serial.c ****         {
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 47


1446:Generated_Source\PSoC5/UART_Serial.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_Serial.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_Serial.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_Serial.c **** 
1450:Generated_Source\PSoC5/UART_Serial.c ****         #if(UART_Serial_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_Serial.c **** 
1452:Generated_Source\PSoC5/UART_Serial.c ****             if( (retMode == UART_Serial_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_Serial.c ****                 (retMode == UART_Serial_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_Serial.c ****             {
1455:Generated_Source\PSoC5/UART_Serial.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_WriteControlRegister(UART_Serial_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_Serial.c ****                                                       UART_Serial_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_Serial.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_Serial.c **** 
1461:Generated_Source\PSoC5/UART_Serial.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_Serial.c ****                 {
1463:Generated_Source\PSoC5/UART_Serial.c ****                     tmpStat = UART_Serial_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_Serial.c ****                 }
1465:Generated_Source\PSoC5/UART_Serial.c ****                 while((tmpStat & UART_Serial_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_Serial.c ****             }
1467:Generated_Source\PSoC5/UART_Serial.c **** 
1468:Generated_Source\PSoC5/UART_Serial.c ****             if( (retMode == UART_Serial_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_Serial.c ****                 (retMode == UART_Serial_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_Serial.c ****             {
1471:Generated_Source\PSoC5/UART_Serial.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_Serial.c ****                 {
1473:Generated_Source\PSoC5/UART_Serial.c ****                     tmpStat = UART_Serial_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_Serial.c ****                 }
1475:Generated_Source\PSoC5/UART_Serial.c ****                 while(((uint8)~tmpStat & UART_Serial_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_Serial.c ****             }
1477:Generated_Source\PSoC5/UART_Serial.c **** 
1478:Generated_Source\PSoC5/UART_Serial.c ****             if( (retMode == UART_Serial_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_Serial.c ****                 (retMode == UART_Serial_REINIT) ||
1480:Generated_Source\PSoC5/UART_Serial.c ****                 (retMode == UART_Serial_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_Serial.c ****             {
1482:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_WriteControlRegister(UART_Serial_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_Serial.c ****                                               (uint8)~UART_Serial_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_Serial.c ****             }
1485:Generated_Source\PSoC5/UART_Serial.c **** 
1486:Generated_Source\PSoC5/UART_Serial.c ****         #else /* UART_Serial_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_Serial.c **** 
1488:Generated_Source\PSoC5/UART_Serial.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_Serial.c **** 
1490:Generated_Source\PSoC5/UART_Serial.c ****             if( (retMode == UART_Serial_SEND_BREAK) ||
 1167              		.loc 1 1490 0
 1168 0006 08B1     		cbz	r0, .L114
 1169              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1170 0008 0328     		cmp	r0, #3
 1171 000a 0ED1     		bne	.L115
 1172              	.L114:
1491:Generated_Source\PSoC5/UART_Serial.c ****                 (retMode == UART_Serial_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_Serial.c ****             {
1493:Generated_Source\PSoC5/UART_Serial.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_Serial.c ****                 #if( (UART_Serial_PARITY_TYPE != UART_Serial__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_Serial.c ****                                     (UART_Serial_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_Serial.c ****                     UART_Serial_WriteControlRegister(UART_Serial_ReadControlRegister() |
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 48


1497:Generated_Source\PSoC5/UART_Serial.c ****                                                           UART_Serial_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_Serial.c ****                 #endif /* End UART_Serial_PARITY_TYPE != UART_Serial__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_Serial.c **** 
1500:Generated_Source\PSoC5/UART_Serial.c ****                 #if(UART_Serial_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_Serial.c ****                     txPeriod = UART_Serial_TXBITCLKTX_COMPLETE_REG;
 1173              		.loc 1 1501 0 is_stmt 1
 1174 000c 114B     		ldr	r3, .L119+4
 1175 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1176 0010 0F4A     		ldr	r2, .L119
 1177 0012 1172     		strb	r1, [r2, #8]
1502:Generated_Source\PSoC5/UART_Serial.c ****                     UART_Serial_TXBITCLKTX_COMPLETE_REG = UART_Serial_TXBITCTR_BREAKBITS;
 1178              		.loc 1 1502 0
 1179 0014 6722     		movs	r2, #103
 1180 0016 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART_Serial.c ****                 #else
1504:Generated_Source\PSoC5/UART_Serial.c ****                     txPeriod = UART_Serial_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_Serial.c ****                     UART_Serial_TXBITCTR_PERIOD_REG = UART_Serial_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_Serial.c ****                 #endif /* End UART_Serial_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_Serial.c **** 
1508:Generated_Source\PSoC5/UART_Serial.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_TXDATA_REG = 0u;
 1181              		.loc 1 1509 0
 1182 0018 0022     		movs	r2, #0
 1183 001a 03F58873 		add	r3, r3, #272
 1184 001e 1A70     		strb	r2, [r3]
 1185              	.L116:
1510:Generated_Source\PSoC5/UART_Serial.c **** 
1511:Generated_Source\PSoC5/UART_Serial.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_Serial.c ****                 {
1513:Generated_Source\PSoC5/UART_Serial.c ****                     tmpStat = UART_Serial_TXSTATUS_REG;
 1186              		.loc 1 1513 0 discriminator 1
 1187 0020 0D4B     		ldr	r3, .L119+8
 1188 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1189              	.LVL81:
1514:Generated_Source\PSoC5/UART_Serial.c ****                 }
1515:Generated_Source\PSoC5/UART_Serial.c ****                 while((tmpStat & UART_Serial_TX_STS_FIFO_EMPTY) != 0u);
 1190              		.loc 1 1515 0 discriminator 1
 1191 0024 13F0020F 		tst	r3, #2
 1192 0028 FAD1     		bne	.L116
 1193              	.LVL82:
 1194              	.L115:
1516:Generated_Source\PSoC5/UART_Serial.c ****             }
1517:Generated_Source\PSoC5/UART_Serial.c **** 
1518:Generated_Source\PSoC5/UART_Serial.c ****             if( (retMode == UART_Serial_WAIT_FOR_COMPLETE_REINIT) ||
 1195              		.loc 1 1518 0
 1196 002a 0128     		cmp	r0, #1
 1197 002c 01D0     		beq	.L117
 1198              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1199 002e 0328     		cmp	r0, #3
 1200 0030 04D1     		bne	.L118
 1201              	.L117:
1519:Generated_Source\PSoC5/UART_Serial.c ****                 (retMode == UART_Serial_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_Serial.c ****             {
1521:Generated_Source\PSoC5/UART_Serial.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_Serial.c ****                 {
1523:Generated_Source\PSoC5/UART_Serial.c ****                     tmpStat = UART_Serial_TXSTATUS_REG;
 1202              		.loc 1 1523 0 is_stmt 1 discriminator 1
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 49


 1203 0032 094B     		ldr	r3, .L119+8
 1204 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205              	.LVL83:
1524:Generated_Source\PSoC5/UART_Serial.c ****                 }
1525:Generated_Source\PSoC5/UART_Serial.c ****                 while(((uint8)~tmpStat & UART_Serial_TX_STS_COMPLETE) != 0u);
 1206              		.loc 1 1525 0 discriminator 1
 1207 0036 13F0010F 		tst	r3, #1
 1208 003a FAD0     		beq	.L117
 1209              	.LVL84:
 1210              	.L118:
1526:Generated_Source\PSoC5/UART_Serial.c ****             }
1527:Generated_Source\PSoC5/UART_Serial.c **** 
1528:Generated_Source\PSoC5/UART_Serial.c ****             if( (retMode == UART_Serial_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART_Serial.c ****                 (retMode == UART_Serial_REINIT) ||
 1211              		.loc 1 1529 0
 1212 003c 0138     		subs	r0, r0, #1
 1213              	.LVL85:
 1214 003e C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/UART_Serial.c ****                 (retMode == UART_Serial_REINIT) ||
 1215              		.loc 1 1528 0
 1216 0040 0228     		cmp	r0, #2
 1217 0042 03D8     		bhi	.L112
1530:Generated_Source\PSoC5/UART_Serial.c ****                 (retMode == UART_Serial_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_Serial.c ****             {
1532:Generated_Source\PSoC5/UART_Serial.c **** 
1533:Generated_Source\PSoC5/UART_Serial.c ****             #if(UART_Serial_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1218              		.loc 1 1534 0
 1219 0044 024B     		ldr	r3, .L119
 1220 0046 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1221 0048 024B     		ldr	r3, .L119+4
 1222 004a 1A70     		strb	r2, [r3]
 1223              	.L112:
 1224 004c 7047     		bx	lr
 1225              	.L120:
 1226 004e 00BF     		.align	2
 1227              	.L119:
 1228 0050 00000000 		.word	.LANCHOR0
 1229 0054 36640040 		.word	1073767478
 1230 0058 65650040 		.word	1073767781
 1231              	.LBE2:
 1232              		.cfi_endproc
 1233              	.LFE25:
 1234              		.size	UART_Serial_SendBreak, .-UART_Serial_SendBreak
 1235              		.section	.text.UART_Serial_SetTxAddressMode,"ax",%progbits
 1236              		.align	2
 1237              		.global	UART_Serial_SetTxAddressMode
 1238              		.thumb
 1239              		.thumb_func
 1240              		.type	UART_Serial_SetTxAddressMode, %function
 1241              	UART_Serial_SetTxAddressMode:
 1242              	.LFB26:
1535:Generated_Source\PSoC5/UART_Serial.c ****             #else
1536:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_Serial.c ****             #endif /* End UART_Serial_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_Serial.c **** 
1539:Generated_Source\PSoC5/UART_Serial.c ****             #if( (UART_Serial_PARITY_TYPE != UART_Serial__B_UART__NONE_REVB) || \
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 50


1540:Generated_Source\PSoC5/UART_Serial.c ****                  (UART_Serial_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_Serial.c ****                 UART_Serial_WriteControlRegister(UART_Serial_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_Serial.c ****                                                       (uint8) ~UART_Serial_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_Serial.c ****             #endif /* End UART_Serial_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_Serial.c ****             }
1545:Generated_Source\PSoC5/UART_Serial.c ****         #endif    /* End UART_Serial_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_Serial.c ****         }
1547:Generated_Source\PSoC5/UART_Serial.c ****     }
1548:Generated_Source\PSoC5/UART_Serial.c **** 
1549:Generated_Source\PSoC5/UART_Serial.c **** 
1550:Generated_Source\PSoC5/UART_Serial.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_Serial.c ****     * Function Name: UART_Serial_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_Serial.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_Serial.c ****     *
1554:Generated_Source\PSoC5/UART_Serial.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_Serial.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_Serial.c ****     *
1557:Generated_Source\PSoC5/UART_Serial.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_Serial.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_Serial.c ****     *       UART_Serial_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_Serial.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_Serial.c ****     *       UART_Serial_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_Serial.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_Serial.c ****     *
1564:Generated_Source\PSoC5/UART_Serial.c ****     * Return:
1565:Generated_Source\PSoC5/UART_Serial.c ****     *  None.
1566:Generated_Source\PSoC5/UART_Serial.c ****     *
1567:Generated_Source\PSoC5/UART_Serial.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_Serial.c ****     *  This function sets and clears UART_Serial_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_Serial.c ****     *  register.
1570:Generated_Source\PSoC5/UART_Serial.c ****     *
1571:Generated_Source\PSoC5/UART_Serial.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_Serial.c ****     void UART_Serial_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_Serial.c ****     {
 1243              		.loc 1 1573 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 0
 1246              		@ frame_needed = 0, uses_anonymous_args = 0
 1247              		@ link register save eliminated.
 1248              	.LVL86:
 1249 0000 7047     		bx	lr
 1250              		.cfi_endproc
 1251              	.LFE26:
 1252              		.size	UART_Serial_SetTxAddressMode, .-UART_Serial_SetTxAddressMode
 1253              		.global	UART_Serial_rxBufferOverflow
 1254              		.global	UART_Serial_rxBufferLoopDetect
 1255              		.global	UART_Serial_rxBufferWrite
 1256              		.global	UART_Serial_rxBufferRead
 1257              		.comm	UART_Serial_rxBuffer,1600,4
 1258              		.global	UART_Serial_errorStatus
 1259              		.global	UART_Serial_initVar
 1260 0002 00BF     		.bss
 1261              		.align	1
 1262              		.set	.LANCHOR0,. + 0
 1263              		.type	UART_Serial_errorStatus, %object
 1264              		.size	UART_Serial_errorStatus, 1
 1265              	UART_Serial_errorStatus:
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 51


 1266 0000 00       		.space	1
 1267              		.type	UART_Serial_initVar, %object
 1268              		.size	UART_Serial_initVar, 1
 1269              	UART_Serial_initVar:
 1270 0001 00       		.space	1
 1271              		.type	UART_Serial_rxBufferRead, %object
 1272              		.size	UART_Serial_rxBufferRead, 2
 1273              	UART_Serial_rxBufferRead:
 1274 0002 0000     		.space	2
 1275              		.type	UART_Serial_rxBufferWrite, %object
 1276              		.size	UART_Serial_rxBufferWrite, 2
 1277              	UART_Serial_rxBufferWrite:
 1278 0004 0000     		.space	2
 1279              		.type	UART_Serial_rxBufferLoopDetect, %object
 1280              		.size	UART_Serial_rxBufferLoopDetect, 1
 1281              	UART_Serial_rxBufferLoopDetect:
 1282 0006 00       		.space	1
 1283              		.type	UART_Serial_rxBufferOverflow, %object
 1284              		.size	UART_Serial_rxBufferOverflow, 1
 1285              	UART_Serial_rxBufferOverflow:
 1286 0007 00       		.space	1
 1287              		.type	txPeriod.5118, %object
 1288              		.size	txPeriod.5118, 1
 1289              	txPeriod.5118:
 1290 0008 00       		.space	1
 1291              		.text
 1292              	.Letext0:
 1293              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1294              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1295              		.section	.debug_info,"",%progbits
 1296              	.Ldebug_info0:
 1297 0000 F9060000 		.4byte	0x6f9
 1298 0004 0400     		.2byte	0x4
 1299 0006 00000000 		.4byte	.Ldebug_abbrev0
 1300 000a 04       		.byte	0x4
 1301 000b 01       		.uleb128 0x1
 1302 000c 0E040000 		.4byte	.LASF77
 1303 0010 0C       		.byte	0xc
 1304 0011 B7030000 		.4byte	.LASF78
 1305 0015 BD050000 		.4byte	.LASF79
 1306 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1307 001d 00000000 		.4byte	0
 1308 0021 00000000 		.4byte	.Ldebug_line0
 1309 0025 02       		.uleb128 0x2
 1310 0026 01       		.byte	0x1
 1311 0027 06       		.byte	0x6
 1312 0028 BB000000 		.4byte	.LASF0
 1313 002c 02       		.uleb128 0x2
 1314 002d 01       		.byte	0x1
 1315 002e 08       		.byte	0x8
 1316 002f F6030000 		.4byte	.LASF1
 1317 0033 02       		.uleb128 0x2
 1318 0034 02       		.byte	0x2
 1319 0035 05       		.byte	0x5
 1320 0036 04040000 		.4byte	.LASF2
 1321 003a 02       		.uleb128 0x2
 1322 003b 02       		.byte	0x2
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 52


 1323 003c 07       		.byte	0x7
 1324 003d 33020000 		.4byte	.LASF3
 1325 0041 02       		.uleb128 0x2
 1326 0042 04       		.byte	0x4
 1327 0043 05       		.byte	0x5
 1328 0044 FE000000 		.4byte	.LASF4
 1329 0048 02       		.uleb128 0x2
 1330 0049 04       		.byte	0x4
 1331 004a 07       		.byte	0x7
 1332 004b FC010000 		.4byte	.LASF5
 1333 004f 02       		.uleb128 0x2
 1334 0050 08       		.byte	0x8
 1335 0051 05       		.byte	0x5
 1336 0052 AD000000 		.4byte	.LASF6
 1337 0056 02       		.uleb128 0x2
 1338 0057 08       		.byte	0x8
 1339 0058 07       		.byte	0x7
 1340 0059 6C000000 		.4byte	.LASF7
 1341 005d 03       		.uleb128 0x3
 1342 005e 04       		.byte	0x4
 1343 005f 05       		.byte	0x5
 1344 0060 696E7400 		.ascii	"int\000"
 1345 0064 02       		.uleb128 0x2
 1346 0065 04       		.byte	0x4
 1347 0066 07       		.byte	0x7
 1348 0067 E0010000 		.4byte	.LASF8
 1349 006b 04       		.uleb128 0x4
 1350 006c 07010000 		.4byte	.LASF9
 1351 0070 02       		.byte	0x2
 1352 0071 E801     		.2byte	0x1e8
 1353 0073 2C000000 		.4byte	0x2c
 1354 0077 04       		.uleb128 0x4
 1355 0078 14000000 		.4byte	.LASF10
 1356 007c 02       		.byte	0x2
 1357 007d E901     		.2byte	0x1e9
 1358 007f 3A000000 		.4byte	0x3a
 1359 0083 04       		.uleb128 0x4
 1360 0084 73010000 		.4byte	.LASF11
 1361 0088 02       		.byte	0x2
 1362 0089 EA01     		.2byte	0x1ea
 1363 008b 48000000 		.4byte	0x48
 1364 008f 02       		.uleb128 0x2
 1365 0090 04       		.byte	0x4
 1366 0091 04       		.byte	0x4
 1367 0092 B1030000 		.4byte	.LASF12
 1368 0096 02       		.uleb128 0x2
 1369 0097 08       		.byte	0x8
 1370 0098 04       		.byte	0x4
 1371 0099 0D010000 		.4byte	.LASF13
 1372 009d 04       		.uleb128 0x4
 1373 009e 30050000 		.4byte	.LASF14
 1374 00a2 02       		.byte	0x2
 1375 00a3 F901     		.2byte	0x1f9
 1376 00a5 A9000000 		.4byte	0xa9
 1377 00a9 02       		.uleb128 0x2
 1378 00aa 01       		.byte	0x1
 1379 00ab 08       		.byte	0x8
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 53


 1380 00ac DD040000 		.4byte	.LASF15
 1381 00b0 04       		.uleb128 0x4
 1382 00b1 DC030000 		.4byte	.LASF16
 1383 00b5 02       		.byte	0x2
 1384 00b6 9202     		.2byte	0x292
 1385 00b8 BC000000 		.4byte	0xbc
 1386 00bc 05       		.uleb128 0x5
 1387 00bd 6B000000 		.4byte	0x6b
 1388 00c1 05       		.uleb128 0x5
 1389 00c2 77000000 		.4byte	0x77
 1390 00c6 04       		.uleb128 0x4
 1391 00c7 13030000 		.4byte	.LASF17
 1392 00cb 02       		.byte	0x2
 1393 00cc 9402     		.2byte	0x294
 1394 00ce D2000000 		.4byte	0xd2
 1395 00d2 05       		.uleb128 0x5
 1396 00d3 83000000 		.4byte	0x83
 1397 00d7 02       		.uleb128 0x2
 1398 00d8 08       		.byte	0x8
 1399 00d9 04       		.byte	0x4
 1400 00da 2A030000 		.4byte	.LASF18
 1401 00de 02       		.uleb128 0x2
 1402 00df 04       		.byte	0x4
 1403 00e0 07       		.byte	0x7
 1404 00e1 21030000 		.4byte	.LASF19
 1405 00e5 06       		.uleb128 0x6
 1406 00e6 9C000000 		.4byte	.LASF20
 1407 00ea 01       		.byte	0x1
 1408 00eb 6A       		.byte	0x6a
 1409 00ec 00000000 		.4byte	.LFB1
 1410 00f0 48000000 		.4byte	.LFE1-.LFB1
 1411 00f4 01       		.uleb128 0x1
 1412 00f5 9C       		.byte	0x9c
 1413 00f6 22010000 		.4byte	0x122
 1414 00fa 07       		.uleb128 0x7
 1415 00fb 0A000000 		.4byte	.LVL0
 1416 00ff D0060000 		.4byte	0x6d0
 1417 0103 0D010000 		.4byte	0x10d
 1418 0107 08       		.uleb128 0x8
 1419 0108 01       		.uleb128 0x1
 1420 0109 50       		.byte	0x50
 1421 010a 01       		.uleb128 0x1
 1422 010b 30       		.byte	0x30
 1423 010c 00       		.byte	0
 1424 010d 09       		.uleb128 0x9
 1425 010e 12000000 		.4byte	.LVL1
 1426 0112 DB060000 		.4byte	0x6db
 1427 0116 08       		.uleb128 0x8
 1428 0117 01       		.uleb128 0x1
 1429 0118 50       		.byte	0x50
 1430 0119 01       		.uleb128 0x1
 1431 011a 30       		.byte	0x30
 1432 011b 08       		.uleb128 0x8
 1433 011c 01       		.uleb128 0x1
 1434 011d 51       		.byte	0x51
 1435 011e 01       		.uleb128 0x1
 1436 011f 37       		.byte	0x37
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 54


 1437 0120 00       		.byte	0
 1438 0121 00       		.byte	0
 1439 0122 06       		.uleb128 0x6
 1440 0123 F1050000 		.4byte	.LASF21
 1441 0127 01       		.byte	0x1
 1442 0128 B7       		.byte	0xb7
 1443 0129 00000000 		.4byte	.LFB2
 1444 012d 40000000 		.4byte	.LFE2-.LFB2
 1445 0131 01       		.uleb128 0x1
 1446 0132 9C       		.byte	0x9c
 1447 0133 59010000 		.4byte	0x159
 1448 0137 0A       		.uleb128 0xa
 1449 0138 91050000 		.4byte	.LASF24
 1450 013c 01       		.byte	0x1
 1451 013d B9       		.byte	0xb9
 1452 013e 6B000000 		.4byte	0x6b
 1453 0142 00000000 		.4byte	.LLST0
 1454 0146 0B       		.uleb128 0xb
 1455 0147 06000000 		.4byte	.LVL2
 1456 014b E6060000 		.4byte	0x6e6
 1457 014f 0B       		.uleb128 0xb
 1458 0150 30000000 		.4byte	.LVL3
 1459 0154 F1060000 		.4byte	0x6f1
 1460 0158 00       		.byte	0
 1461 0159 06       		.uleb128 0x6
 1462 015a 1E050000 		.4byte	.LASF22
 1463 015e 01       		.byte	0x1
 1464 015f 4C       		.byte	0x4c
 1465 0160 00000000 		.4byte	.LFB0
 1466 0164 1C000000 		.4byte	.LFE0-.LFB0
 1467 0168 01       		.uleb128 0x1
 1468 0169 9C       		.byte	0x9c
 1469 016a 81010000 		.4byte	0x181
 1470 016e 0B       		.uleb128 0xb
 1471 016f 0C000000 		.4byte	.LVL4
 1472 0173 E5000000 		.4byte	0xe5
 1473 0177 0B       		.uleb128 0xb
 1474 0178 16000000 		.4byte	.LVL5
 1475 017c 22010000 		.4byte	0x122
 1476 0180 00       		.byte	0
 1477 0181 06       		.uleb128 0x6
 1478 0182 CC040000 		.4byte	.LASF23
 1479 0186 01       		.byte	0x1
 1480 0187 F0       		.byte	0xf0
 1481 0188 00000000 		.4byte	.LFB3
 1482 018c 40000000 		.4byte	.LFE3-.LFB3
 1483 0190 01       		.uleb128 0x1
 1484 0191 9C       		.byte	0x9c
 1485 0192 B8010000 		.4byte	0x1b8
 1486 0196 0A       		.uleb128 0xa
 1487 0197 91050000 		.4byte	.LASF24
 1488 019b 01       		.byte	0x1
 1489 019c F2       		.byte	0xf2
 1490 019d 6B000000 		.4byte	0x6b
 1491 01a1 13000000 		.4byte	.LLST1
 1492 01a5 0B       		.uleb128 0xb
 1493 01a6 06000000 		.4byte	.LVL6
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 55


 1494 01aa E6060000 		.4byte	0x6e6
 1495 01ae 0B       		.uleb128 0xb
 1496 01af 30000000 		.4byte	.LVL7
 1497 01b3 F1060000 		.4byte	0x6f1
 1498 01b7 00       		.byte	0
 1499 01b8 0C       		.uleb128 0xc
 1500 01b9 55020000 		.4byte	.LASF50
 1501 01bd 01       		.byte	0x1
 1502 01be 2701     		.2byte	0x127
 1503 01c0 6B000000 		.4byte	0x6b
 1504 01c4 00000000 		.4byte	.LFB4
 1505 01c8 04000000 		.4byte	.LFE4-.LFB4
 1506 01cc 01       		.uleb128 0x1
 1507 01cd 9C       		.byte	0x9c
 1508 01ce 0D       		.uleb128 0xd
 1509 01cf 9F010000 		.4byte	.LASF25
 1510 01d3 01       		.byte	0x1
 1511 01d4 3F01     		.2byte	0x13f
 1512 01d6 00000000 		.4byte	.LFB5
 1513 01da 02000000 		.4byte	.LFE5-.LFB5
 1514 01de 01       		.uleb128 0x1
 1515 01df 9C       		.byte	0x9c
 1516 01e0 F3010000 		.4byte	0x1f3
 1517 01e4 0E       		.uleb128 0xe
 1518 01e5 97010000 		.4byte	.LASF27
 1519 01e9 01       		.byte	0x1
 1520 01ea 3F01     		.2byte	0x13f
 1521 01ec 6B000000 		.4byte	0x6b
 1522 01f0 01       		.uleb128 0x1
 1523 01f1 50       		.byte	0x50
 1524 01f2 00       		.byte	0
 1525 01f3 0D       		.uleb128 0xd
 1526 01f4 F4020000 		.4byte	.LASF26
 1527 01f8 01       		.byte	0x1
 1528 01f9 6701     		.2byte	0x167
 1529 01fb 00000000 		.4byte	.LFB6
 1530 01ff 0C000000 		.4byte	.LFE6-.LFB6
 1531 0203 01       		.uleb128 0x1
 1532 0204 9C       		.byte	0x9c
 1533 0205 18020000 		.4byte	0x218
 1534 0209 0E       		.uleb128 0xe
 1535 020a 75020000 		.4byte	.LASF28
 1536 020e 01       		.byte	0x1
 1537 020f 6701     		.2byte	0x167
 1538 0211 6B000000 		.4byte	0x6b
 1539 0215 01       		.uleb128 0x1
 1540 0216 50       		.byte	0x50
 1541 0217 00       		.byte	0
 1542 0218 0F       		.uleb128 0xf
 1543 0219 DD020000 		.4byte	.LASF32
 1544 021d 01       		.byte	0x1
 1545 021e 8801     		.2byte	0x188
 1546 0220 6B000000 		.4byte	0x6b
 1547 0224 00000000 		.4byte	.LFB7
 1548 0228 64000000 		.4byte	.LFE7-.LFB7
 1549 022c 01       		.uleb128 0x1
 1550 022d 9C       		.byte	0x9c
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 56


 1551 022e 61020000 		.4byte	0x261
 1552 0232 10       		.uleb128 0x10
 1553 0233 A6040000 		.4byte	.LASF29
 1554 0237 01       		.byte	0x1
 1555 0238 8A01     		.2byte	0x18a
 1556 023a 6B000000 		.4byte	0x6b
 1557 023e 26000000 		.4byte	.LLST2
 1558 0242 10       		.uleb128 0x10
 1559 0243 81050000 		.4byte	.LASF30
 1560 0247 01       		.byte	0x1
 1561 0248 8E01     		.2byte	0x18e
 1562 024a 77000000 		.4byte	0x77
 1563 024e 44000000 		.4byte	.LLST3
 1564 0252 11       		.uleb128 0x11
 1565 0253 58030000 		.4byte	.LASF31
 1566 0257 01       		.byte	0x1
 1567 0258 8F01     		.2byte	0x18f
 1568 025a 77000000 		.4byte	0x77
 1569 025e 01       		.uleb128 0x1
 1570 025f 51       		.byte	0x51
 1571 0260 00       		.byte	0
 1572 0261 0F       		.uleb128 0xf
 1573 0262 B0020000 		.4byte	.LASF33
 1574 0266 01       		.byte	0x1
 1575 0267 E501     		.2byte	0x1e5
 1576 0269 6B000000 		.4byte	0x6b
 1577 026d 00000000 		.4byte	.LFB8
 1578 0271 28000000 		.4byte	.LFE8-.LFB8
 1579 0275 01       		.uleb128 0x1
 1580 0276 9C       		.byte	0x9c
 1581 0277 8A020000 		.4byte	0x28a
 1582 027b 11       		.uleb128 0x11
 1583 027c A2050000 		.4byte	.LASF34
 1584 0280 01       		.byte	0x1
 1585 0281 E701     		.2byte	0x1e7
 1586 0283 6B000000 		.4byte	0x6b
 1587 0287 01       		.uleb128 0x1
 1588 0288 50       		.byte	0x50
 1589 0289 00       		.byte	0
 1590 028a 0F       		.uleb128 0xf
 1591 028b A9050000 		.4byte	.LASF35
 1592 028f 01       		.byte	0x1
 1593 0290 1402     		.2byte	0x214
 1594 0292 6B000000 		.4byte	0x6b
 1595 0296 00000000 		.4byte	.LFB9
 1596 029a 84000000 		.4byte	.LFE9-.LFB9
 1597 029e 01       		.uleb128 0x1
 1598 029f 9C       		.byte	0x9c
 1599 02a0 E3020000 		.4byte	0x2e3
 1600 02a4 10       		.uleb128 0x10
 1601 02a5 A6040000 		.4byte	.LASF29
 1602 02a9 01       		.byte	0x1
 1603 02aa 1602     		.2byte	0x216
 1604 02ac 6B000000 		.4byte	0x6b
 1605 02b0 89000000 		.4byte	.LLST4
 1606 02b4 10       		.uleb128 0x10
 1607 02b5 69030000 		.4byte	.LASF36
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 57


 1608 02b9 01       		.byte	0x1
 1609 02ba 1702     		.2byte	0x217
 1610 02bc 6B000000 		.4byte	0x6b
 1611 02c0 D6000000 		.4byte	.LLST5
 1612 02c4 10       		.uleb128 0x10
 1613 02c5 81050000 		.4byte	.LASF30
 1614 02c9 01       		.byte	0x1
 1615 02ca 1A02     		.2byte	0x21a
 1616 02cc 77000000 		.4byte	0x77
 1617 02d0 E9000000 		.4byte	.LLST6
 1618 02d4 11       		.uleb128 0x11
 1619 02d5 58030000 		.4byte	.LASF31
 1620 02d9 01       		.byte	0x1
 1621 02da 1B02     		.2byte	0x21b
 1622 02dc 77000000 		.4byte	0x77
 1623 02e0 01       		.uleb128 0x1
 1624 02e1 51       		.byte	0x51
 1625 02e2 00       		.byte	0
 1626 02e3 0F       		.uleb128 0xf
 1627 02e4 C9020000 		.4byte	.LASF37
 1628 02e8 01       		.byte	0x1
 1629 02e9 7A02     		.2byte	0x27a
 1630 02eb 77000000 		.4byte	0x77
 1631 02ef 00000000 		.4byte	.LFB10
 1632 02f3 2C000000 		.4byte	.LFE10-.LFB10
 1633 02f7 01       		.uleb128 0x1
 1634 02f8 9C       		.byte	0x9c
 1635 02f9 17030000 		.4byte	0x317
 1636 02fd 10       		.uleb128 0x10
 1637 02fe ED010000 		.4byte	.LASF38
 1638 0302 01       		.byte	0x1
 1639 0303 7E02     		.2byte	0x27e
 1640 0305 77000000 		.4byte	0x77
 1641 0309 2E010000 		.4byte	.LLST7
 1642 030d 0B       		.uleb128 0xb
 1643 030e 1A000000 		.4byte	.LVL41
 1644 0312 18020000 		.4byte	0x218
 1645 0316 00       		.byte	0
 1646 0317 0F       		.uleb128 0xf
 1647 0318 4C050000 		.4byte	.LASF39
 1648 031c 01       		.byte	0x1
 1649 031d AB02     		.2byte	0x2ab
 1650 031f 77000000 		.4byte	0x77
 1651 0323 00000000 		.4byte	.LFB11
 1652 0327 6C000000 		.4byte	.LFE11-.LFB11
 1653 032b 01       		.uleb128 0x1
 1654 032c 9C       		.byte	0x9c
 1655 032d 42030000 		.4byte	0x342
 1656 0331 10       		.uleb128 0x10
 1657 0332 2E020000 		.4byte	.LASF40
 1658 0336 01       		.byte	0x1
 1659 0337 AE02     		.2byte	0x2ae
 1660 0339 77000000 		.4byte	0x77
 1661 033d 41010000 		.4byte	.LLST8
 1662 0341 00       		.byte	0
 1663 0342 0D       		.uleb128 0xd
 1664 0343 3E030000 		.4byte	.LASF41
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 58


 1665 0347 01       		.byte	0x1
 1666 0348 F502     		.2byte	0x2f5
 1667 034a 00000000 		.4byte	.LFB12
 1668 034e 44000000 		.4byte	.LFE12-.LFB12
 1669 0352 01       		.uleb128 0x1
 1670 0353 9C       		.byte	0x9c
 1671 0354 7B030000 		.4byte	0x37b
 1672 0358 10       		.uleb128 0x10
 1673 0359 91050000 		.4byte	.LASF24
 1674 035d 01       		.byte	0x1
 1675 035e F702     		.2byte	0x2f7
 1676 0360 6B000000 		.4byte	0x6b
 1677 0364 6A010000 		.4byte	.LLST9
 1678 0368 0B       		.uleb128 0xb
 1679 0369 06000000 		.4byte	.LVL47
 1680 036d E6060000 		.4byte	0x6e6
 1681 0371 0B       		.uleb128 0xb
 1682 0372 1C000000 		.4byte	.LVL48
 1683 0376 F1060000 		.4byte	0x6f1
 1684 037a 00       		.byte	0
 1685 037b 0D       		.uleb128 0xd
 1686 037c 01050000 		.4byte	.LASF42
 1687 0380 01       		.byte	0x1
 1688 0381 2D03     		.2byte	0x32d
 1689 0383 00000000 		.4byte	.LFB13
 1690 0387 02000000 		.4byte	.LFE13-.LFB13
 1691 038b 01       		.uleb128 0x1
 1692 038c 9C       		.byte	0x9c
 1693 038d A0030000 		.4byte	0x3a0
 1694 0391 0E       		.uleb128 0xe
 1695 0392 14010000 		.4byte	.LASF43
 1696 0396 01       		.byte	0x1
 1697 0397 2D03     		.2byte	0x32d
 1698 0399 6B000000 		.4byte	0x6b
 1699 039d 01       		.uleb128 0x1
 1700 039e 50       		.byte	0x50
 1701 039f 00       		.byte	0
 1702 03a0 0D       		.uleb128 0xd
 1703 03a1 7C020000 		.4byte	.LASF44
 1704 03a5 01       		.byte	0x1
 1705 03a6 5903     		.2byte	0x359
 1706 03a8 00000000 		.4byte	.LFB14
 1707 03ac 0C000000 		.4byte	.LFE14-.LFB14
 1708 03b0 01       		.uleb128 0x1
 1709 03b1 9C       		.byte	0x9c
 1710 03b2 C5030000 		.4byte	0x3c5
 1711 03b6 0E       		.uleb128 0xe
 1712 03b7 36030000 		.4byte	.LASF45
 1713 03bb 01       		.byte	0x1
 1714 03bc 5903     		.2byte	0x359
 1715 03be 6B000000 		.4byte	0x6b
 1716 03c2 01       		.uleb128 0x1
 1717 03c3 50       		.byte	0x50
 1718 03c4 00       		.byte	0
 1719 03c5 0D       		.uleb128 0xd
 1720 03c6 96020000 		.4byte	.LASF46
 1721 03ca 01       		.byte	0x1
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 59


 1722 03cb 6D03     		.2byte	0x36d
 1723 03cd 00000000 		.4byte	.LFB15
 1724 03d1 0C000000 		.4byte	.LFE15-.LFB15
 1725 03d5 01       		.uleb128 0x1
 1726 03d6 9C       		.byte	0x9c
 1727 03d7 EA030000 		.4byte	0x3ea
 1728 03db 0E       		.uleb128 0xe
 1729 03dc 36030000 		.4byte	.LASF45
 1730 03e0 01       		.byte	0x1
 1731 03e1 6D03     		.2byte	0x36d
 1732 03e3 6B000000 		.4byte	0x6b
 1733 03e7 01       		.uleb128 0x1
 1734 03e8 50       		.byte	0x50
 1735 03e9 00       		.byte	0
 1736 03ea 0D       		.uleb128 0xd
 1737 03eb E2040000 		.4byte	.LASF47
 1738 03ef 01       		.byte	0x1
 1739 03f0 8C03     		.2byte	0x38c
 1740 03f2 00000000 		.4byte	.LFB16
 1741 03f6 0C000000 		.4byte	.LFE16-.LFB16
 1742 03fa 01       		.uleb128 0x1
 1743 03fb 9C       		.byte	0x9c
 1744 03fc 0F040000 		.4byte	0x40f
 1745 0400 0E       		.uleb128 0xe
 1746 0401 75020000 		.4byte	.LASF28
 1747 0405 01       		.byte	0x1
 1748 0406 8C03     		.2byte	0x38c
 1749 0408 6B000000 		.4byte	0x6b
 1750 040c 01       		.uleb128 0x1
 1751 040d 50       		.byte	0x50
 1752 040e 00       		.byte	0
 1753 040f 0D       		.uleb128 0xd
 1754 0410 C8010000 		.4byte	.LASF48
 1755 0414 01       		.byte	0x1
 1756 0415 AE03     		.2byte	0x3ae
 1757 0417 00000000 		.4byte	.LFB17
 1758 041b 14000000 		.4byte	.LFE17-.LFB17
 1759 041f 01       		.uleb128 0x1
 1760 0420 9C       		.byte	0x9c
 1761 0421 34040000 		.4byte	0x434
 1762 0425 0E       		.uleb128 0xe
 1763 0426 46000000 		.4byte	.LASF49
 1764 042a 01       		.byte	0x1
 1765 042b AE03     		.2byte	0x3ae
 1766 042d 6B000000 		.4byte	0x6b
 1767 0431 01       		.uleb128 0x1
 1768 0432 50       		.byte	0x50
 1769 0433 00       		.byte	0
 1770 0434 0C       		.uleb128 0xc
 1771 0435 68050000 		.4byte	.LASF51
 1772 0439 01       		.byte	0x1
 1773 043a EB03     		.2byte	0x3eb
 1774 043c 6B000000 		.4byte	0x6b
 1775 0440 00000000 		.4byte	.LFB18
 1776 0444 0C000000 		.4byte	.LFE18-.LFB18
 1777 0448 01       		.uleb128 0x1
 1778 0449 9C       		.byte	0x9c
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 60


 1779 044a 0D       		.uleb128 0xd
 1780 044b 51000000 		.4byte	.LASF52
 1781 044f 01       		.byte	0x1
 1782 0450 1104     		.2byte	0x411
 1783 0452 00000000 		.4byte	.LFB19
 1784 0456 18000000 		.4byte	.LFE19-.LFB19
 1785 045a 01       		.uleb128 0x1
 1786 045b 9C       		.byte	0x9c
 1787 045c 6F040000 		.4byte	0x46f
 1788 0460 0E       		.uleb128 0xe
 1789 0461 46000000 		.4byte	.LASF49
 1790 0465 01       		.byte	0x1
 1791 0466 1104     		.2byte	0x411
 1792 0468 6B000000 		.4byte	0x6b
 1793 046c 01       		.uleb128 0x1
 1794 046d 50       		.byte	0x50
 1795 046e 00       		.byte	0
 1796 046f 0D       		.uleb128 0xd
 1797 0470 36050000 		.4byte	.LASF53
 1798 0474 01       		.byte	0x1
 1799 0475 7904     		.2byte	0x479
 1800 0477 00000000 		.4byte	.LFB20
 1801 047b 24000000 		.4byte	.LFE20-.LFB20
 1802 047f 01       		.uleb128 0x1
 1803 0480 9C       		.byte	0x9c
 1804 0481 AF040000 		.4byte	0x4af
 1805 0485 12       		.uleb128 0x12
 1806 0486 65000000 		.4byte	.LASF54
 1807 048a 01       		.byte	0x1
 1808 048b 7904     		.2byte	0x479
 1809 048d AF040000 		.4byte	0x4af
 1810 0491 7D010000 		.4byte	.LLST10
 1811 0495 10       		.uleb128 0x10
 1812 0496 0E020000 		.4byte	.LASF55
 1813 049a 01       		.byte	0x1
 1814 049b 7B04     		.2byte	0x47b
 1815 049d 77000000 		.4byte	0x77
 1816 04a1 BF010000 		.4byte	.LLST11
 1817 04a5 0B       		.uleb128 0xb
 1818 04a6 0E000000 		.4byte	.LVL58
 1819 04aa 4A040000 		.4byte	0x44a
 1820 04ae 00       		.byte	0
 1821 04af 13       		.uleb128 0x13
 1822 04b0 04       		.byte	0x4
 1823 04b1 B5040000 		.4byte	0x4b5
 1824 04b5 14       		.uleb128 0x14
 1825 04b6 9D000000 		.4byte	0x9d
 1826 04ba 0D       		.uleb128 0xd
 1827 04bb 1B000000 		.4byte	.LASF56
 1828 04bf 01       		.byte	0x1
 1829 04c0 A704     		.2byte	0x4a7
 1830 04c2 00000000 		.4byte	.LFB21
 1831 04c6 28000000 		.4byte	.LFE21-.LFB21
 1832 04ca 01       		.uleb128 0x1
 1833 04cb 9C       		.byte	0x9c
 1834 04cc 0A050000 		.4byte	0x50a
 1835 04d0 12       		.uleb128 0x12
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 61


 1836 04d1 65000000 		.4byte	.LASF54
 1837 04d5 01       		.byte	0x1
 1838 04d6 A704     		.2byte	0x4a7
 1839 04d8 0A050000 		.4byte	0x50a
 1840 04dc 00020000 		.4byte	.LLST12
 1841 04e0 12       		.uleb128 0x12
 1842 04e1 9C040000 		.4byte	.LASF57
 1843 04e5 01       		.byte	0x1
 1844 04e6 A704     		.2byte	0x4a7
 1845 04e8 6B000000 		.4byte	0x6b
 1846 04ec 42020000 		.4byte	.LLST13
 1847 04f0 10       		.uleb128 0x10
 1848 04f1 0E020000 		.4byte	.LASF55
 1849 04f5 01       		.byte	0x1
 1850 04f6 AA04     		.2byte	0x4aa
 1851 04f8 6B000000 		.4byte	0x6b
 1852 04fc 7C020000 		.4byte	.LLST14
 1853 0500 0B       		.uleb128 0xb
 1854 0501 0E000000 		.4byte	.LVL66
 1855 0505 4A040000 		.4byte	0x44a
 1856 0509 00       		.byte	0
 1857 050a 13       		.uleb128 0x13
 1858 050b 04       		.byte	0x4
 1859 050c 10050000 		.4byte	0x510
 1860 0510 14       		.uleb128 0x14
 1861 0511 6B000000 		.4byte	0x6b
 1862 0515 0D       		.uleb128 0xd
 1863 0516 EA000000 		.4byte	.LASF58
 1864 051a 01       		.byte	0x1
 1865 051b CE04     		.2byte	0x4ce
 1866 051d 00000000 		.4byte	.LFB22
 1867 0521 20000000 		.4byte	.LFE22-.LFB22
 1868 0525 01       		.uleb128 0x1
 1869 0526 9C       		.byte	0x9c
 1870 0527 67050000 		.4byte	0x567
 1871 052b 12       		.uleb128 0x12
 1872 052c 46000000 		.4byte	.LASF49
 1873 0530 01       		.byte	0x1
 1874 0531 CE04     		.2byte	0x4ce
 1875 0533 6B000000 		.4byte	0x6b
 1876 0537 BD020000 		.4byte	.LLST15
 1877 053b 0B       		.uleb128 0xb
 1878 053c 0C000000 		.4byte	.LVL73
 1879 0540 4A040000 		.4byte	0x44a
 1880 0544 07       		.uleb128 0x7
 1881 0545 12000000 		.4byte	.LVL74
 1882 0549 4A040000 		.4byte	0x44a
 1883 054d 57050000 		.4byte	0x557
 1884 0551 08       		.uleb128 0x8
 1885 0552 01       		.uleb128 0x1
 1886 0553 50       		.byte	0x50
 1887 0554 01       		.uleb128 0x1
 1888 0555 3D       		.byte	0x3d
 1889 0556 00       		.byte	0
 1890 0557 09       		.uleb128 0x9
 1891 0558 18000000 		.4byte	.LVL75
 1892 055c 4A040000 		.4byte	0x44a
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 62


 1893 0560 08       		.uleb128 0x8
 1894 0561 01       		.uleb128 0x1
 1895 0562 50       		.byte	0x50
 1896 0563 01       		.uleb128 0x1
 1897 0564 3A       		.byte	0x3a
 1898 0565 00       		.byte	0
 1899 0566 00       		.byte	0
 1900 0567 0F       		.uleb128 0xf
 1901 0568 3A010000 		.4byte	.LASF59
 1902 056c 01       		.byte	0x1
 1903 056d F904     		.2byte	0x4f9
 1904 056f 6B000000 		.4byte	0x6b
 1905 0573 00000000 		.4byte	.LFB23
 1906 0577 24000000 		.4byte	.LFE23-.LFB23
 1907 057b 01       		.uleb128 0x1
 1908 057c 9C       		.byte	0x9c
 1909 057d 92050000 		.4byte	0x592
 1910 0581 10       		.uleb128 0x10
 1911 0582 2E020000 		.4byte	.LASF40
 1912 0586 01       		.byte	0x1
 1913 0587 FC04     		.2byte	0x4fc
 1914 0589 6B000000 		.4byte	0x6b
 1915 058d DE020000 		.4byte	.LLST16
 1916 0591 00       		.byte	0
 1917 0592 0D       		.uleb128 0xd
 1918 0593 20010000 		.4byte	.LASF60
 1919 0597 01       		.byte	0x1
 1920 0598 4A05     		.2byte	0x54a
 1921 059a 00000000 		.4byte	.LFB24
 1922 059e 24000000 		.4byte	.LFE24-.LFB24
 1923 05a2 01       		.uleb128 0x1
 1924 05a3 9C       		.byte	0x9c
 1925 05a4 CB050000 		.4byte	0x5cb
 1926 05a8 10       		.uleb128 0x10
 1927 05a9 91050000 		.4byte	.LASF24
 1928 05ad 01       		.byte	0x1
 1929 05ae 4C05     		.2byte	0x54c
 1930 05b0 6B000000 		.4byte	0x6b
 1931 05b4 FC020000 		.4byte	.LLST17
 1932 05b8 0B       		.uleb128 0xb
 1933 05b9 06000000 		.4byte	.LVL78
 1934 05bd E6060000 		.4byte	0x6e6
 1935 05c1 0B       		.uleb128 0xb
 1936 05c2 1C000000 		.4byte	.LVL79
 1937 05c6 F1060000 		.4byte	0x6f1
 1938 05ca 00       		.byte	0
 1939 05cb 0D       		.uleb128 0xd
 1940 05cc 8A030000 		.4byte	.LASF61
 1941 05d0 01       		.byte	0x1
 1942 05d1 A005     		.2byte	0x5a0
 1943 05d3 00000000 		.4byte	.LFB25
 1944 05d7 5C000000 		.4byte	.LFE25-.LFB25
 1945 05db 01       		.uleb128 0x1
 1946 05dc 9C       		.byte	0x9c
 1947 05dd 1E060000 		.4byte	0x61e
 1948 05e1 12       		.uleb128 0x12
 1949 05e2 C0010000 		.4byte	.LASF62
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 63


 1950 05e6 01       		.byte	0x1
 1951 05e7 A005     		.2byte	0x5a0
 1952 05e9 6B000000 		.4byte	0x6b
 1953 05ed 0F030000 		.4byte	.LLST18
 1954 05f1 15       		.uleb128 0x15
 1955 05f2 06000000 		.4byte	.LBB2
 1956 05f6 56000000 		.4byte	.LBE2-.LBB2
 1957 05fa 10       		.uleb128 0x10
 1958 05fb 19030000 		.4byte	.LASF63
 1959 05ff 01       		.byte	0x1
 1960 0600 A805     		.2byte	0x5a8
 1961 0602 6B000000 		.4byte	0x6b
 1962 0606 30030000 		.4byte	.LLST19
 1963 060a 11       		.uleb128 0x11
 1964 060b E1000000 		.4byte	.LASF64
 1965 060f 01       		.byte	0x1
 1966 0610 D005     		.2byte	0x5d0
 1967 0612 6B000000 		.4byte	0x6b
 1968 0616 05       		.uleb128 0x5
 1969 0617 03       		.byte	0x3
 1970 0618 08000000 		.4byte	txPeriod.5118
 1971 061c 00       		.byte	0
 1972 061d 00       		.byte	0
 1973 061e 0D       		.uleb128 0xd
 1974 061f 7A010000 		.4byte	.LASF65
 1975 0623 01       		.byte	0x1
 1976 0624 2406     		.2byte	0x624
 1977 0626 00000000 		.4byte	.LFB26
 1978 062a 02000000 		.4byte	.LFE26-.LFB26
 1979 062e 01       		.uleb128 0x1
 1980 062f 9C       		.byte	0x9c
 1981 0630 43060000 		.4byte	0x643
 1982 0634 0E       		.uleb128 0xe
 1983 0635 14010000 		.4byte	.LASF43
 1984 0639 01       		.byte	0x1
 1985 063a 2406     		.2byte	0x624
 1986 063c 6B000000 		.4byte	0x6b
 1987 0640 01       		.uleb128 0x1
 1988 0641 50       		.byte	0x50
 1989 0642 00       		.byte	0
 1990 0643 16       		.uleb128 0x16
 1991 0644 00000000 		.4byte	.LASF66
 1992 0648 01       		.byte	0x1
 1993 0649 1B       		.byte	0x1b
 1994 064a 6B000000 		.4byte	0x6b
 1995 064e 05       		.uleb128 0x5
 1996 064f 03       		.byte	0x3
 1997 0650 00000000 		.4byte	UART_Serial_initVar
 1998 0654 16       		.uleb128 0x16
 1999 0655 72030000 		.4byte	.LASF67
 2000 0659 01       		.byte	0x1
 2001 065a 24       		.byte	0x24
 2002 065b 6B000000 		.4byte	0x6b
 2003 065f 05       		.uleb128 0x5
 2004 0660 03       		.byte	0x3
 2005 0661 00000000 		.4byte	UART_Serial_errorStatus
 2006 0665 17       		.uleb128 0x17
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 64


 2007 0666 BC000000 		.4byte	0xbc
 2008 066a 76060000 		.4byte	0x676
 2009 066e 18       		.uleb128 0x18
 2010 066f DE000000 		.4byte	0xde
 2011 0673 3F06     		.2byte	0x63f
 2012 0675 00       		.byte	0
 2013 0676 16       		.uleb128 0x16
 2014 0677 E1030000 		.4byte	.LASF68
 2015 067b 01       		.byte	0x1
 2016 067c 25       		.byte	0x25
 2017 067d 87060000 		.4byte	0x687
 2018 0681 05       		.uleb128 0x5
 2019 0682 03       		.byte	0x3
 2020 0683 00000000 		.4byte	UART_Serial_rxBuffer
 2021 0687 05       		.uleb128 0x5
 2022 0688 65060000 		.4byte	0x665
 2023 068c 16       		.uleb128 0x16
 2024 068d 83000000 		.4byte	.LASF69
 2025 0691 01       		.byte	0x1
 2026 0692 26       		.byte	0x26
 2027 0693 C1000000 		.4byte	0xc1
 2028 0697 05       		.uleb128 0x5
 2029 0698 03       		.byte	0x3
 2030 0699 00000000 		.4byte	UART_Serial_rxBufferRead
 2031 069d 16       		.uleb128 0x16
 2032 069e C7000000 		.4byte	.LASF70
 2033 06a2 01       		.byte	0x1
 2034 06a3 27       		.byte	0x27
 2035 06a4 C1000000 		.4byte	0xc1
 2036 06a8 05       		.uleb128 0x5
 2037 06a9 03       		.byte	0x3
 2038 06aa 00000000 		.4byte	UART_Serial_rxBufferWrite
 2039 06ae 16       		.uleb128 0x16
 2040 06af AD040000 		.4byte	.LASF71
 2041 06b3 01       		.byte	0x1
 2042 06b4 28       		.byte	0x28
 2043 06b5 BC000000 		.4byte	0xbc
 2044 06b9 05       		.uleb128 0x5
 2045 06ba 03       		.byte	0x3
 2046 06bb 00000000 		.4byte	UART_Serial_rxBufferLoopDetect
 2047 06bf 16       		.uleb128 0x16
 2048 06c0 56010000 		.4byte	.LASF72
 2049 06c4 01       		.byte	0x1
 2050 06c5 29       		.byte	0x29
 2051 06c6 BC000000 		.4byte	0xbc
 2052 06ca 05       		.uleb128 0x5
 2053 06cb 03       		.byte	0x3
 2054 06cc 00000000 		.4byte	UART_Serial_rxBufferOverflow
 2055 06d0 19       		.uleb128 0x19
 2056 06d1 46020000 		.4byte	.LASF73
 2057 06d5 46020000 		.4byte	.LASF73
 2058 06d9 03       		.byte	0x3
 2059 06da 88       		.byte	0x88
 2060 06db 19       		.uleb128 0x19
 2061 06dc A0030000 		.4byte	.LASF74
 2062 06e0 A0030000 		.4byte	.LASF74
 2063 06e4 03       		.byte	0x3
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 65


 2064 06e5 8B       		.byte	0x8b
 2065 06e6 19       		.uleb128 0x19
 2066 06e7 17020000 		.4byte	.LASF75
 2067 06eb 17020000 		.4byte	.LASF75
 2068 06ef 03       		.byte	0x3
 2069 06f0 7D       		.byte	0x7d
 2070 06f1 19       		.uleb128 0x19
 2071 06f2 30000000 		.4byte	.LASF76
 2072 06f6 30000000 		.4byte	.LASF76
 2073 06fa 03       		.byte	0x3
 2074 06fb 7E       		.byte	0x7e
 2075 06fc 00       		.byte	0
 2076              		.section	.debug_abbrev,"",%progbits
 2077              	.Ldebug_abbrev0:
 2078 0000 01       		.uleb128 0x1
 2079 0001 11       		.uleb128 0x11
 2080 0002 01       		.byte	0x1
 2081 0003 25       		.uleb128 0x25
 2082 0004 0E       		.uleb128 0xe
 2083 0005 13       		.uleb128 0x13
 2084 0006 0B       		.uleb128 0xb
 2085 0007 03       		.uleb128 0x3
 2086 0008 0E       		.uleb128 0xe
 2087 0009 1B       		.uleb128 0x1b
 2088 000a 0E       		.uleb128 0xe
 2089 000b 55       		.uleb128 0x55
 2090 000c 17       		.uleb128 0x17
 2091 000d 11       		.uleb128 0x11
 2092 000e 01       		.uleb128 0x1
 2093 000f 10       		.uleb128 0x10
 2094 0010 17       		.uleb128 0x17
 2095 0011 00       		.byte	0
 2096 0012 00       		.byte	0
 2097 0013 02       		.uleb128 0x2
 2098 0014 24       		.uleb128 0x24
 2099 0015 00       		.byte	0
 2100 0016 0B       		.uleb128 0xb
 2101 0017 0B       		.uleb128 0xb
 2102 0018 3E       		.uleb128 0x3e
 2103 0019 0B       		.uleb128 0xb
 2104 001a 03       		.uleb128 0x3
 2105 001b 0E       		.uleb128 0xe
 2106 001c 00       		.byte	0
 2107 001d 00       		.byte	0
 2108 001e 03       		.uleb128 0x3
 2109 001f 24       		.uleb128 0x24
 2110 0020 00       		.byte	0
 2111 0021 0B       		.uleb128 0xb
 2112 0022 0B       		.uleb128 0xb
 2113 0023 3E       		.uleb128 0x3e
 2114 0024 0B       		.uleb128 0xb
 2115 0025 03       		.uleb128 0x3
 2116 0026 08       		.uleb128 0x8
 2117 0027 00       		.byte	0
 2118 0028 00       		.byte	0
 2119 0029 04       		.uleb128 0x4
 2120 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 66


 2121 002b 00       		.byte	0
 2122 002c 03       		.uleb128 0x3
 2123 002d 0E       		.uleb128 0xe
 2124 002e 3A       		.uleb128 0x3a
 2125 002f 0B       		.uleb128 0xb
 2126 0030 3B       		.uleb128 0x3b
 2127 0031 05       		.uleb128 0x5
 2128 0032 49       		.uleb128 0x49
 2129 0033 13       		.uleb128 0x13
 2130 0034 00       		.byte	0
 2131 0035 00       		.byte	0
 2132 0036 05       		.uleb128 0x5
 2133 0037 35       		.uleb128 0x35
 2134 0038 00       		.byte	0
 2135 0039 49       		.uleb128 0x49
 2136 003a 13       		.uleb128 0x13
 2137 003b 00       		.byte	0
 2138 003c 00       		.byte	0
 2139 003d 06       		.uleb128 0x6
 2140 003e 2E       		.uleb128 0x2e
 2141 003f 01       		.byte	0x1
 2142 0040 3F       		.uleb128 0x3f
 2143 0041 19       		.uleb128 0x19
 2144 0042 03       		.uleb128 0x3
 2145 0043 0E       		.uleb128 0xe
 2146 0044 3A       		.uleb128 0x3a
 2147 0045 0B       		.uleb128 0xb
 2148 0046 3B       		.uleb128 0x3b
 2149 0047 0B       		.uleb128 0xb
 2150 0048 27       		.uleb128 0x27
 2151 0049 19       		.uleb128 0x19
 2152 004a 11       		.uleb128 0x11
 2153 004b 01       		.uleb128 0x1
 2154 004c 12       		.uleb128 0x12
 2155 004d 06       		.uleb128 0x6
 2156 004e 40       		.uleb128 0x40
 2157 004f 18       		.uleb128 0x18
 2158 0050 9742     		.uleb128 0x2117
 2159 0052 19       		.uleb128 0x19
 2160 0053 01       		.uleb128 0x1
 2161 0054 13       		.uleb128 0x13
 2162 0055 00       		.byte	0
 2163 0056 00       		.byte	0
 2164 0057 07       		.uleb128 0x7
 2165 0058 898201   		.uleb128 0x4109
 2166 005b 01       		.byte	0x1
 2167 005c 11       		.uleb128 0x11
 2168 005d 01       		.uleb128 0x1
 2169 005e 31       		.uleb128 0x31
 2170 005f 13       		.uleb128 0x13
 2171 0060 01       		.uleb128 0x1
 2172 0061 13       		.uleb128 0x13
 2173 0062 00       		.byte	0
 2174 0063 00       		.byte	0
 2175 0064 08       		.uleb128 0x8
 2176 0065 8A8201   		.uleb128 0x410a
 2177 0068 00       		.byte	0
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 67


 2178 0069 02       		.uleb128 0x2
 2179 006a 18       		.uleb128 0x18
 2180 006b 9142     		.uleb128 0x2111
 2181 006d 18       		.uleb128 0x18
 2182 006e 00       		.byte	0
 2183 006f 00       		.byte	0
 2184 0070 09       		.uleb128 0x9
 2185 0071 898201   		.uleb128 0x4109
 2186 0074 01       		.byte	0x1
 2187 0075 11       		.uleb128 0x11
 2188 0076 01       		.uleb128 0x1
 2189 0077 31       		.uleb128 0x31
 2190 0078 13       		.uleb128 0x13
 2191 0079 00       		.byte	0
 2192 007a 00       		.byte	0
 2193 007b 0A       		.uleb128 0xa
 2194 007c 34       		.uleb128 0x34
 2195 007d 00       		.byte	0
 2196 007e 03       		.uleb128 0x3
 2197 007f 0E       		.uleb128 0xe
 2198 0080 3A       		.uleb128 0x3a
 2199 0081 0B       		.uleb128 0xb
 2200 0082 3B       		.uleb128 0x3b
 2201 0083 0B       		.uleb128 0xb
 2202 0084 49       		.uleb128 0x49
 2203 0085 13       		.uleb128 0x13
 2204 0086 02       		.uleb128 0x2
 2205 0087 17       		.uleb128 0x17
 2206 0088 00       		.byte	0
 2207 0089 00       		.byte	0
 2208 008a 0B       		.uleb128 0xb
 2209 008b 898201   		.uleb128 0x4109
 2210 008e 00       		.byte	0
 2211 008f 11       		.uleb128 0x11
 2212 0090 01       		.uleb128 0x1
 2213 0091 31       		.uleb128 0x31
 2214 0092 13       		.uleb128 0x13
 2215 0093 00       		.byte	0
 2216 0094 00       		.byte	0
 2217 0095 0C       		.uleb128 0xc
 2218 0096 2E       		.uleb128 0x2e
 2219 0097 00       		.byte	0
 2220 0098 3F       		.uleb128 0x3f
 2221 0099 19       		.uleb128 0x19
 2222 009a 03       		.uleb128 0x3
 2223 009b 0E       		.uleb128 0xe
 2224 009c 3A       		.uleb128 0x3a
 2225 009d 0B       		.uleb128 0xb
 2226 009e 3B       		.uleb128 0x3b
 2227 009f 05       		.uleb128 0x5
 2228 00a0 27       		.uleb128 0x27
 2229 00a1 19       		.uleb128 0x19
 2230 00a2 49       		.uleb128 0x49
 2231 00a3 13       		.uleb128 0x13
 2232 00a4 11       		.uleb128 0x11
 2233 00a5 01       		.uleb128 0x1
 2234 00a6 12       		.uleb128 0x12
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 68


 2235 00a7 06       		.uleb128 0x6
 2236 00a8 40       		.uleb128 0x40
 2237 00a9 18       		.uleb128 0x18
 2238 00aa 9742     		.uleb128 0x2117
 2239 00ac 19       		.uleb128 0x19
 2240 00ad 00       		.byte	0
 2241 00ae 00       		.byte	0
 2242 00af 0D       		.uleb128 0xd
 2243 00b0 2E       		.uleb128 0x2e
 2244 00b1 01       		.byte	0x1
 2245 00b2 3F       		.uleb128 0x3f
 2246 00b3 19       		.uleb128 0x19
 2247 00b4 03       		.uleb128 0x3
 2248 00b5 0E       		.uleb128 0xe
 2249 00b6 3A       		.uleb128 0x3a
 2250 00b7 0B       		.uleb128 0xb
 2251 00b8 3B       		.uleb128 0x3b
 2252 00b9 05       		.uleb128 0x5
 2253 00ba 27       		.uleb128 0x27
 2254 00bb 19       		.uleb128 0x19
 2255 00bc 11       		.uleb128 0x11
 2256 00bd 01       		.uleb128 0x1
 2257 00be 12       		.uleb128 0x12
 2258 00bf 06       		.uleb128 0x6
 2259 00c0 40       		.uleb128 0x40
 2260 00c1 18       		.uleb128 0x18
 2261 00c2 9742     		.uleb128 0x2117
 2262 00c4 19       		.uleb128 0x19
 2263 00c5 01       		.uleb128 0x1
 2264 00c6 13       		.uleb128 0x13
 2265 00c7 00       		.byte	0
 2266 00c8 00       		.byte	0
 2267 00c9 0E       		.uleb128 0xe
 2268 00ca 05       		.uleb128 0x5
 2269 00cb 00       		.byte	0
 2270 00cc 03       		.uleb128 0x3
 2271 00cd 0E       		.uleb128 0xe
 2272 00ce 3A       		.uleb128 0x3a
 2273 00cf 0B       		.uleb128 0xb
 2274 00d0 3B       		.uleb128 0x3b
 2275 00d1 05       		.uleb128 0x5
 2276 00d2 49       		.uleb128 0x49
 2277 00d3 13       		.uleb128 0x13
 2278 00d4 02       		.uleb128 0x2
 2279 00d5 18       		.uleb128 0x18
 2280 00d6 00       		.byte	0
 2281 00d7 00       		.byte	0
 2282 00d8 0F       		.uleb128 0xf
 2283 00d9 2E       		.uleb128 0x2e
 2284 00da 01       		.byte	0x1
 2285 00db 3F       		.uleb128 0x3f
 2286 00dc 19       		.uleb128 0x19
 2287 00dd 03       		.uleb128 0x3
 2288 00de 0E       		.uleb128 0xe
 2289 00df 3A       		.uleb128 0x3a
 2290 00e0 0B       		.uleb128 0xb
 2291 00e1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 69


 2292 00e2 05       		.uleb128 0x5
 2293 00e3 27       		.uleb128 0x27
 2294 00e4 19       		.uleb128 0x19
 2295 00e5 49       		.uleb128 0x49
 2296 00e6 13       		.uleb128 0x13
 2297 00e7 11       		.uleb128 0x11
 2298 00e8 01       		.uleb128 0x1
 2299 00e9 12       		.uleb128 0x12
 2300 00ea 06       		.uleb128 0x6
 2301 00eb 40       		.uleb128 0x40
 2302 00ec 18       		.uleb128 0x18
 2303 00ed 9742     		.uleb128 0x2117
 2304 00ef 19       		.uleb128 0x19
 2305 00f0 01       		.uleb128 0x1
 2306 00f1 13       		.uleb128 0x13
 2307 00f2 00       		.byte	0
 2308 00f3 00       		.byte	0
 2309 00f4 10       		.uleb128 0x10
 2310 00f5 34       		.uleb128 0x34
 2311 00f6 00       		.byte	0
 2312 00f7 03       		.uleb128 0x3
 2313 00f8 0E       		.uleb128 0xe
 2314 00f9 3A       		.uleb128 0x3a
 2315 00fa 0B       		.uleb128 0xb
 2316 00fb 3B       		.uleb128 0x3b
 2317 00fc 05       		.uleb128 0x5
 2318 00fd 49       		.uleb128 0x49
 2319 00fe 13       		.uleb128 0x13
 2320 00ff 02       		.uleb128 0x2
 2321 0100 17       		.uleb128 0x17
 2322 0101 00       		.byte	0
 2323 0102 00       		.byte	0
 2324 0103 11       		.uleb128 0x11
 2325 0104 34       		.uleb128 0x34
 2326 0105 00       		.byte	0
 2327 0106 03       		.uleb128 0x3
 2328 0107 0E       		.uleb128 0xe
 2329 0108 3A       		.uleb128 0x3a
 2330 0109 0B       		.uleb128 0xb
 2331 010a 3B       		.uleb128 0x3b
 2332 010b 05       		.uleb128 0x5
 2333 010c 49       		.uleb128 0x49
 2334 010d 13       		.uleb128 0x13
 2335 010e 02       		.uleb128 0x2
 2336 010f 18       		.uleb128 0x18
 2337 0110 00       		.byte	0
 2338 0111 00       		.byte	0
 2339 0112 12       		.uleb128 0x12
 2340 0113 05       		.uleb128 0x5
 2341 0114 00       		.byte	0
 2342 0115 03       		.uleb128 0x3
 2343 0116 0E       		.uleb128 0xe
 2344 0117 3A       		.uleb128 0x3a
 2345 0118 0B       		.uleb128 0xb
 2346 0119 3B       		.uleb128 0x3b
 2347 011a 05       		.uleb128 0x5
 2348 011b 49       		.uleb128 0x49
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 70


 2349 011c 13       		.uleb128 0x13
 2350 011d 02       		.uleb128 0x2
 2351 011e 17       		.uleb128 0x17
 2352 011f 00       		.byte	0
 2353 0120 00       		.byte	0
 2354 0121 13       		.uleb128 0x13
 2355 0122 0F       		.uleb128 0xf
 2356 0123 00       		.byte	0
 2357 0124 0B       		.uleb128 0xb
 2358 0125 0B       		.uleb128 0xb
 2359 0126 49       		.uleb128 0x49
 2360 0127 13       		.uleb128 0x13
 2361 0128 00       		.byte	0
 2362 0129 00       		.byte	0
 2363 012a 14       		.uleb128 0x14
 2364 012b 26       		.uleb128 0x26
 2365 012c 00       		.byte	0
 2366 012d 49       		.uleb128 0x49
 2367 012e 13       		.uleb128 0x13
 2368 012f 00       		.byte	0
 2369 0130 00       		.byte	0
 2370 0131 15       		.uleb128 0x15
 2371 0132 0B       		.uleb128 0xb
 2372 0133 01       		.byte	0x1
 2373 0134 11       		.uleb128 0x11
 2374 0135 01       		.uleb128 0x1
 2375 0136 12       		.uleb128 0x12
 2376 0137 06       		.uleb128 0x6
 2377 0138 00       		.byte	0
 2378 0139 00       		.byte	0
 2379 013a 16       		.uleb128 0x16
 2380 013b 34       		.uleb128 0x34
 2381 013c 00       		.byte	0
 2382 013d 03       		.uleb128 0x3
 2383 013e 0E       		.uleb128 0xe
 2384 013f 3A       		.uleb128 0x3a
 2385 0140 0B       		.uleb128 0xb
 2386 0141 3B       		.uleb128 0x3b
 2387 0142 0B       		.uleb128 0xb
 2388 0143 49       		.uleb128 0x49
 2389 0144 13       		.uleb128 0x13
 2390 0145 3F       		.uleb128 0x3f
 2391 0146 19       		.uleb128 0x19
 2392 0147 02       		.uleb128 0x2
 2393 0148 18       		.uleb128 0x18
 2394 0149 00       		.byte	0
 2395 014a 00       		.byte	0
 2396 014b 17       		.uleb128 0x17
 2397 014c 01       		.uleb128 0x1
 2398 014d 01       		.byte	0x1
 2399 014e 49       		.uleb128 0x49
 2400 014f 13       		.uleb128 0x13
 2401 0150 01       		.uleb128 0x1
 2402 0151 13       		.uleb128 0x13
 2403 0152 00       		.byte	0
 2404 0153 00       		.byte	0
 2405 0154 18       		.uleb128 0x18
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 71


 2406 0155 21       		.uleb128 0x21
 2407 0156 00       		.byte	0
 2408 0157 49       		.uleb128 0x49
 2409 0158 13       		.uleb128 0x13
 2410 0159 2F       		.uleb128 0x2f
 2411 015a 05       		.uleb128 0x5
 2412 015b 00       		.byte	0
 2413 015c 00       		.byte	0
 2414 015d 19       		.uleb128 0x19
 2415 015e 2E       		.uleb128 0x2e
 2416 015f 00       		.byte	0
 2417 0160 3F       		.uleb128 0x3f
 2418 0161 19       		.uleb128 0x19
 2419 0162 3C       		.uleb128 0x3c
 2420 0163 19       		.uleb128 0x19
 2421 0164 6E       		.uleb128 0x6e
 2422 0165 0E       		.uleb128 0xe
 2423 0166 03       		.uleb128 0x3
 2424 0167 0E       		.uleb128 0xe
 2425 0168 3A       		.uleb128 0x3a
 2426 0169 0B       		.uleb128 0xb
 2427 016a 3B       		.uleb128 0x3b
 2428 016b 0B       		.uleb128 0xb
 2429 016c 00       		.byte	0
 2430 016d 00       		.byte	0
 2431 016e 00       		.byte	0
 2432              		.section	.debug_loc,"",%progbits
 2433              	.Ldebug_loc0:
 2434              	.LLST0:
 2435 0000 06000000 		.4byte	.LVL2
 2436 0004 2F000000 		.4byte	.LVL3-1
 2437 0008 0100     		.2byte	0x1
 2438 000a 50       		.byte	0x50
 2439 000b 00000000 		.4byte	0
 2440 000f 00000000 		.4byte	0
 2441              	.LLST1:
 2442 0013 06000000 		.4byte	.LVL6
 2443 0017 2F000000 		.4byte	.LVL7-1
 2444 001b 0100     		.2byte	0x1
 2445 001d 50       		.byte	0x50
 2446 001e 00000000 		.4byte	0
 2447 0022 00000000 		.4byte	0
 2448              	.LLST2:
 2449 0026 22000000 		.4byte	.LVL12
 2450 002a 42000000 		.4byte	.LVL18
 2451 002e 0100     		.2byte	0x1
 2452 0030 50       		.byte	0x50
 2453 0031 48000000 		.4byte	.LVL20
 2454 0035 64000000 		.4byte	.LFE7
 2455 0039 0100     		.2byte	0x1
 2456 003b 50       		.byte	0x50
 2457 003c 00000000 		.4byte	0
 2458 0040 00000000 		.4byte	0
 2459              	.LLST3:
 2460 0044 0C000000 		.4byte	.LVL10
 2461 0048 24000000 		.4byte	.LVL13
 2462 004c 0100     		.2byte	0x1
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 72


 2463 004e 53       		.byte	0x53
 2464 004f 24000000 		.4byte	.LVL13
 2465 0053 26000000 		.4byte	.LVL14
 2466 0057 0300     		.2byte	0x3
 2467 0059 73       		.byte	0x73
 2468 005a 7F       		.sleb128 -1
 2469 005b 9F       		.byte	0x9f
 2470 005c 26000000 		.4byte	.LVL14
 2471 0060 34000000 		.4byte	.LVL16
 2472 0064 0100     		.2byte	0x1
 2473 0066 53       		.byte	0x53
 2474 0067 34000000 		.4byte	.LVL16
 2475 006b 40000000 		.4byte	.LVL17
 2476 006f 0500     		.2byte	0x5
 2477 0071 03       		.byte	0x3
 2478 0072 00000000 		.4byte	UART_Serial_rxBufferRead
 2479 0076 42000000 		.4byte	.LVL18
 2480 007a 44000000 		.4byte	.LVL19
 2481 007e 0100     		.2byte	0x1
 2482 0080 53       		.byte	0x53
 2483 0081 00000000 		.4byte	0
 2484 0085 00000000 		.4byte	0
 2485              	.LLST4:
 2486 0089 00000000 		.4byte	.LVL23
 2487 008d 22000000 		.4byte	.LVL26
 2488 0091 0200     		.2byte	0x2
 2489 0093 30       		.byte	0x30
 2490 0094 9F       		.byte	0x9f
 2491 0095 22000000 		.4byte	.LVL26
 2492 0099 42000000 		.4byte	.LVL32
 2493 009d 0100     		.2byte	0x1
 2494 009f 50       		.byte	0x50
 2495 00a0 42000000 		.4byte	.LVL32
 2496 00a4 54000000 		.4byte	.LVL35
 2497 00a8 0200     		.2byte	0x2
 2498 00aa 30       		.byte	0x30
 2499 00ab 9F       		.byte	0x9f
 2500 00ac 54000000 		.4byte	.LVL35
 2501 00b0 5C000000 		.4byte	.LVL36
 2502 00b4 0100     		.2byte	0x1
 2503 00b6 50       		.byte	0x50
 2504 00b7 5C000000 		.4byte	.LVL36
 2505 00bb 60000000 		.4byte	.LVL37
 2506 00bf 0200     		.2byte	0x2
 2507 00c1 30       		.byte	0x30
 2508 00c2 9F       		.byte	0x9f
 2509 00c3 60000000 		.4byte	.LVL37
 2510 00c7 84000000 		.4byte	.LFE9
 2511 00cb 0100     		.2byte	0x1
 2512 00cd 50       		.byte	0x50
 2513 00ce 00000000 		.4byte	0
 2514 00d2 00000000 		.4byte	0
 2515              	.LLST5:
 2516 00d6 48000000 		.4byte	.LVL34
 2517 00da 62000000 		.4byte	.LVL38
 2518 00de 0100     		.2byte	0x1
 2519 00e0 53       		.byte	0x53
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 73


 2520 00e1 00000000 		.4byte	0
 2521 00e5 00000000 		.4byte	0
 2522              	.LLST6:
 2523 00e9 0C000000 		.4byte	.LVL24
 2524 00ed 24000000 		.4byte	.LVL27
 2525 00f1 0100     		.2byte	0x1
 2526 00f3 53       		.byte	0x53
 2527 00f4 24000000 		.4byte	.LVL27
 2528 00f8 26000000 		.4byte	.LVL28
 2529 00fc 0300     		.2byte	0x3
 2530 00fe 73       		.byte	0x73
 2531 00ff 7F       		.sleb128 -1
 2532 0100 9F       		.byte	0x9f
 2533 0101 26000000 		.4byte	.LVL28
 2534 0105 34000000 		.4byte	.LVL30
 2535 0109 0100     		.2byte	0x1
 2536 010b 53       		.byte	0x53
 2537 010c 34000000 		.4byte	.LVL30
 2538 0110 40000000 		.4byte	.LVL31
 2539 0114 0500     		.2byte	0x5
 2540 0116 03       		.byte	0x3
 2541 0117 00000000 		.4byte	UART_Serial_rxBufferRead
 2542 011b 42000000 		.4byte	.LVL32
 2543 011f 44000000 		.4byte	.LVL33
 2544 0123 0100     		.2byte	0x1
 2545 0125 53       		.byte	0x53
 2546 0126 00000000 		.4byte	0
 2547 012a 00000000 		.4byte	0
 2548              	.LLST7:
 2549 012e 0C000000 		.4byte	.LVL39
 2550 0132 16000000 		.4byte	.LVL40
 2551 0136 0100     		.2byte	0x1
 2552 0138 54       		.byte	0x54
 2553 0139 00000000 		.4byte	0
 2554 013d 00000000 		.4byte	0
 2555              	.LLST8:
 2556 0141 40000000 		.4byte	.LVL42
 2557 0145 42000000 		.4byte	.LVL43
 2558 0149 0100     		.2byte	0x1
 2559 014b 50       		.byte	0x50
 2560 014c 54000000 		.4byte	.LVL44
 2561 0150 56000000 		.4byte	.LVL45
 2562 0154 0100     		.2byte	0x1
 2563 0156 50       		.byte	0x50
 2564 0157 58000000 		.4byte	.LVL46
 2565 015b 6C000000 		.4byte	.LFE11
 2566 015f 0100     		.2byte	0x1
 2567 0161 50       		.byte	0x50
 2568 0162 00000000 		.4byte	0
 2569 0166 00000000 		.4byte	0
 2570              	.LLST9:
 2571 016a 06000000 		.4byte	.LVL47
 2572 016e 1B000000 		.4byte	.LVL48-1
 2573 0172 0100     		.2byte	0x1
 2574 0174 50       		.byte	0x50
 2575 0175 00000000 		.4byte	0
 2576 0179 00000000 		.4byte	0
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 74


 2577              	.LLST10:
 2578 017d 00000000 		.4byte	.LVL55
 2579 0181 0A000000 		.4byte	.LVL57
 2580 0185 0100     		.2byte	0x1
 2581 0187 50       		.byte	0x50
 2582 0188 0A000000 		.4byte	.LVL57
 2583 018c 14000000 		.4byte	.LVL61
 2584 0190 0100     		.2byte	0x1
 2585 0192 55       		.byte	0x55
 2586 0193 14000000 		.4byte	.LVL61
 2587 0197 18000000 		.4byte	.LVL62
 2588 019b 0100     		.2byte	0x1
 2589 019d 50       		.byte	0x50
 2590 019e 18000000 		.4byte	.LVL62
 2591 01a2 20000000 		.4byte	.LVL63
 2592 01a6 0100     		.2byte	0x1
 2593 01a8 55       		.byte	0x55
 2594 01a9 20000000 		.4byte	.LVL63
 2595 01ad 24000000 		.4byte	.LFE20
 2596 01b1 0400     		.2byte	0x4
 2597 01b3 F3       		.byte	0xf3
 2598 01b4 01       		.uleb128 0x1
 2599 01b5 50       		.byte	0x50
 2600 01b6 9F       		.byte	0x9f
 2601 01b7 00000000 		.4byte	0
 2602 01bb 00000000 		.4byte	0
 2603              	.LLST11:
 2604 01bf 02000000 		.4byte	.LVL56
 2605 01c3 0A000000 		.4byte	.LVL57
 2606 01c7 0200     		.2byte	0x2
 2607 01c9 30       		.byte	0x30
 2608 01ca 9F       		.byte	0x9f
 2609 01cb 0A000000 		.4byte	.LVL57
 2610 01cf 10000000 		.4byte	.LVL59
 2611 01d3 0100     		.2byte	0x1
 2612 01d5 54       		.byte	0x54
 2613 01d6 12000000 		.4byte	.LVL60
 2614 01da 14000000 		.4byte	.LVL61
 2615 01de 0100     		.2byte	0x1
 2616 01e0 54       		.byte	0x54
 2617 01e1 14000000 		.4byte	.LVL61
 2618 01e5 18000000 		.4byte	.LVL62
 2619 01e9 0200     		.2byte	0x2
 2620 01eb 30       		.byte	0x30
 2621 01ec 9F       		.byte	0x9f
 2622 01ed 18000000 		.4byte	.LVL62
 2623 01f1 20000000 		.4byte	.LVL63
 2624 01f5 0100     		.2byte	0x1
 2625 01f7 54       		.byte	0x54
 2626 01f8 00000000 		.4byte	0
 2627 01fc 00000000 		.4byte	0
 2628              	.LLST12:
 2629 0200 00000000 		.4byte	.LVL64
 2630 0204 08000000 		.4byte	.LVL65
 2631 0208 0100     		.2byte	0x1
 2632 020a 50       		.byte	0x50
 2633 020b 08000000 		.4byte	.LVL65
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 75


 2634 020f 14000000 		.4byte	.LVL69
 2635 0213 0100     		.2byte	0x1
 2636 0215 56       		.byte	0x56
 2637 0216 14000000 		.4byte	.LVL69
 2638 021a 1C000000 		.4byte	.LVL70
 2639 021e 0100     		.2byte	0x1
 2640 0220 50       		.byte	0x50
 2641 0221 1C000000 		.4byte	.LVL70
 2642 0225 22000000 		.4byte	.LVL71
 2643 0229 0100     		.2byte	0x1
 2644 022b 56       		.byte	0x56
 2645 022c 22000000 		.4byte	.LVL71
 2646 0230 28000000 		.4byte	.LFE21
 2647 0234 0400     		.2byte	0x4
 2648 0236 F3       		.byte	0xf3
 2649 0237 01       		.uleb128 0x1
 2650 0238 50       		.byte	0x50
 2651 0239 9F       		.byte	0x9f
 2652 023a 00000000 		.4byte	0
 2653 023e 00000000 		.4byte	0
 2654              	.LLST13:
 2655 0242 00000000 		.4byte	.LVL64
 2656 0246 08000000 		.4byte	.LVL65
 2657 024a 0100     		.2byte	0x1
 2658 024c 51       		.byte	0x51
 2659 024d 08000000 		.4byte	.LVL65
 2660 0251 14000000 		.4byte	.LVL69
 2661 0255 0400     		.2byte	0x4
 2662 0257 F3       		.byte	0xf3
 2663 0258 01       		.uleb128 0x1
 2664 0259 51       		.byte	0x51
 2665 025a 9F       		.byte	0x9f
 2666 025b 14000000 		.4byte	.LVL69
 2667 025f 1C000000 		.4byte	.LVL70
 2668 0263 0100     		.2byte	0x1
 2669 0265 51       		.byte	0x51
 2670 0266 1C000000 		.4byte	.LVL70
 2671 026a 28000000 		.4byte	.LFE21
 2672 026e 0400     		.2byte	0x4
 2673 0270 F3       		.byte	0xf3
 2674 0271 01       		.uleb128 0x1
 2675 0272 51       		.byte	0x51
 2676 0273 9F       		.byte	0x9f
 2677 0274 00000000 		.4byte	0
 2678 0278 00000000 		.4byte	0
 2679              	.LLST14:
 2680 027c 00000000 		.4byte	.LVL64
 2681 0280 08000000 		.4byte	.LVL65
 2682 0284 0200     		.2byte	0x2
 2683 0286 30       		.byte	0x30
 2684 0287 9F       		.byte	0x9f
 2685 0288 08000000 		.4byte	.LVL65
 2686 028c 10000000 		.4byte	.LVL67
 2687 0290 0100     		.2byte	0x1
 2688 0292 54       		.byte	0x54
 2689 0293 12000000 		.4byte	.LVL68
 2690 0297 14000000 		.4byte	.LVL69
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 76


 2691 029b 0100     		.2byte	0x1
 2692 029d 54       		.byte	0x54
 2693 029e 14000000 		.4byte	.LVL69
 2694 02a2 1C000000 		.4byte	.LVL70
 2695 02a6 0200     		.2byte	0x2
 2696 02a8 30       		.byte	0x30
 2697 02a9 9F       		.byte	0x9f
 2698 02aa 1C000000 		.4byte	.LVL70
 2699 02ae 22000000 		.4byte	.LVL71
 2700 02b2 0100     		.2byte	0x1
 2701 02b4 54       		.byte	0x54
 2702 02b5 00000000 		.4byte	0
 2703 02b9 00000000 		.4byte	0
 2704              	.LLST15:
 2705 02bd 00000000 		.4byte	.LVL72
 2706 02c1 0B000000 		.4byte	.LVL73-1
 2707 02c5 0100     		.2byte	0x1
 2708 02c7 50       		.byte	0x50
 2709 02c8 0B000000 		.4byte	.LVL73-1
 2710 02cc 20000000 		.4byte	.LFE22
 2711 02d0 0400     		.2byte	0x4
 2712 02d2 F3       		.byte	0xf3
 2713 02d3 01       		.uleb128 0x1
 2714 02d4 50       		.byte	0x50
 2715 02d5 9F       		.byte	0x9f
 2716 02d6 00000000 		.4byte	0
 2717 02da 00000000 		.4byte	0
 2718              	.LLST16:
 2719 02de 06000000 		.4byte	.LVL76
 2720 02e2 1C000000 		.4byte	.LVL77
 2721 02e6 0100     		.2byte	0x1
 2722 02e8 53       		.byte	0x53
 2723 02e9 1C000000 		.4byte	.LVL77
 2724 02ed 24000000 		.4byte	.LFE23
 2725 02f1 0100     		.2byte	0x1
 2726 02f3 50       		.byte	0x50
 2727 02f4 00000000 		.4byte	0
 2728 02f8 00000000 		.4byte	0
 2729              	.LLST17:
 2730 02fc 06000000 		.4byte	.LVL78
 2731 0300 1B000000 		.4byte	.LVL79-1
 2732 0304 0100     		.2byte	0x1
 2733 0306 50       		.byte	0x50
 2734 0307 00000000 		.4byte	0
 2735 030b 00000000 		.4byte	0
 2736              	.LLST18:
 2737 030f 00000000 		.4byte	.LVL80
 2738 0313 3E000000 		.4byte	.LVL85
 2739 0317 0100     		.2byte	0x1
 2740 0319 50       		.byte	0x50
 2741 031a 3E000000 		.4byte	.LVL85
 2742 031e 5C000000 		.4byte	.LFE25
 2743 0322 0400     		.2byte	0x4
 2744 0324 F3       		.byte	0xf3
 2745 0325 01       		.uleb128 0x1
 2746 0326 50       		.byte	0x50
 2747 0327 9F       		.byte	0x9f
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 77


 2748 0328 00000000 		.4byte	0
 2749 032c 00000000 		.4byte	0
 2750              	.LLST19:
 2751 0330 24000000 		.4byte	.LVL81
 2752 0334 2A000000 		.4byte	.LVL82
 2753 0338 0100     		.2byte	0x1
 2754 033a 53       		.byte	0x53
 2755 033b 36000000 		.4byte	.LVL83
 2756 033f 3C000000 		.4byte	.LVL84
 2757 0343 0100     		.2byte	0x1
 2758 0345 53       		.byte	0x53
 2759 0346 00000000 		.4byte	0
 2760 034a 00000000 		.4byte	0
 2761              		.section	.debug_aranges,"",%progbits
 2762 0000 EC000000 		.4byte	0xec
 2763 0004 0200     		.2byte	0x2
 2764 0006 00000000 		.4byte	.Ldebug_info0
 2765 000a 04       		.byte	0x4
 2766 000b 00       		.byte	0
 2767 000c 0000     		.2byte	0
 2768 000e 0000     		.2byte	0
 2769 0010 00000000 		.4byte	.LFB1
 2770 0014 48000000 		.4byte	.LFE1-.LFB1
 2771 0018 00000000 		.4byte	.LFB2
 2772 001c 40000000 		.4byte	.LFE2-.LFB2
 2773 0020 00000000 		.4byte	.LFB0
 2774 0024 1C000000 		.4byte	.LFE0-.LFB0
 2775 0028 00000000 		.4byte	.LFB3
 2776 002c 40000000 		.4byte	.LFE3-.LFB3
 2777 0030 00000000 		.4byte	.LFB4
 2778 0034 04000000 		.4byte	.LFE4-.LFB4
 2779 0038 00000000 		.4byte	.LFB5
 2780 003c 02000000 		.4byte	.LFE5-.LFB5
 2781 0040 00000000 		.4byte	.LFB6
 2782 0044 0C000000 		.4byte	.LFE6-.LFB6
 2783 0048 00000000 		.4byte	.LFB7
 2784 004c 64000000 		.4byte	.LFE7-.LFB7
 2785 0050 00000000 		.4byte	.LFB8
 2786 0054 28000000 		.4byte	.LFE8-.LFB8
 2787 0058 00000000 		.4byte	.LFB9
 2788 005c 84000000 		.4byte	.LFE9-.LFB9
 2789 0060 00000000 		.4byte	.LFB10
 2790 0064 2C000000 		.4byte	.LFE10-.LFB10
 2791 0068 00000000 		.4byte	.LFB11
 2792 006c 6C000000 		.4byte	.LFE11-.LFB11
 2793 0070 00000000 		.4byte	.LFB12
 2794 0074 44000000 		.4byte	.LFE12-.LFB12
 2795 0078 00000000 		.4byte	.LFB13
 2796 007c 02000000 		.4byte	.LFE13-.LFB13
 2797 0080 00000000 		.4byte	.LFB14
 2798 0084 0C000000 		.4byte	.LFE14-.LFB14
 2799 0088 00000000 		.4byte	.LFB15
 2800 008c 0C000000 		.4byte	.LFE15-.LFB15
 2801 0090 00000000 		.4byte	.LFB16
 2802 0094 0C000000 		.4byte	.LFE16-.LFB16
 2803 0098 00000000 		.4byte	.LFB17
 2804 009c 14000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 78


 2805 00a0 00000000 		.4byte	.LFB18
 2806 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2807 00a8 00000000 		.4byte	.LFB19
 2808 00ac 18000000 		.4byte	.LFE19-.LFB19
 2809 00b0 00000000 		.4byte	.LFB20
 2810 00b4 24000000 		.4byte	.LFE20-.LFB20
 2811 00b8 00000000 		.4byte	.LFB21
 2812 00bc 28000000 		.4byte	.LFE21-.LFB21
 2813 00c0 00000000 		.4byte	.LFB22
 2814 00c4 20000000 		.4byte	.LFE22-.LFB22
 2815 00c8 00000000 		.4byte	.LFB23
 2816 00cc 24000000 		.4byte	.LFE23-.LFB23
 2817 00d0 00000000 		.4byte	.LFB24
 2818 00d4 24000000 		.4byte	.LFE24-.LFB24
 2819 00d8 00000000 		.4byte	.LFB25
 2820 00dc 5C000000 		.4byte	.LFE25-.LFB25
 2821 00e0 00000000 		.4byte	.LFB26
 2822 00e4 02000000 		.4byte	.LFE26-.LFB26
 2823 00e8 00000000 		.4byte	0
 2824 00ec 00000000 		.4byte	0
 2825              		.section	.debug_ranges,"",%progbits
 2826              	.Ldebug_ranges0:
 2827 0000 00000000 		.4byte	.LFB1
 2828 0004 48000000 		.4byte	.LFE1
 2829 0008 00000000 		.4byte	.LFB2
 2830 000c 40000000 		.4byte	.LFE2
 2831 0010 00000000 		.4byte	.LFB0
 2832 0014 1C000000 		.4byte	.LFE0
 2833 0018 00000000 		.4byte	.LFB3
 2834 001c 40000000 		.4byte	.LFE3
 2835 0020 00000000 		.4byte	.LFB4
 2836 0024 04000000 		.4byte	.LFE4
 2837 0028 00000000 		.4byte	.LFB5
 2838 002c 02000000 		.4byte	.LFE5
 2839 0030 00000000 		.4byte	.LFB6
 2840 0034 0C000000 		.4byte	.LFE6
 2841 0038 00000000 		.4byte	.LFB7
 2842 003c 64000000 		.4byte	.LFE7
 2843 0040 00000000 		.4byte	.LFB8
 2844 0044 28000000 		.4byte	.LFE8
 2845 0048 00000000 		.4byte	.LFB9
 2846 004c 84000000 		.4byte	.LFE9
 2847 0050 00000000 		.4byte	.LFB10
 2848 0054 2C000000 		.4byte	.LFE10
 2849 0058 00000000 		.4byte	.LFB11
 2850 005c 6C000000 		.4byte	.LFE11
 2851 0060 00000000 		.4byte	.LFB12
 2852 0064 44000000 		.4byte	.LFE12
 2853 0068 00000000 		.4byte	.LFB13
 2854 006c 02000000 		.4byte	.LFE13
 2855 0070 00000000 		.4byte	.LFB14
 2856 0074 0C000000 		.4byte	.LFE14
 2857 0078 00000000 		.4byte	.LFB15
 2858 007c 0C000000 		.4byte	.LFE15
 2859 0080 00000000 		.4byte	.LFB16
 2860 0084 0C000000 		.4byte	.LFE16
 2861 0088 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 79


 2862 008c 14000000 		.4byte	.LFE17
 2863 0090 00000000 		.4byte	.LFB18
 2864 0094 0C000000 		.4byte	.LFE18
 2865 0098 00000000 		.4byte	.LFB19
 2866 009c 18000000 		.4byte	.LFE19
 2867 00a0 00000000 		.4byte	.LFB20
 2868 00a4 24000000 		.4byte	.LFE20
 2869 00a8 00000000 		.4byte	.LFB21
 2870 00ac 28000000 		.4byte	.LFE21
 2871 00b0 00000000 		.4byte	.LFB22
 2872 00b4 20000000 		.4byte	.LFE22
 2873 00b8 00000000 		.4byte	.LFB23
 2874 00bc 24000000 		.4byte	.LFE23
 2875 00c0 00000000 		.4byte	.LFB24
 2876 00c4 24000000 		.4byte	.LFE24
 2877 00c8 00000000 		.4byte	.LFB25
 2878 00cc 5C000000 		.4byte	.LFE25
 2879 00d0 00000000 		.4byte	.LFB26
 2880 00d4 02000000 		.4byte	.LFE26
 2881 00d8 00000000 		.4byte	0
 2882 00dc 00000000 		.4byte	0
 2883              		.section	.debug_line,"",%progbits
 2884              	.Ldebug_line0:
 2885 0000 F2020000 		.section	.debug_str,"MS",%progbits,1
 2885      02005300 
 2885      00000201 
 2885      FB0E0D00 
 2885      01010101 
 2886              	.LASF66:
 2887 0000 55415254 		.ascii	"UART_Serial_initVar\000"
 2887      5F536572 
 2887      69616C5F 
 2887      696E6974 
 2887      56617200 
 2888              	.LASF10:
 2889 0014 75696E74 		.ascii	"uint16\000"
 2889      313600
 2890              	.LASF56:
 2891 001b 55415254 		.ascii	"UART_Serial_PutArray\000"
 2891      5F536572 
 2891      69616C5F 
 2891      50757441 
 2891      72726179 
 2892              	.LASF76:
 2893 0030 43794578 		.ascii	"CyExitCriticalSection\000"
 2893      69744372 
 2893      69746963 
 2893      616C5365 
 2893      6374696F 
 2894              	.LASF49:
 2895 0046 74784461 		.ascii	"txDataByte\000"
 2895      74614279 
 2895      746500
 2896              	.LASF52:
 2897 0051 55415254 		.ascii	"UART_Serial_PutChar\000"
 2897      5F536572 
 2897      69616C5F 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 80


 2897      50757443 
 2897      68617200 
 2898              	.LASF54:
 2899 0065 73747269 		.ascii	"string\000"
 2899      6E6700
 2900              	.LASF7:
 2901 006c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2901      206C6F6E 
 2901      6720756E 
 2901      7369676E 
 2901      65642069 
 2902              	.LASF69:
 2903 0083 55415254 		.ascii	"UART_Serial_rxBufferRead\000"
 2903      5F536572 
 2903      69616C5F 
 2903      72784275 
 2903      66666572 
 2904              	.LASF20:
 2905 009c 55415254 		.ascii	"UART_Serial_Init\000"
 2905      5F536572 
 2905      69616C5F 
 2905      496E6974 
 2905      00
 2906              	.LASF6:
 2907 00ad 6C6F6E67 		.ascii	"long long int\000"
 2907      206C6F6E 
 2907      6720696E 
 2907      7400
 2908              	.LASF0:
 2909 00bb 7369676E 		.ascii	"signed char\000"
 2909      65642063 
 2909      68617200 
 2910              	.LASF70:
 2911 00c7 55415254 		.ascii	"UART_Serial_rxBufferWrite\000"
 2911      5F536572 
 2911      69616C5F 
 2911      72784275 
 2911      66666572 
 2912              	.LASF64:
 2913 00e1 74785065 		.ascii	"txPeriod\000"
 2913      72696F64 
 2913      00
 2914              	.LASF58:
 2915 00ea 55415254 		.ascii	"UART_Serial_PutCRLF\000"
 2915      5F536572 
 2915      69616C5F 
 2915      50757443 
 2915      524C4600 
 2916              	.LASF4:
 2917 00fe 6C6F6E67 		.ascii	"long int\000"
 2917      20696E74 
 2917      00
 2918              	.LASF9:
 2919 0107 75696E74 		.ascii	"uint8\000"
 2919      3800
 2920              	.LASF13:
 2921 010d 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 81


 2921      6C6500
 2922              	.LASF43:
 2923 0114 61646472 		.ascii	"addressMode\000"
 2923      6573734D 
 2923      6F646500 
 2924              	.LASF60:
 2925 0120 55415254 		.ascii	"UART_Serial_ClearTxBuffer\000"
 2925      5F536572 
 2925      69616C5F 
 2925      436C6561 
 2925      72547842 
 2926              	.LASF59:
 2927 013a 55415254 		.ascii	"UART_Serial_GetTxBufferSize\000"
 2927      5F536572 
 2927      69616C5F 
 2927      47657454 
 2927      78427566 
 2928              	.LASF72:
 2929 0156 55415254 		.ascii	"UART_Serial_rxBufferOverflow\000"
 2929      5F536572 
 2929      69616C5F 
 2929      72784275 
 2929      66666572 
 2930              	.LASF11:
 2931 0173 75696E74 		.ascii	"uint32\000"
 2931      333200
 2932              	.LASF65:
 2933 017a 55415254 		.ascii	"UART_Serial_SetTxAddressMode\000"
 2933      5F536572 
 2933      69616C5F 
 2933      53657454 
 2933      78416464 
 2934              	.LASF27:
 2935 0197 636F6E74 		.ascii	"control\000"
 2935      726F6C00 
 2936              	.LASF25:
 2937 019f 55415254 		.ascii	"UART_Serial_WriteControlRegister\000"
 2937      5F536572 
 2937      69616C5F 
 2937      57726974 
 2937      65436F6E 
 2938              	.LASF62:
 2939 01c0 7265744D 		.ascii	"retMode\000"
 2939      6F646500 
 2940              	.LASF48:
 2941 01c8 55415254 		.ascii	"UART_Serial_WriteTxData\000"
 2941      5F536572 
 2941      69616C5F 
 2941      57726974 
 2941      65547844 
 2942              	.LASF8:
 2943 01e0 756E7369 		.ascii	"unsigned int\000"
 2943      676E6564 
 2943      20696E74 
 2943      00
 2944              	.LASF38:
 2945 01ed 6C6F6345 		.ascii	"locErrorStatus\000"
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 82


 2945      72726F72 
 2945      53746174 
 2945      757300
 2946              	.LASF5:
 2947 01fc 6C6F6E67 		.ascii	"long unsigned int\000"
 2947      20756E73 
 2947      69676E65 
 2947      6420696E 
 2947      7400
 2948              	.LASF55:
 2949 020e 62756649 		.ascii	"bufIndex\000"
 2949      6E646578 
 2949      00
 2950              	.LASF75:
 2951 0217 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2951      74657243 
 2951      72697469 
 2951      63616C53 
 2951      65637469 
 2952              	.LASF40:
 2953 022e 73697A65 		.ascii	"size\000"
 2953      00
 2954              	.LASF3:
 2955 0233 73686F72 		.ascii	"short unsigned int\000"
 2955      7420756E 
 2955      7369676E 
 2955      65642069 
 2955      6E7400
 2956              	.LASF73:
 2957 0246 4379496E 		.ascii	"CyIntSetVector\000"
 2957      74536574 
 2957      56656374 
 2957      6F7200
 2958              	.LASF50:
 2959 0255 55415254 		.ascii	"UART_Serial_ReadControlRegister\000"
 2959      5F536572 
 2959      69616C5F 
 2959      52656164 
 2959      436F6E74 
 2960              	.LASF28:
 2961 0275 696E7453 		.ascii	"intSrc\000"
 2961      726300
 2962              	.LASF44:
 2963 027c 55415254 		.ascii	"UART_Serial_SetRxAddress1\000"
 2963      5F536572 
 2963      69616C5F 
 2963      53657452 
 2963      78416464 
 2964              	.LASF46:
 2965 0296 55415254 		.ascii	"UART_Serial_SetRxAddress2\000"
 2965      5F536572 
 2965      69616C5F 
 2965      53657452 
 2965      78416464 
 2966              	.LASF33:
 2967 02b0 55415254 		.ascii	"UART_Serial_ReadRxStatus\000"
 2967      5F536572 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 83


 2967      69616C5F 
 2967      52656164 
 2967      52785374 
 2968              	.LASF37:
 2969 02c9 55415254 		.ascii	"UART_Serial_GetByte\000"
 2969      5F536572 
 2969      69616C5F 
 2969      47657442 
 2969      79746500 
 2970              	.LASF32:
 2971 02dd 55415254 		.ascii	"UART_Serial_ReadRxData\000"
 2971      5F536572 
 2971      69616C5F 
 2971      52656164 
 2971      52784461 
 2972              	.LASF26:
 2973 02f4 55415254 		.ascii	"UART_Serial_SetRxInterruptMode\000"
 2973      5F536572 
 2973      69616C5F 
 2973      53657452 
 2973      78496E74 
 2974              	.LASF17:
 2975 0313 72656733 		.ascii	"reg32\000"
 2975      3200
 2976              	.LASF63:
 2977 0319 746D7053 		.ascii	"tmpStat\000"
 2977      74617400 
 2978              	.LASF19:
 2979 0321 73697A65 		.ascii	"sizetype\000"
 2979      74797065 
 2979      00
 2980              	.LASF18:
 2981 032a 6C6F6E67 		.ascii	"long double\000"
 2981      20646F75 
 2981      626C6500 
 2982              	.LASF45:
 2983 0336 61646472 		.ascii	"address\000"
 2983      65737300 
 2984              	.LASF41:
 2985 033e 55415254 		.ascii	"UART_Serial_ClearRxBuffer\000"
 2985      5F536572 
 2985      69616C5F 
 2985      436C6561 
 2985      72527842 
 2986              	.LASF31:
 2987 0358 6C6F6352 		.ascii	"locRxBufferWrite\000"
 2987      78427566 
 2987      66657257 
 2987      72697465 
 2987      00
 2988              	.LASF36:
 2989 0369 72785374 		.ascii	"rxStatus\000"
 2989      61747573 
 2989      00
 2990              	.LASF67:
 2991 0372 55415254 		.ascii	"UART_Serial_errorStatus\000"
 2991      5F536572 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 84


 2991      69616C5F 
 2991      6572726F 
 2991      72537461 
 2992              	.LASF61:
 2993 038a 55415254 		.ascii	"UART_Serial_SendBreak\000"
 2993      5F536572 
 2993      69616C5F 
 2993      53656E64 
 2993      42726561 
 2994              	.LASF74:
 2995 03a0 4379496E 		.ascii	"CyIntSetPriority\000"
 2995      74536574 
 2995      5072696F 
 2995      72697479 
 2995      00
 2996              	.LASF12:
 2997 03b1 666C6F61 		.ascii	"float\000"
 2997      7400
 2998              	.LASF78:
 2999 03b7 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_Serial.c\000"
 2999      72617465 
 2999      645F536F 
 2999      75726365 
 2999      5C50536F 
 3000              	.LASF16:
 3001 03dc 72656738 		.ascii	"reg8\000"
 3001      00
 3002              	.LASF68:
 3003 03e1 55415254 		.ascii	"UART_Serial_rxBuffer\000"
 3003      5F536572 
 3003      69616C5F 
 3003      72784275 
 3003      66666572 
 3004              	.LASF1:
 3005 03f6 756E7369 		.ascii	"unsigned char\000"
 3005      676E6564 
 3005      20636861 
 3005      7200
 3006              	.LASF2:
 3007 0404 73686F72 		.ascii	"short int\000"
 3007      7420696E 
 3007      7400
 3008              	.LASF77:
 3009 040e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3009      43313120 
 3009      352E342E 
 3009      31203230 
 3009      31363036 
 3010 0441 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3010      20726576 
 3010      6973696F 
 3010      6E203233 
 3010      37373135 
 3011 0474 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3011      66756E63 
 3011      74696F6E 
 3011      2D736563 
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 85


 3011      74696F6E 
 3012              	.LASF57:
 3013 049c 62797465 		.ascii	"byteCount\000"
 3013      436F756E 
 3013      7400
 3014              	.LASF29:
 3015 04a6 72784461 		.ascii	"rxData\000"
 3015      746100
 3016              	.LASF71:
 3017 04ad 55415254 		.ascii	"UART_Serial_rxBufferLoopDetect\000"
 3017      5F536572 
 3017      69616C5F 
 3017      72784275 
 3017      66666572 
 3018              	.LASF23:
 3019 04cc 55415254 		.ascii	"UART_Serial_Stop\000"
 3019      5F536572 
 3019      69616C5F 
 3019      53746F70 
 3019      00
 3020              	.LASF15:
 3021 04dd 63686172 		.ascii	"char\000"
 3021      00
 3022              	.LASF47:
 3023 04e2 55415254 		.ascii	"UART_Serial_SetTxInterruptMode\000"
 3023      5F536572 
 3023      69616C5F 
 3023      53657454 
 3023      78496E74 
 3024              	.LASF42:
 3025 0501 55415254 		.ascii	"UART_Serial_SetRxAddressMode\000"
 3025      5F536572 
 3025      69616C5F 
 3025      53657452 
 3025      78416464 
 3026              	.LASF22:
 3027 051e 55415254 		.ascii	"UART_Serial_Start\000"
 3027      5F536572 
 3027      69616C5F 
 3027      53746172 
 3027      7400
 3028              	.LASF14:
 3029 0530 63686172 		.ascii	"char8\000"
 3029      3800
 3030              	.LASF53:
 3031 0536 55415254 		.ascii	"UART_Serial_PutString\000"
 3031      5F536572 
 3031      69616C5F 
 3031      50757453 
 3031      7472696E 
 3032              	.LASF39:
 3033 054c 55415254 		.ascii	"UART_Serial_GetRxBufferSize\000"
 3033      5F536572 
 3033      69616C5F 
 3033      47657452 
 3033      78427566 
 3034              	.LASF51:
ARM GAS  C:\Users\tonkl\AppData\Local\Temp\cc2BNlfG.s 			page 86


 3035 0568 55415254 		.ascii	"UART_Serial_ReadTxStatus\000"
 3035      5F536572 
 3035      69616C5F 
 3035      52656164 
 3035      54785374 
 3036              	.LASF30:
 3037 0581 6C6F6352 		.ascii	"locRxBufferRead\000"
 3037      78427566 
 3037      66657252 
 3037      65616400 
 3038              	.LASF24:
 3039 0591 656E6162 		.ascii	"enableInterrupts\000"
 3039      6C65496E 
 3039      74657272 
 3039      75707473 
 3039      00
 3040              	.LASF34:
 3041 05a2 73746174 		.ascii	"status\000"
 3041      757300
 3042              	.LASF35:
 3043 05a9 55415254 		.ascii	"UART_Serial_GetChar\000"
 3043      5F536572 
 3043      69616C5F 
 3043      47657443 
 3043      68617200 
 3044              	.LASF79:
 3045 05bd 443A5C57 		.ascii	"D:\\WORK\\Study\\Cypress_Study\\Study\\UART_Serial."
 3045      4F524B5C 
 3045      53747564 
 3045      795C4379 
 3045      70726573 
 3046 05eb 63796473 		.ascii	"cydsn\000"
 3046      6E00
 3047              	.LASF21:
 3048 05f1 55415254 		.ascii	"UART_Serial_Enable\000"
 3048      5F536572 
 3048      69616C5F 
 3048      456E6162 
 3048      6C6500
 3049              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
